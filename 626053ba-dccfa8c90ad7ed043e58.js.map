{"version":3,"sources":["webpack:///./node_modules/three/three.js"],"names":["v1","r","min","max","matrix","quaternion","q","startP","startEnd","points","closestPoint","x","y","z","v","segCenter","segDir","diff","box","p1","p2","sphere","v0","position","scale","m1","q1","obj","context","focus","fov","aspect","near","far","eyeRight","eyeLeft","color","textureLoader","materialLoader","offsetMatrix","matrixPosition","radians","axis","vector","THREE","REVISION","undefined","Number","EPSILON","Math","pow","sign","Function","prototype","name","Object","defineProperty","get","this","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","Color","g","b","set","setRGB","constructor","value","copy","setHex","setStyle","setScalar","scalar","hex","floor","setHSL","hue2rgb","p","t","h","s","l","euclideanModulo","clamp","style","handleAlpha","string","parseFloat","console","warn","m","exec","components","parseInt","size","charAt","ColorKeywords","clone","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","slice","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","add","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","alpha","equals","c","fromArray","array","offset","toArray","Quaternion","w","_x","_y","_z","_w","onChangeCallback","setFromEuler","euler","update","Euler","Error","c1","cos","c2","c3","s1","sin","s2","s3","order","setFromAxisAngle","angle","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","Vector3","dot","abs","crossVectors","normalize","inverse","conjugate","lengthSq","multiplyQuaternions","premultiply","a","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","atan2","ratioA","ratioB","onChange","callback","qa","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","f","Vector2","setX","setY","setComponent","getComponent","addVectors","addScaledVector","sub","subVectors","subScalar","isFinite","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","round","roundToZero","negate","lengthManhattan","PI","distanceTo","distanceToSquared","dx","dy","setLength","lerpVectors","v2","fromAttribute","attribute","itemSize","rotateAround","center","setZ","multiplyVectors","applyEuler","error","applyQuaternion","applyAxisAngle","applyMatrix3","e","applyMatrix4","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","temp","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","start","end","line","distanceSq","distance","at","result","closestPointToPointParameter","point","clampToLine","startEnd2","closestPointToPoint","Box2","Infinity","setFromPoints","makeEmpty","i","il","expandByPoint","setFromCenterAndSize","halfSize","isEmpty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","intersect","union","translate","Box3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromObject","object","scope","updateMatrixWorld","traverse","node","geometry","Geometry","vertices","BufferGeometry","attributes","positions","intersectsSphere","intersectsPlane","plane","constant","getBoundingSphere","Sphere","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","setFromMatrix4","applyToVector3Array","j","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","throwOnDegenerate","t11","t12","t13","det","msg","detInv","transpose","tmp","flattenToArrayOffset","getNormalMatrix","matrix4","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","x2","y2","z2","wx","wy","wz","lookAt","eye","up","n","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","getPosition","setPosition","t14","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","left","right","bottom","top","makePerspective","ymax","tan","DEG2RAD","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","intersectSphere","tca","d2","radius2","thc","t0","t1","distanceToPlane","denominator","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","normalMatrix","Spherical","other","makeSafe","vec3","RAD2DEG","generateUUID","chars","split","uuid","Array","rnd","random","join","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","isPowerOfTwo","nearestPowerOfTwo","log","LN2","nextPowerOfTwo","Spline","intPoint","weight","w2","w3","pa","pb","pc","pd","v3","interpolate","t2","t3","initFromArray","getPoint","k","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","push","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","edgeList","projectedPoint","minDistance","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","values","stride","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","create","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","DiscreteInterpolant","LinearInterpolant","offset1","offset0","weight1","weight0","QuaternionLinearInterpolant","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","Date","now","stop","getElapsedTime","getDelta","newTime","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","Layers","mask","channel","enable","toggle","disable","test","layers","ascSort","_intersectObject","raycaster","intersects","recursive","visible","raycast","children","Raycaster","params","Mesh","Line","LOD","Points","threshold","Sprite","defineProperties","PointCloud","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","intersectObject","sort","intersectObjects","objects","isArray","Object3D","Object3DIdCount","parent","DefaultUp","rotation","enumerable","modelViewMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","meta","isRootObject","geometries","materials","textures","images","metadata","version","generator","JSON","stringify","material","extractFromCache","cache","key","data","parse","child","Face3","materialIndex","vertexNormals","vertexColors","BufferAttribute","normalized","dynamic","updateRange","count","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","face","jl","computeBoundingBox","fromBufferGeometry","normals","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","idx","sortFacesByMaterialIndex","_id","newUvs1","newUvs2","parameters","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","uvsCopy","kl","dispose","DirectGeometry","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Uniform","onUpdate","onUpdateCallback","AnimationAction","_new","mixer","clip","localRoot","_mixer","_clip","_localRoot","tracks","nTracks","interpolants","interpolantSettings","interpolant","createInterpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","time","timeScale","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","play","_activateAction","_deactivateAction","reset","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setLoop","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","duration","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","times","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","accuIndex","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","accumulate","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationClip","resetDuration","trim","optimize","track","json","jsonTracks","frameTime","fps","KeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","AnimationUtils","getKeyframeOrder","sortedArray","NumberKeyframeTrack","findByName","objectOrClipArray","clipArray","o","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","animation","bones","nodeName","addNonemptyTrack","trackType","trackName","animationKeys","propertyName","destTracks","flattenJSON","clipName","hierarchyTracks","hierarchy","keys","morphTargetNames","morphTargetName","animationKey","boneName","VectorKeyframeTrack","QuaternionKeyframeTrack","AnimationMixer","root","_initMemoryManager","_accuIndex","clipAction","optionalRoot","rootUuid","clipObject","clipUuid","actionsForClip","_actionsByClip","prototypeAction","existingAction","actionByRoot","knownActions","newAction","_Action","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","bindings","_bindings","nBindings","_nActiveBindings","useCount","apply","uncacheClip","actionsByClip","actionsToRemove","cacheIndex","lastInactiveAction","pop","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingByName","_bindingsByRootAndName","binding","restoreOriginalState","_removeInactiveBinding","uncacheAction","bindingsByRoot","bindingsByName","referenceCount","_addInactiveBinding","path","parsedPath","PropertyMixer","PropertyBinding","ValueTypeName","getValueSize","_lendBinding","saveOriginalState","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","stats","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","rootNode","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","AnimationObjectGroup","var_args","_objects","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","nObjects","nCachedObjects","indicesByUUID","paths","parsedPaths","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","lastIndex","last","subscribe_","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","arraySlice","from","to","isTypedArray","subarray","convertArray","forceClone","BYTES_PER_ELEMENT","ArrayBuffer","isView","DataView","nValues","srcOffset","jsonKeys","valuePropertyName","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","message","getInterpolation","shift","timeOffset","endTime","nKeys","valid","prevTime","currTime","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","_getTrackTypeForValueTypeName","typeName","toLowerCase","ColorKeyframeTrack","BooleanKeyframeTrack","StringKeyframeTrack","parseTrackName","findNode","getValue","targetArray","bind","setValue","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","skeleton","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","_getValue_unbound","_setValue_unbound","dest","Composite","targetGroup","optionalParsedPath","_targetGroup","firstValidIndex","re","matches","results","bone","searchSkeleton","subTreeNode","searchNodeSubtree","childNode","mixFunction","bufferType","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","currentWeight","mix","originalValueOffset","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setBuffer","audioBuffer","pause","currentTime","disconnect","getFilters","setFilters","getFilter","setFilter","filter","setPlaybackRate","getPlaybackRate","getLoop","getVolume","setVolume","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","window","AudioContext","webkitAudioContext","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","AudioListener","destination","removeFilter","getMasterVolume","setMasterVolume","orientation","setOrientation","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","options","format","magFilter","minFilter","renderTarget","WebGLRenderTargetCube","updateCubeMap","renderer","scene","generateMipmaps","texture","activeCubeFace","render","setRenderTarget","zoom","updateProjectionMatrix","cx","cy","view","filmGauge","filmOffset","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","width","height","offsetX","offsetY","clearViewOffset","skew","StereoCamera","cameraL","cameraR","eyeSepOnProjection","Light","intensity","groundColor","decay","penumbra","LightShadow","bias","mapSize","map","AmbientLight","DirectionalLight","shadow","DirectionalLightShadow","light","HemisphereLight","skyColor","PointLight","power","SpotLight","SpotLightShadow","AudioLoader","manager","DefaultLoadingManager","load","url","onLoad","onProgress","onError","loader","XHRLoader","setResponseType","decodeAudioData","Cache","files","file","clear","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","initMaterials","texturePath","createMaterial","TextureLoader","MaterialLoader","loadTexture","repeat","wrap","anisotropy","fullPath","Handlers","setCrossOrigin","wrapS","wrapT","blending","specular","emissive","shininess","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","lightMap","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","aoMap","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","bumpMap","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","bumpScale","normalMap","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","normalScale","specularMap","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","alphaMap","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","side","opacity","transparent","setTextures","handlers","regex","cached","setTimeout","request","XMLHttpRequest","overrideMimeType","open","response","status","itemEnd","itemError","responseType","withCredentials","send","itemStart","setPath","setWithCredentials","FontLoader","text","substring","font","Font","ImageLoader","image","document","createElement","src","JSONLoader","_statusDomElement","setTexturePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","concat","morphAnimationClips","parseAnimations","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","TYPED_ARRAYS","typedArray","drawcalls","offsets","getTexture","roughness","metalness","uniforms","vertexShader","fragmentShader","shading","alphaTest","depthTest","depthWrite","colorWrite","wireframe","wireframeLinewidth","sizeAttenuation","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","emissiveIntensity","envMap","combine","reflectivity","lightMapIntensity","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","depth","depthSegments","segments","thetaStart","thetaLength","radiusTop","radiusBottom","radialSegments","openEnded","phiStart","phiLength","detail","innerRadius","outerRadius","thetaSegments","phiSegments","tube","tubularSegments","arc","loadImage","parseConstant","Texture","mapping","getGeometry","getMaterial","Scene","SkinnedMesh","Group","levels","level","addLevel","CubeTextureLoader","urls","CubeTexture","loaded","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","texDatas","isCubemap","Material","MaterialIdCount","fog","lights","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","clippingPlanes","clipShadows","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","setValues","newValue","currentValue","isRoot","srcPlanes","dstPlanes","LineBasicMaterial","linewidth","linecap","linejoin","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshDepthMaterial","depthPacking","MeshLambertMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshStandardMaterial","defines","envMapIntensity","MeshPhysicalMaterial","MultiMaterial","PointsMaterial","ShaderMaterial","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","ShadowMaterial","UniformsLib","ShaderChunk","encoding","TextureIdCount","sourceFile","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","canvas","toDataURL","getContext","drawImage","getDataURL","transformUv","DepthTexture","CanvasTexture","VideoTexture","video","requestAnimationFrame","readyState","HAVE_CURRENT_DATA","inverseMatrix","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","faceIndex","nbVertices","drawMode","updateMorphTargets","setDrawMode","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","checkBufferGeometryIntersection","intersection","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","sw","vec","skinWeight","getObjectForDistance","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","merged","uniforms_src","uniforms_dst","parameter_src","common","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","properties","ShaderLib","WebGLRenderer","_canvas","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","opaqueObjects","opaqueObjectsLastIndex","transparentObjects","transparentObjectsLastIndex","sprites","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","localClippingEnabled","gammaInput","gammaOutput","physicallyCorrectLights","toneMapping","toneMappingExposure","toneMappingWhitePoint","maxMorphTargets","maxMorphNormals","autoScaleCubemaps","_gl","_this","_currentProgram","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentScissor","_currentScissorTest","_currentViewport","_usedTextureUnits","_clearColor","_clearAlpha","_width","_height","_pixelRatio","_scissor","_scissorTest","_viewport","_frustum","_clipping","WebGLClipping","_clippingEnabled","_localClippingEnabled","_sphere","_projScreenMatrix","_vector3","_lights","ambient","directional","directionalShadowMap","directionalShadowMatrix","spot","spotShadowMap","spotShadowMatrix","pointShadowMap","pointShadowMatrix","hemi","shadows","_infoMemory","_infoRender","calls","info","memory","programs","getShaderPrecisionFormat","onContextLost","_isWebGL2","WebGL2RenderingContext","WebGLExtensions","capabilities","WebGLCapabilities","state","WebGLState","paramThreeToGL","WebGLProperties","WebGLObjects","programCache","WebGLPrograms","lightCache","WebGLLights","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","getTargetPixelRatio","glClearColor","clearColor","setDefaultGLState","init","scissor","viewport","resetGLState","shadowMap","WebGLShadowMap","warned","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","preventDefault","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","deallocateTexture","onRenderTargetDispose","renderTargetProperties","depthTexture","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","program","releaseProgram","absNumericalSort","painterSortStable","reversePainterSortStable","pushRenderItem","renderItem","isSphereViewable","numPlanes","negRad","renderObjects","renderList","ImmediateRenderObject","setMaterial","setProgram","renderBufferImmediate","renderBufferDirect","CULL_FACE","setFlipSided","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","materialProperties","useCache","setState","numClippingPlanes","lightsHash","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","getAttributes","numSupportedMorphTargets","numSupportedMorphNormals","uniform","ambientLightColor","directionalLights","spotLights","pointLights","hemisphereLights","progUniforms","getUniforms","uniformsList","WebGLUniforms","seqWithValue","seq","dynamicUniforms","splitDynamic","initMaterial","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","logarithmicDepthBuffer","uCamPos","cameraPosition","setOptional","floatVertexTextures","markUniformsLightsNeedsUpdate","fogColor","fogNear","fogFar","fogDensity","refreshUniformsFog","diffuse","uvScaleMap","WebGLRenderTarget","offsetRepeat","flipEnvMap","refreshUniformsCommon","refreshUniformsLine","totalSize","refreshUniformsDash","clientHeight","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","refreshUniformsStandard","refreshUniformsPhysical","upload","dynUniforms","evalDynamic","setTextureParameters","textureType","isPowerOfTwoImage","extension","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","textureNeedsPowerOfTwo","HTMLImageElement","HTMLCanvasElement","makePowerOfTwo","glFormat","glType","mipmap","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","maxSize","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","setTexture2D","webglDepthTexture","setupDepthTexture","createRenderbuffer","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","getContextAttributes","forceContextLoss","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","setViewport","setScissor","setScissorTest","_boolean","getClearColor","setClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","initAttributes","buffers","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","bindBuffer","ARRAY_BUFFER","bufferData","positionArray","DYNAMIC_DRAW","enableAttribute","vertexAttribPointer","normalArray","nx","ny","nz","uvArray","colorArray","disableUnusedAttributes","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","startIndex","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","getAttributeBuffer","enableAttributeAndDivisor","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","ELEMENT_ARRAY_BUFFER","dataCount","rangeStart","rangeCount","groupStart","groupCount","drawStart","drawEnd","drawCount","setLineWidth","setMode","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","lineWidth","LINE_STRIP","POINTS","renderInstances","forceClear","projectObject","isObjectViewable","groupMaterial","beginShadows","lightShadowsLength","setupShadows","ll","viewMatrix","directionalLength","pointLength","spotLength","hemiLength","shadowBias","shadowRadius","shadowMapSize","coneCos","penumbraCos","setupLights","endShadows","TEXTURE_CUBE_MAP","updateRenderTargetMipmap","setFaceCulling","cullFace","frontFaceDirection","setCullFace","allocTextureUnit","textureUnit","maxTextures","complete","setTexture","setTextureCube","isCompressed","isDataTexture","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","getCurrentRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","setupRenderTarget","scissorTest","activeMipMapLevel","readRenderTargetPixels","restore","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","drawArraysInstancedANGLE","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","resetGlobalState","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","fromCache","nGlobal","lGlobal","clippingState","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","deleteAttribute","deleteAttributes","property","bufferproperty","__webglBuffer","deleteBuffer","removeAttributeBuffer","_bufferGeometry","updateAttribute","attributeProperties","usage","STATIC_DRAW","bufferSubData","updateBuffer","checkEdge","edges","list","TypeArray","WebGLProgram","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","unrollLoops","snippet","unroll","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","flatShading","generateExtensions","customDefines","generateDefines","createProgram","supportsVertexTextures","maxBones","doubleSided","flipSided","shadowMapEnabled","useFog","fogExp","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","getProgramParameter","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","shaderIDs","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","nClipPlanes","nVertexUniforms","allocateBones","currentRenderTarget","envMapMode","pl","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","lines","addLineNumbers","_renderer","_state","_lightShadows","_shadowMapSize","_lookTarget","_lightPositionWorld","_renderList","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","distanceShader","distanceUniforms","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","isPointLight","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","renderSingleSided","renderReverseSided","lightPos","shadowCamera","faceCount","BLEND","vpWidth","vpHeight","pars","shadowMatrix","vpDimensions","clearAlpha","WebGLColorBuffer","WebGLDepthBuffer","WebGLStencilBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","DEPTH_TEST","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","blendFunc","setMask","setTest","setFunc","setStencilTest","stencilTest","setStencilWrite","stencilWrite","setStencilFunc","stencilFunc","stencilRef","stencilMask","setStencilOp","stencilFail","stencilZFail","stencilZPass","setOp","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","factor","units","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","setClear","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","STENCIL_TEST","stencilOp","UniformContainer","arrayCacheF32","arrayCacheI32","flatten","nBlocks","blockSize","firstElem","allocTexUnits","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setValueT6","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","tex","setValueT6a","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","next","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","flares","vertexBuffer","elementBuffer","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","TEXTURE1","copyTexImage2D","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","Face4","LineStrip","LinePieces","MeshFaceMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","indexOffset","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","_boolean2","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","SceneUtils","createMultiMaterialObject","detach","attach","ShapeUtils","contour","triangulate","snip","verts","px","py","aX","aY","bX","bY","cX","cY","cCROSSap","bCROSScp","vertIndices","nv","triangulateShape","holes","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","seg1Pt","seg2Pt","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","allPointsMap","allpoints","hl","shapeWithoutHoles","hole","shape","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","indepHoles","intersectsHoleEdge","ihIdx","chkHole","hIdx","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","minShapeIndex","counter","h2","removeHoles","triangles","isClockWise","pts","b2p0","b2p1","b2p2","b3","b3p0","b3p1","b3p2","b3p3","Curve","getPointAt","getUtoTmapping","getPoints","divisions","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","current","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","getPointFunc","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","createPointsGeometry","createGeometry","createSpacedPointsGeometry","generateShapes","createPath","glyph","glyphs","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","Path","outline","_cachedOutline","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha","String","resolution","ret","createPaths","shapes","toShapes","fromPoints","args","lastargs","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","item","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","Shape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","subPaths","inActions","lastPath","extractSubpaths","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","extractAllPoints","extractPoints","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","closed","ClosedSplineCurve3","BoxGeometry","BoxBufferGeometry","CubeGeometry","vertexCount","calculateVertexCount","indexCount","vertexBufferOffset","uvBufferOffset","indexBufferOffset","numberOfVertices","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","CircleGeometry","CircleBufferGeometry","ii","segment","CylinderBufferGeometry","nbCap","calculateIndexCount","indexArray","halfHeight","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","tanTheta","indexRow","i3","generateTorso","CylinderGeometry","ConeBufferGeometry","ConeGeometry","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","extrudePts","splineTube","binormal","position2","ahole","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","curveSegments","steps","extrudePath","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","frames","TubeGeometry","FrenetFrames","shapesOffset","shapePoints","reverse","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","sidewalls","layeroffset","slen1","slen2","f4","f3","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","layer","buildLidFaces","buildSideFaces","indexA","indexB","indexC","indexD","LatheBufferGeometry","base","inverseSegments","n1","n2","LatheGeometry","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","offset2","RingBufferGeometry","radiusStep","thetaSegmentLevel","RingGeometry","SphereGeometry","SphereBufferGeometry","thetaEnd","verticesRow","v4","TextGeometry","TorusBufferGeometry","TorusGeometry","TorusKnotBufferGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TorusKnotGeometry","heightScale","taper","NoTaper","ip","jp","uva","uvb","uvc","uvd","grid","numpoints","pos2","tangents","SinusoidalTaper","smallest","tz","mat","MAX_VALUE","initialNormal3","PolyhedronGeometry","that","prepare","centroid","subdivide","azimuth","inclination","make","azi","correctUV","cols","aj","bj","rows","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","func","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","CameraHelper","pointMap","addLine","addPoint","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","endFrame","createAnimation","setAnimationWeight","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","module","exports"],"mappings":"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","file":"626053ba-dccfa8c90ad7ed043e58.js","sourcesContent":["require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.last-index-of\");\n\nrequire(\"core-js/modules/es6.string.repeat\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.typed.data-view\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.typed.float64-array\");\n\nrequire(\"core-js/modules/es6.typed.uint32-array\");\n\nrequire(\"core-js/modules/es6.typed.int32-array\");\n\nrequire(\"core-js/modules/es6.typed.uint16-array\");\n\nrequire(\"core-js/modules/es6.typed.int16-array\");\n\nrequire(\"core-js/modules/es6.typed.uint8-clamped-array\");\n\nrequire(\"core-js/modules/es6.typed.uint8-array\");\n\nrequire(\"core-js/modules/es6.typed.int8-array\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.object.define-properties\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.typed.float32-array\");\n\nrequire(\"core-js/modules/es6.string.sub\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.math.sign\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.number.epsilon\");\n\nvar self = self || {}; // File:src/Three.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nvar THREE = {\n  REVISION: '77'\n}; //\n\nif (typeof define === 'function' && define.amd) {\n  define('three', THREE);\n} else if ('undefined' !== typeof exports && 'undefined' !== typeof module) {\n  module.exports = THREE;\n} // Polyfills\n\n\nif (Number.EPSILON === undefined) {\n  Number.EPSILON = Math.pow(2, -52);\n} //\n\n\nif (Math.sign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n  Math.sign = function (x) {\n    return x < 0 ? -1 : x > 0 ? 1 : +x;\n  };\n}\n\nif (Function.prototype.name === undefined) {\n  // Missing in IE9-11.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n  Object.defineProperty(Function.prototype, 'name', {\n    get: function get() {\n      return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n    }\n  });\n}\n\nif (Object.assign === undefined) {\n  // Missing in IE.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n  (function () {\n    Object.assign = function (target) {\n      'use strict';\n\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n\n      return output;\n    };\n  })();\n} //\n\n\nObject.assign(THREE, {\n  // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n  MOUSE: {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2\n  },\n  // GL STATE CONSTANTS\n  CullFaceNone: 0,\n  CullFaceBack: 1,\n  CullFaceFront: 2,\n  CullFaceFrontBack: 3,\n  FrontFaceDirectionCW: 0,\n  FrontFaceDirectionCCW: 1,\n  // SHADOWING TYPES\n  BasicShadowMap: 0,\n  PCFShadowMap: 1,\n  PCFSoftShadowMap: 2,\n  // MATERIAL CONSTANTS\n  // side\n  FrontSide: 0,\n  BackSide: 1,\n  DoubleSide: 2,\n  // shading\n  FlatShading: 1,\n  SmoothShading: 2,\n  // colors\n  NoColors: 0,\n  FaceColors: 1,\n  VertexColors: 2,\n  // blending modes\n  NoBlending: 0,\n  NormalBlending: 1,\n  AdditiveBlending: 2,\n  SubtractiveBlending: 3,\n  MultiplyBlending: 4,\n  CustomBlending: 5,\n  // custom blending equations\n  // (numbers start from 100 not to clash with other\n  // mappings to OpenGL constants defined in Texture.js)\n  AddEquation: 100,\n  SubtractEquation: 101,\n  ReverseSubtractEquation: 102,\n  MinEquation: 103,\n  MaxEquation: 104,\n  // custom blending destination factors\n  ZeroFactor: 200,\n  OneFactor: 201,\n  SrcColorFactor: 202,\n  OneMinusSrcColorFactor: 203,\n  SrcAlphaFactor: 204,\n  OneMinusSrcAlphaFactor: 205,\n  DstAlphaFactor: 206,\n  OneMinusDstAlphaFactor: 207,\n  // custom blending source factors\n  //ZeroFactor: 200,\n  //OneFactor: 201,\n  //SrcAlphaFactor: 204,\n  //OneMinusSrcAlphaFactor: 205,\n  //DstAlphaFactor: 206,\n  //OneMinusDstAlphaFactor: 207,\n  DstColorFactor: 208,\n  OneMinusDstColorFactor: 209,\n  SrcAlphaSaturateFactor: 210,\n  // depth modes\n  NeverDepth: 0,\n  AlwaysDepth: 1,\n  LessDepth: 2,\n  LessEqualDepth: 3,\n  EqualDepth: 4,\n  GreaterEqualDepth: 5,\n  GreaterDepth: 6,\n  NotEqualDepth: 7,\n  // TEXTURE CONSTANTS\n  MultiplyOperation: 0,\n  MixOperation: 1,\n  AddOperation: 2,\n  // Tone Mapping modes\n  NoToneMapping: 0,\n  // do not do any tone mapping, not even exposure (required for special purpose passes.)\n  LinearToneMapping: 1,\n  // only apply exposure.\n  ReinhardToneMapping: 2,\n  Uncharted2ToneMapping: 3,\n  // John Hable\n  CineonToneMapping: 4,\n  // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n  // Mapping modes\n  UVMapping: 300,\n  CubeReflectionMapping: 301,\n  CubeRefractionMapping: 302,\n  EquirectangularReflectionMapping: 303,\n  EquirectangularRefractionMapping: 304,\n  SphericalReflectionMapping: 305,\n  CubeUVReflectionMapping: 306,\n  CubeUVRefractionMapping: 307,\n  // Wrapping modes\n  RepeatWrapping: 1000,\n  ClampToEdgeWrapping: 1001,\n  MirroredRepeatWrapping: 1002,\n  // Filters\n  NearestFilter: 1003,\n  NearestMipMapNearestFilter: 1004,\n  NearestMipMapLinearFilter: 1005,\n  LinearFilter: 1006,\n  LinearMipMapNearestFilter: 1007,\n  LinearMipMapLinearFilter: 1008,\n  // Data types\n  UnsignedByteType: 1009,\n  ByteType: 1010,\n  ShortType: 1011,\n  UnsignedShortType: 1012,\n  IntType: 1013,\n  UnsignedIntType: 1014,\n  FloatType: 1015,\n  HalfFloatType: 1025,\n  // Pixel types\n  //UnsignedByteType: 1009,\n  UnsignedShort4444Type: 1016,\n  UnsignedShort5551Type: 1017,\n  UnsignedShort565Type: 1018,\n  // Pixel formats\n  AlphaFormat: 1019,\n  RGBFormat: 1020,\n  RGBAFormat: 1021,\n  LuminanceFormat: 1022,\n  LuminanceAlphaFormat: 1023,\n  // THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\n  RGBEFormat: THREE.RGBAFormat,\n  //1024;\n  DepthFormat: 1026,\n  // DDS / ST3C Compressed texture formats\n  RGB_S3TC_DXT1_Format: 2001,\n  RGBA_S3TC_DXT1_Format: 2002,\n  RGBA_S3TC_DXT3_Format: 2003,\n  RGBA_S3TC_DXT5_Format: 2004,\n  // PVRTC compressed texture formats\n  RGB_PVRTC_4BPPV1_Format: 2100,\n  RGB_PVRTC_2BPPV1_Format: 2101,\n  RGBA_PVRTC_4BPPV1_Format: 2102,\n  RGBA_PVRTC_2BPPV1_Format: 2103,\n  // ETC compressed texture formats\n  RGB_ETC1_Format: 2151,\n  // Loop styles for AnimationAction\n  LoopOnce: 2200,\n  LoopRepeat: 2201,\n  LoopPingPong: 2202,\n  // Interpolation\n  InterpolateDiscrete: 2300,\n  InterpolateLinear: 2301,\n  InterpolateSmooth: 2302,\n  // Interpolant ending modes\n  ZeroCurvatureEnding: 2400,\n  ZeroSlopeEnding: 2401,\n  WrapAroundEnding: 2402,\n  // Triangle Draw modes\n  TrianglesDrawMode: 0,\n  TriangleStripDrawMode: 1,\n  TriangleFanDrawMode: 2,\n  // Texture Encodings\n  LinearEncoding: 3000,\n  // No encoding at all.\n  sRGBEncoding: 3001,\n  GammaEncoding: 3007,\n  // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\n  // The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\n  // These encodings should not specified as output encodings except in rare situations.\n  RGBEEncoding: 3002,\n  // AKA Radiance.\n  LogLuvEncoding: 3003,\n  RGBM7Encoding: 3004,\n  RGBM16Encoding: 3005,\n  RGBDEncoding: 3006,\n  // MaxRange is 256.\n  // Depth packing strategies\n  BasicDepthPacking: 3200,\n  // for writing to float textures for high precision or for visualizing results in RGB buffers\n  RGBADepthPacking: 3201 // for packing into RGBA buffers.\n\n}); // File:src/math/Color.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Color = function (r, g, b) {\n  if (g === undefined && b === undefined) {\n    // r is THREE.Color, hex or string\n    return this.set(r);\n  }\n\n  return this.setRGB(r, g, b);\n};\n\nTHREE.Color.prototype = {\n  constructor: THREE.Color,\n  r: 1,\n  g: 1,\n  b: 1,\n  set: function set(value) {\n    if (value instanceof THREE.Color) {\n      this.copy(value);\n    } else if (typeof value === 'number') {\n      this.setHex(value);\n    } else if (typeof value === 'string') {\n      this.setStyle(value);\n    }\n\n    return this;\n  },\n  setScalar: function setScalar(scalar) {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n  },\n  setHex: function setHex(hex) {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    return this;\n  },\n  setRGB: function setRGB(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    return this;\n  },\n  setHSL: function () {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n      return p;\n    }\n\n    return function (h, s, l) {\n      // h,s,l ranges are in 0.0 - 1.0\n      h = THREE.Math.euclideanModulo(h, 1);\n      s = THREE.Math.clamp(s, 0, 1);\n      l = THREE.Math.clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      return this;\n    };\n  }(),\n  setStyle: function setStyle(style) {\n    function handleAlpha(string) {\n      if (string === undefined) return;\n\n      if (parseFloat(string) < 1) {\n        console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n      }\n    }\n\n    var m;\n\n    if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n      var color;\n      var name = m[1];\n      var components = m[2];\n\n      switch (name) {\n        case 'rgb':\n        case 'rgba':\n          if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          break;\n\n        case 'hsl':\n        case 'hsla':\n          if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n            var h = parseFloat(color[1]) / 360;\n            var s = parseInt(color[2], 10) / 100;\n            var l = parseInt(color[3], 10) / 100;\n            handleAlpha(color[5]);\n            return this.setHSL(h, s, l);\n          }\n\n          break;\n      }\n    } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n      // hex color\n      var hex = m[1];\n      var size = hex.length;\n\n      if (size === 3) {\n        // #ff0\n        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n        return this;\n      } else if (size === 6) {\n        // #ff0000\n        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n        return this;\n      }\n    }\n\n    if (style && style.length > 0) {\n      // color keywords\n      var hex = THREE.ColorKeywords[style];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n    }\n\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor(this.r, this.g, this.b);\n  },\n  copy: function copy(color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  },\n  copyGammaToLinear: function copyGammaToLinear(color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    this.r = Math.pow(color.r, gammaFactor);\n    this.g = Math.pow(color.g, gammaFactor);\n    this.b = Math.pow(color.b, gammaFactor);\n    return this;\n  },\n  copyLinearToGamma: function copyLinearToGamma(color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n    this.r = Math.pow(color.r, safeInverse);\n    this.g = Math.pow(color.g, safeInverse);\n    this.b = Math.pow(color.b, safeInverse);\n    return this;\n  },\n  convertGammaToLinear: function convertGammaToLinear() {\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    this.r = r * r;\n    this.g = g * g;\n    this.b = b * b;\n    return this;\n  },\n  convertLinearToGamma: function convertLinearToGamma() {\n    this.r = Math.sqrt(this.r);\n    this.g = Math.sqrt(this.g);\n    this.b = Math.sqrt(this.b);\n    return this;\n  },\n  getHex: function getHex() {\n    return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n  },\n  getHexString: function getHexString() {\n    return ('000000' + this.getHex().toString(16)).slice(-6);\n  },\n  getHSL: function getHSL(optionalTarget) {\n    // h,s,l ranges are in 0.0 - 1.0\n    var hsl = optionalTarget || {\n      h: 0,\n      s: 0,\n      l: 0\n    };\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var hue, saturation;\n    var lightness = (min + max) / 2.0;\n\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      var delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n\n      hue /= 6;\n    }\n\n    hsl.h = hue;\n    hsl.s = saturation;\n    hsl.l = lightness;\n    return hsl;\n  },\n  getStyle: function getStyle() {\n    return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n  },\n  offsetHSL: function offsetHSL(h, s, l) {\n    var hsl = this.getHSL();\n    hsl.h += h;\n    hsl.s += s;\n    hsl.l += l;\n    this.setHSL(hsl.h, hsl.s, hsl.l);\n    return this;\n  },\n  add: function add(color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  },\n  addColors: function addColors(color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  },\n  addScalar: function addScalar(s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  },\n  multiply: function multiply(color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  },\n  multiplyScalar: function multiplyScalar(s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  },\n  lerp: function lerp(color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  },\n  equals: function equals(c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  },\n  fromArray: function fromArray(array, offset) {\n    if (offset === undefined) offset = 0;\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n    return this;\n  },\n  toArray: function toArray(array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  }\n};\nTHREE.ColorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n}; // File:src/math/Quaternion.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Quaternion = function (x, y, z, w) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._w = w !== undefined ? w : 1;\n};\n\nTHREE.Quaternion.prototype = {\n  constructor: THREE.Quaternion,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get w() {\n    return this._w;\n  },\n\n  set w(value) {\n    this._w = value;\n    this.onChangeCallback();\n  },\n\n  set: function set(x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor(this._x, this._y, this._z, this._w);\n  },\n  copy: function copy(quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromEuler: function setFromEuler(euler, update) {\n    if (euler instanceof THREE.Euler === false) {\n      throw new Error('THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    } // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n\n    var c1 = Math.cos(euler._x / 2);\n    var c2 = Math.cos(euler._y / 2);\n    var c3 = Math.cos(euler._z / 2);\n    var s1 = Math.sin(euler._x / 2);\n    var s2 = Math.sin(euler._y / 2);\n    var s3 = Math.sin(euler._z / 2);\n    var order = euler.order;\n\n    if (order === 'XYZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromAxisAngle: function setFromAxisAngle(axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n    var halfAngle = angle / 2,\n        s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function setFromRotationMatrix(m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10],\n        trace = m11 + m22 + m33,\n        s;\n\n    if (trace > 0) {\n      s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  setFromUnitVectors: function () {\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n    // assumes direction vectors vFrom and vTo are normalized\n    var v1, r;\n    var EPS = 0.000001;\n    return function (vFrom, vTo) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      r = vFrom.dot(vTo) + 1;\n\n      if (r < EPS) {\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          v1.set(-vFrom.y, vFrom.x, 0);\n        } else {\n          v1.set(0, -vFrom.z, vFrom.y);\n        }\n      } else {\n        v1.crossVectors(vFrom, vTo);\n      }\n\n      this._x = v1.x;\n      this._y = v1.y;\n      this._z = v1.z;\n      this._w = r;\n      return this.normalize();\n    };\n  }(),\n  inverse: function inverse() {\n    return this.conjugate().normalize();\n  },\n  conjugate: function conjugate() {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n    this.onChangeCallback();\n    return this;\n  },\n  dot: function dot(v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  },\n  lengthSq: function lengthSq() {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  },\n  length: function length() {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  },\n  normalize: function normalize() {\n    var l = this.length();\n\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  multiply: function multiply(q, p) {\n    if (p !== undefined) {\n      console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n      return this.multiplyQuaternions(q, p);\n    }\n\n    return this.multiplyQuaternions(this, q);\n  },\n  premultiply: function premultiply(q) {\n    return this.multiplyQuaternions(q, this);\n  },\n  multiplyQuaternions: function multiplyQuaternions(a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n    var qax = a._x,\n        qay = a._y,\n        qaz = a._z,\n        qaw = a._w;\n    var qbx = b._x,\n        qby = b._y,\n        qbz = b._z,\n        qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    this.onChangeCallback();\n    return this;\n  },\n  slerp: function slerp(qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    var x = this._x,\n        y = this._y,\n        z = this._z,\n        w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n\n    var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n    if (Math.abs(sinHalfTheta) < 0.001) {\n      this._w = 0.5 * (w + this._w);\n      this._x = 0.5 * (x + this._x);\n      this._y = 0.5 * (y + this._y);\n      this._z = 0.5 * (z + this._z);\n      return this;\n    }\n\n    var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n    var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n    this.onChangeCallback();\n    return this;\n  },\n  equals: function equals(quaternion) {\n    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n  },\n  fromArray: function fromArray(array, offset) {\n    if (offset === undefined) offset = 0;\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function toArray(array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  },\n  onChange: function onChange(callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function onChangeCallback() {}\n};\nObject.assign(THREE.Quaternion, {\n  slerp: function slerp(qa, qb, qm, t) {\n    return qm.copy(qa).slerp(qb, t);\n  },\n  slerpFlat: function slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n    // fuzz-free, array-based Quaternion SLERP operation\n    var x0 = src0[srcOffset0 + 0],\n        y0 = src0[srcOffset0 + 1],\n        z0 = src0[srcOffset0 + 2],\n        w0 = src0[srcOffset0 + 3],\n        x1 = src1[srcOffset1 + 0],\n        y1 = src1[srcOffset1 + 1],\n        z1 = src1[srcOffset1 + 2],\n        w1 = src1[srcOffset1 + 3];\n\n    if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n      var s = 1 - t,\n          cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n          dir = cos >= 0 ? 1 : -1,\n          sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n      if (sqrSin > Number.EPSILON) {\n        var sin = Math.sqrt(sqrSin),\n            len = Math.atan2(sin, cos * dir);\n        s = Math.sin(s * len) / sin;\n        t = Math.sin(t * len) / sin;\n      }\n\n      var tDir = t * dir;\n      x0 = x0 * s + x1 * tDir;\n      y0 = y0 * s + y1 * tDir;\n      z0 = z0 * s + z1 * tDir;\n      w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n      if (s === 1 - t) {\n        var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n        x0 *= f;\n        y0 *= f;\n        z0 *= f;\n        w0 *= f;\n      }\n    }\n\n    dst[dstOffset] = x0;\n    dst[dstOffset + 1] = y0;\n    dst[dstOffset + 2] = z0;\n    dst[dstOffset + 3] = w0;\n  }\n}); // File:src/math/Vector2.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\n\nTHREE.Vector2 = function (x, y) {\n  this.x = x || 0;\n  this.y = y || 0;\n};\n\nTHREE.Vector2.prototype = {\n  constructor: THREE.Vector2,\n\n  get width() {\n    return this.x;\n  },\n\n  set width(value) {\n    this.x = value;\n  },\n\n  get height() {\n    return this.y;\n  },\n\n  set height(value) {\n    this.y = value;\n  },\n\n  //\n  set: function set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  setScalar: function setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    return this;\n  },\n  setX: function setX(x) {\n    this.x = x;\n    return this;\n  },\n  setY: function setY(y) {\n    this.y = y;\n    return this;\n  },\n  setComponent: function setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function clone() {\n    return new this.constructor(this.x, this.y);\n  },\n  copy: function copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  },\n  add: function add(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  },\n  addScalar: function addScalar(s) {\n    this.x += s;\n    this.y += s;\n    return this;\n  },\n  addVectors: function addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  },\n  addScaledVector: function addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    return this;\n  },\n  sub: function sub(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  },\n  subScalar: function subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    return this;\n  },\n  subVectors: function subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  },\n  multiply: function multiply(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  },\n  multiplyScalar: function multiplyScalar(scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n\n    return this;\n  },\n  divide: function divide(v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  },\n  divideScalar: function divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    return this;\n  },\n  max: function max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    return this;\n  },\n  clamp: function clamp(min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector2();\n        max = new THREE.Vector2();\n      }\n\n      min.set(minVal, minVal);\n      max.set(maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function clampLength(min, max) {\n    var length = this.length();\n    return this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n  },\n  floor: function floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  },\n  ceil: function ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  },\n  round: function round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  },\n  roundToZero: function roundToZero() {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    return this;\n  },\n  negate: function negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  },\n  dot: function dot(v) {\n    return this.x * v.x + this.y * v.y;\n  },\n  lengthSq: function lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  },\n  length: function length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  },\n  lengthManhattan: function lengthManhattan() {\n    return Math.abs(this.x) + Math.abs(this.y);\n  },\n  normalize: function normalize() {\n    return this.divideScalar(this.length());\n  },\n  angle: function angle() {\n    // computes the angle in radians with respect to the positive x-axis\n    var angle = Math.atan2(this.y, this.x);\n    if (angle < 0) angle += 2 * Math.PI;\n    return angle;\n  },\n  distanceTo: function distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function distanceToSquared(v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  },\n  setLength: function setLength(length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  },\n  lerpVectors: function lerpVectors(v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  equals: function equals(v) {\n    return v.x === this.x && v.y === this.y;\n  },\n  fromArray: function fromArray(array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  },\n  toArray: function toArray(array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  },\n  fromAttribute: function fromAttribute(attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    return this;\n  },\n  rotateAround: function rotateAround(center, angle) {\n    var c = Math.cos(angle),\n        s = Math.sin(angle);\n    var x = this.x - center.x;\n    var y = this.y - center.y;\n    this.x = x * c - y * s + center.x;\n    this.y = x * s + y * c + center.y;\n    return this;\n  }\n}; // File:src/math/Vector3.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Vector3 = function (x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nTHREE.Vector3.prototype = {\n  constructor: THREE.Vector3,\n  set: function set(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  setScalar: function setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    return this;\n  },\n  setX: function setX(x) {\n    this.x = x;\n    return this;\n  },\n  setY: function setY(y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function setZ(z) {\n    this.z = z;\n    return this;\n  },\n  setComponent: function setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function clone() {\n    return new this.constructor(this.x, this.y, this.z);\n  },\n  copy: function copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  add: function add(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  },\n  addScalar: function addScalar(s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  },\n  addVectors: function addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  },\n  addScaledVector: function addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  },\n  sub: function sub(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  },\n  subScalar: function subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  },\n  subVectors: function subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  },\n  multiply: function multiply(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  },\n  multiplyScalar: function multiplyScalar(scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n  multiplyVectors: function multiplyVectors(a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  },\n  applyEuler: function () {\n    var quaternion;\n    return function applyEuler(euler) {\n      if (euler instanceof THREE.Euler === false) {\n        console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      return this.applyQuaternion(quaternion.setFromEuler(euler));\n    };\n  }(),\n  applyAxisAngle: function () {\n    var quaternion;\n    return function applyAxisAngle(axis, angle) {\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      return this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n    };\n  }(),\n  applyMatrix3: function applyMatrix3(m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  },\n  applyMatrix4: function applyMatrix4(m) {\n    // input: THREE.Matrix4 affine matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n    return this;\n  },\n  applyProjection: function applyProjection(m) {\n    // input: THREE.Matrix4 projection matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n    return this;\n  },\n  applyQuaternion: function applyQuaternion(q) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var qx = q.x,\n        qy = q.y,\n        qz = q.z,\n        qw = q.w; // calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  project: function () {\n    var matrix;\n    return function project(camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  unproject: function () {\n    var matrix;\n    return function unproject(camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  transformDirection: function transformDirection(m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    return this.normalize();\n  },\n  divide: function divide(v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  },\n  divideScalar: function divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    return this;\n  },\n  max: function max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    return this;\n  },\n  clamp: function clamp(min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector3();\n        max = new THREE.Vector3();\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function clampLength(min, max) {\n    var length = this.length();\n    return this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n  },\n  floor: function floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  },\n  ceil: function ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  },\n  round: function round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  },\n  roundToZero: function roundToZero() {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  },\n  negate: function negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  },\n  dot: function dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  lengthSq: function lengthSq() {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  lengthManhattan: function lengthManhattan() {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function normalize() {\n    return this.divideScalar(this.length());\n  },\n  setLength: function setLength(length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  },\n  lerpVectors: function lerpVectors(v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  cross: function cross(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n      return this.crossVectors(v, w);\n    }\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n    return this;\n  },\n  crossVectors: function crossVectors(a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  },\n  projectOnVector: function () {\n    var v1, dot;\n    return function projectOnVector(vector) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(vector).normalize();\n      dot = this.dot(v1);\n      return this.copy(v1).multiplyScalar(dot);\n    };\n  }(),\n  projectOnPlane: function () {\n    var v1;\n    return function projectOnPlane(planeNormal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(this).projectOnVector(planeNormal);\n      return this.sub(v1);\n    };\n  }(),\n  reflect: function () {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    var v1;\n    return function reflect(normal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n  angleTo: function angleTo(v) {\n    var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n    return Math.acos(THREE.Math.clamp(theta, -1, 1));\n  },\n  distanceTo: function distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function distanceToSquared(v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y,\n        dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  setFromSpherical: function setFromSpherical(s) {\n    var sinPhiRadius = Math.sin(s.phi) * s.radius;\n    this.x = sinPhiRadius * Math.sin(s.theta);\n    this.y = Math.cos(s.phi) * s.radius;\n    this.z = sinPhiRadius * Math.cos(s.theta);\n    return this;\n  },\n  setFromMatrixPosition: function setFromMatrixPosition(m) {\n    return this.setFromMatrixColumn(m, 3);\n  },\n  setFromMatrixScale: function setFromMatrixScale(m) {\n    var sx = this.setFromMatrixColumn(m, 0).length();\n    var sy = this.setFromMatrixColumn(m, 1).length();\n    var sz = this.setFromMatrixColumn(m, 2).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  },\n  setFromMatrixColumn: function setFromMatrixColumn(m, index) {\n    if (typeof m === 'number') {\n      console.warn('THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).');\n      var temp = m;\n      m = index;\n      index = temp;\n    }\n\n    return this.fromArray(m.elements, index * 4);\n  },\n  equals: function equals(v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function fromArray(array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  },\n  toArray: function toArray(array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  },\n  fromAttribute: function fromAttribute(attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    return this;\n  }\n}; // File:src/math/Vector4.js\n\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Vector4 = function (x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n};\n\nTHREE.Vector4.prototype = {\n  constructor: THREE.Vector4,\n  set: function set(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  },\n  setScalar: function setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n    return this;\n  },\n  setX: function setX(x) {\n    this.x = x;\n    return this;\n  },\n  setY: function setY(y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function setZ(z) {\n    this.z = z;\n    return this;\n  },\n  setW: function setW(w) {\n    this.w = w;\n    return this;\n  },\n  setComponent: function setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      case 3:\n        this.w = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      case 3:\n        return this.w;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function clone() {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  },\n  copy: function copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  },\n  add: function add(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  },\n  addScalar: function addScalar(s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  },\n  addVectors: function addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  },\n  addScaledVector: function addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  },\n  sub: function sub(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  },\n  subScalar: function subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  },\n  subVectors: function subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  },\n  multiplyScalar: function multiplyScalar(scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    }\n\n    return this;\n  },\n  applyMatrix4: function applyMatrix4(m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z,\n        w = this.w;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  },\n  divideScalar: function divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  setAxisAngleFromQuaternion: function setAxisAngleFromQuaternion(q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n    // q is assumed to be normalized\n    this.w = 2 * Math.acos(q.w);\n    var s = Math.sqrt(1 - q.w * q.w);\n\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n\n    return this;\n  },\n  setAxisAngleFromRotationMatrix: function setAxisAngleFromRotationMatrix(m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var angle,\n        x,\n        y,\n        z,\n        // variables for result\n    epsilon = 0.01,\n        // margin to allow for rounding errors\n    epsilon2 = 0.1,\n        // margin to distinguish between 0 and 180 degrees\n    te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      } // otherwise this singularity is angle = 180\n\n\n      angle = Math.PI;\n      var xx = (m11 + 1) / 2;\n      var yy = (m22 + 1) / 2;\n      var zz = (m33 + 1) / 2;\n      var xy = (m12 + m21) / 4;\n      var xz = (m13 + m31) / 4;\n      var yz = (m23 + m32) / 4;\n\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    } // as we have reached here there are no singularities so we can handle normally\n\n\n    var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  },\n  min: function min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n    return this;\n  },\n  max: function max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n    return this;\n  },\n  clamp: function clamp(min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    this.w = Math.max(min.w, Math.min(max.w, this.w));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector4();\n        max = new THREE.Vector4();\n      }\n\n      min.set(minVal, minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  floor: function floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  },\n  ceil: function ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  },\n  round: function round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  },\n  roundToZero: function roundToZero() {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  },\n  negate: function negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  },\n  dot: function dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  },\n  lengthSq: function lengthSq() {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  },\n  length: function length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  },\n  lengthManhattan: function lengthManhattan() {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  },\n  normalize: function normalize() {\n    return this.divideScalar(this.length());\n  },\n  setLength: function setLength(length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  },\n  lerpVectors: function lerpVectors(v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  equals: function equals(v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  },\n  fromArray: function fromArray(array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  },\n  toArray: function toArray(array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  },\n  fromAttribute: function fromAttribute(attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    this.w = attribute.array[index + 3];\n    return this;\n  }\n}; // File:src/math/Euler.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Euler = function (x, y, z, order) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._order = order || THREE.Euler.DefaultOrder;\n};\n\nTHREE.Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\nTHREE.Euler.DefaultOrder = 'XYZ';\nTHREE.Euler.prototype = {\n  constructor: THREE.Euler,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get order() {\n    return this._order;\n  },\n\n  set order(value) {\n    this._order = value;\n    this.onChangeCallback();\n  },\n\n  set: function set(x, y, z, order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  },\n  copy: function copy(euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function setFromRotationMatrix(m, order, update) {\n    var clamp = THREE.Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[0],\n        m12 = te[4],\n        m13 = te[8];\n    var m21 = te[1],\n        m22 = te[5],\n        m23 = te[9];\n    var m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n    order = order || this._order;\n\n    if (order === 'XYZ') {\n      this._y = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < 0.99999) {\n        this._x = Math.atan2(-m23, m33);\n        this._z = Math.atan2(-m12, m11);\n      } else {\n        this._x = Math.atan2(m32, m22);\n        this._z = 0;\n      }\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(-clamp(m23, -1, 1));\n\n      if (Math.abs(m23) < 0.99999) {\n        this._y = Math.atan2(m13, m33);\n        this._z = Math.atan2(m21, m22);\n      } else {\n        this._y = Math.atan2(-m31, m11);\n        this._z = 0;\n      }\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(m32, -1, 1));\n\n      if (Math.abs(m32) < 0.99999) {\n        this._y = Math.atan2(-m31, m33);\n        this._z = Math.atan2(-m12, m22);\n      } else {\n        this._y = 0;\n        this._z = Math.atan2(m21, m11);\n      }\n    } else if (order === 'ZYX') {\n      this._y = Math.asin(-clamp(m31, -1, 1));\n\n      if (Math.abs(m31) < 0.99999) {\n        this._x = Math.atan2(m32, m33);\n        this._z = Math.atan2(m21, m11);\n      } else {\n        this._x = 0;\n        this._z = Math.atan2(-m12, m22);\n      }\n    } else if (order === 'YZX') {\n      this._z = Math.asin(clamp(m21, -1, 1));\n\n      if (Math.abs(m21) < 0.99999) {\n        this._x = Math.atan2(-m23, m22);\n        this._y = Math.atan2(-m31, m11);\n      } else {\n        this._x = 0;\n        this._y = Math.atan2(m13, m33);\n      }\n    } else if (order === 'XZY') {\n      this._z = Math.asin(-clamp(m12, -1, 1));\n\n      if (Math.abs(m12) < 0.99999) {\n        this._x = Math.atan2(m32, m22);\n        this._y = Math.atan2(m13, m11);\n      } else {\n        this._x = Math.atan2(-m23, m33);\n        this._y = 0;\n      }\n    } else {\n      console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n    }\n\n    this._order = order;\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromQuaternion: function () {\n    var matrix;\n    return function (q, order, update) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.makeRotationFromQuaternion(q);\n      return this.setFromRotationMatrix(matrix, order, update);\n    };\n  }(),\n  setFromVector3: function setFromVector3(v, order) {\n    return this.set(v.x, v.y, v.z, order || this._order);\n  },\n  reorder: function () {\n    // WARNING: this discards revolution information -bhouston\n    var q = new THREE.Quaternion();\n    return function (newOrder) {\n      q.setFromEuler(this);\n      return this.setFromQuaternion(q, newOrder);\n    };\n  }(),\n  equals: function equals(euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  },\n  fromArray: function fromArray(array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function toArray(array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  },\n  toVector3: function toVector3(optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this._x, this._y, this._z);\n    } else {\n      return new THREE.Vector3(this._x, this._y, this._z);\n    }\n  },\n  onChange: function onChange(callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function onChangeCallback() {}\n}; // File:src/math/Line3.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Line3 = function (start, end) {\n  this.start = start !== undefined ? start : new THREE.Vector3();\n  this.end = end !== undefined ? end : new THREE.Vector3();\n};\n\nTHREE.Line3.prototype = {\n  constructor: THREE.Line3,\n  set: function set(start, end) {\n    this.start.copy(start);\n    this.end.copy(end);\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(line) {\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n    return this;\n  },\n  center: function center(optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n  },\n  delta: function delta(optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors(this.end, this.start);\n  },\n  distanceSq: function distanceSq() {\n    return this.start.distanceToSquared(this.end);\n  },\n  distance: function distance() {\n    return this.start.distanceTo(this.end);\n  },\n  at: function at(t, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  },\n  closestPointToPointParameter: function () {\n    var startP = new THREE.Vector3();\n    var startEnd = new THREE.Vector3();\n    return function (point, clampToLine) {\n      startP.subVectors(point, this.start);\n      startEnd.subVectors(this.end, this.start);\n      var startEnd2 = startEnd.dot(startEnd);\n      var startEnd_startP = startEnd.dot(startP);\n      var t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n        t = THREE.Math.clamp(t, 0, 1);\n      }\n\n      return t;\n    };\n  }(),\n  closestPointToPoint: function closestPointToPoint(point, clampToLine, optionalTarget) {\n    var t = this.closestPointToPointParameter(point, clampToLine);\n    var result = optionalTarget || new THREE.Vector3();\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  },\n  applyMatrix4: function applyMatrix4(matrix) {\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n    return this;\n  },\n  equals: function equals(line) {\n    return line.start.equals(this.start) && line.end.equals(this.end);\n  }\n}; // File:src/math/Box2.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Box2 = function (min, max) {\n  this.min = min !== undefined ? min : new THREE.Vector2(+Infinity, +Infinity);\n  this.max = max !== undefined ? max : new THREE.Vector2(-Infinity, -Infinity);\n};\n\nTHREE.Box2.prototype = {\n  constructor: THREE.Box2,\n  set: function set(min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromPoints: function setFromPoints(points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new THREE.Vector2();\n    return function (center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function makeEmpty() {\n    this.min.x = this.min.y = +Infinity;\n    this.max.x = this.max.y = -Infinity;\n    return this;\n  },\n  isEmpty: function isEmpty() {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  },\n  center: function center(optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  size: function size(optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function expandByPoint(point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function expandByVector(vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function expandByScalar(scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function containsPoint(point) {\n    if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y) {\n      return false;\n    }\n\n    return true;\n  },\n  containsBox: function containsBox(box) {\n    if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y) {\n      return true;\n    }\n\n    return false;\n  },\n  getParameter: function getParameter(point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new THREE.Vector2();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n  },\n  intersectsBox: function intersectsBox(box) {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y) {\n      return false;\n    }\n\n    return true;\n  },\n  clampPoint: function clampPoint(point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector2();\n    return function (point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  intersect: function intersect(box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function union(box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  translate: function translate(offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function equals(box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}; // File:src/math/Box3.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Box3 = function (min, max) {\n  this.min = min !== undefined ? min : new THREE.Vector3(+Infinity, +Infinity, +Infinity);\n  this.max = max !== undefined ? max : new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n};\n\nTHREE.Box3.prototype = {\n  constructor: THREE.Box3,\n  set: function set(min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromArray: function setFromArray(array) {\n    var minX = +Infinity;\n    var minY = +Infinity;\n    var minZ = +Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    var maxZ = -Infinity;\n\n    for (var i = 0, l = array.length; i < l; i += 3) {\n      var x = array[i];\n      var y = array[i + 1];\n      var z = array[i + 2];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n  },\n  setFromPoints: function setFromPoints(points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new THREE.Vector3();\n    return function (center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  setFromObject: function () {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n    var v1 = new THREE.Vector3();\n    return function (object) {\n      var scope = this;\n      object.updateMatrixWorld(true);\n      this.makeEmpty();\n      object.traverse(function (node) {\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry instanceof THREE.Geometry) {\n            var vertices = geometry.vertices;\n\n            for (var i = 0, il = vertices.length; i < il; i++) {\n              v1.copy(vertices[i]);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          } else if (geometry instanceof THREE.BufferGeometry && geometry.attributes['position'] !== undefined) {\n            var positions = geometry.attributes['position'].array;\n\n            for (var i = 0, il = positions.length; i < il; i += 3) {\n              v1.fromArray(positions, i);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          }\n        }\n      });\n      return this;\n    };\n  }(),\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function makeEmpty() {\n    this.min.x = this.min.y = this.min.z = +Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n    return this;\n  },\n  isEmpty: function isEmpty() {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n  },\n  center: function center(optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  size: function size(optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function expandByPoint(point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function expandByVector(vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function expandByScalar(scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function containsPoint(point) {\n    if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  containsBox: function containsBox(box) {\n    if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z) {\n      return true;\n    }\n\n    return false;\n  },\n  getParameter: function getParameter(point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new THREE.Vector3();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n  },\n  intersectsBox: function intersectsBox(box) {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  intersectsSphere: function () {\n    var closestPoint;\n    return function intersectsSphere(sphere) {\n      if (closestPoint === undefined) closestPoint = new THREE.Vector3(); // Find the point on the AABB closest to the sphere center.\n\n      this.clampPoint(sphere.center, closestPoint); // If that point is inside the sphere, the AABB and sphere intersect.\n\n      return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    };\n  }(),\n  intersectsPlane: function intersectsPlane(plane) {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n    var min, max;\n\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x;\n      max = plane.normal.x * this.max.x;\n    } else {\n      min = plane.normal.x * this.max.x;\n      max = plane.normal.x * this.min.x;\n    }\n\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y;\n      max += plane.normal.y * this.max.y;\n    } else {\n      min += plane.normal.y * this.max.y;\n      max += plane.normal.y * this.min.y;\n    }\n\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z;\n      max += plane.normal.z * this.max.z;\n    } else {\n      min += plane.normal.z * this.max.z;\n      max += plane.normal.z * this.min.z;\n    }\n\n    return min <= plane.constant && max >= plane.constant;\n  },\n  clampPoint: function clampPoint(point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  getBoundingSphere: function () {\n    var v1 = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Sphere();\n      result.center = this.center();\n      result.radius = this.size(v1).length() * 0.5;\n      return result;\n    };\n  }(),\n  intersect: function intersect(box) {\n    this.min.max(box.min);\n    this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n    if (this.isEmpty()) this.makeEmpty();\n    return this;\n  },\n  union: function union(box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  applyMatrix4: function () {\n    var points = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\n    return function (matrix) {\n      // transform of empty box is an empty box.\n      if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n      points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n      points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n      points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n      points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n      points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n      points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n      points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n      points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n      this.setFromPoints(points);\n      return this;\n    };\n  }(),\n  translate: function translate(offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function equals(box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}; // File:src/math/Matrix3.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n * @author tschw\r\n */\n\nTHREE.Matrix3 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n  }\n};\n\nTHREE.Matrix3.prototype = {\n  constructor: THREE.Matrix3,\n  set: function set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    var te = this.elements;\n    te[0] = n11;\n    te[1] = n21;\n    te[2] = n31;\n    te[3] = n12;\n    te[4] = n22;\n    te[5] = n32;\n    te[6] = n13;\n    te[7] = n23;\n    te[8] = n33;\n    return this;\n  },\n  identity: function identity() {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().fromArray(this.elements);\n  },\n  copy: function copy(m) {\n    var me = m.elements;\n    this.set(me[0], me[3], me[6], me[1], me[4], me[7], me[2], me[5], me[8]);\n    return this;\n  },\n  setFromMatrix4: function setFromMatrix4(m) {\n    var me = m.elements;\n    this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n    return this;\n  },\n  applyToVector3Array: function () {\n    var v1;\n    return function (array, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n        v1.fromArray(array, j);\n        v1.applyMatrix3(this);\n        v1.toArray(array, j);\n      }\n\n      return array;\n    };\n  }(),\n  applyToBuffer: function () {\n    var v1;\n    return function applyToBuffer(buffer, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = buffer.length / buffer.itemSize;\n\n      for (var i = 0, j = offset; i < length; i++, j++) {\n        v1.x = buffer.getX(j);\n        v1.y = buffer.getY(j);\n        v1.z = buffer.getZ(j);\n        v1.applyMatrix3(this);\n        buffer.setXYZ(v1.x, v1.y, v1.z);\n      }\n\n      return buffer;\n    };\n  }(),\n  multiplyScalar: function multiplyScalar(s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n    return this;\n  },\n  determinant: function determinant() {\n    var te = this.elements;\n    var a = te[0],\n        b = te[1],\n        c = te[2],\n        d = te[3],\n        e = te[4],\n        f = te[5],\n        g = te[6],\n        h = te[7],\n        i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  },\n  getInverse: function getInverse(matrix, throwOnDegenerate) {\n    if (matrix instanceof THREE.Matrix4) {\n      console.error(\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\");\n    }\n\n    var me = matrix.elements,\n        te = this.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n12 = me[3],\n        n22 = me[4],\n        n32 = me[5],\n        n13 = me[6],\n        n23 = me[7],\n        n33 = me[8],\n        t11 = n33 * n22 - n32 * n23,\n        t12 = n32 * n13 - n33 * n12,\n        t13 = n23 * n12 - n22 * n13,\n        det = n11 * t11 + n21 * t12 + n31 * t13;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate || false) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      return this.identity();\n    }\n\n    var detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n31 * n23 - n33 * n21) * detInv;\n    te[2] = (n32 * n21 - n31 * n22) * detInv;\n    te[3] = t12 * detInv;\n    te[4] = (n33 * n11 - n31 * n13) * detInv;\n    te[5] = (n31 * n12 - n32 * n11) * detInv;\n    te[6] = t13 * detInv;\n    te[7] = (n21 * n13 - n23 * n11) * detInv;\n    te[8] = (n22 * n11 - n21 * n12) * detInv;\n    return this;\n  },\n  transpose: function transpose() {\n    var tmp,\n        m = this.elements;\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function flattenToArrayOffset(array, offset) {\n    console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated \" + \"- just use .toArray instead.\");\n    return this.toArray(array, offset);\n  },\n  getNormalMatrix: function getNormalMatrix(matrix4) {\n    return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n  },\n  transposeIntoArray: function transposeIntoArray(r) {\n    var m = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  },\n  fromArray: function fromArray(array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function toArray(array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    return array;\n  }\n}; // File:src/math/Matrix4.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Matrix4 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n  }\n};\n\nTHREE.Matrix4.prototype = {\n  constructor: THREE.Matrix4,\n  set: function set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    var te = this.elements;\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n    return this;\n  },\n  identity: function identity() {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function clone() {\n    return new THREE.Matrix4().fromArray(this.elements);\n  },\n  copy: function copy(m) {\n    this.elements.set(m.elements);\n    return this;\n  },\n  copyPosition: function copyPosition(m) {\n    var te = this.elements;\n    var me = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  },\n  extractBasis: function extractBasis(xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrixColumn(this, 0);\n    yAxis.setFromMatrixColumn(this, 1);\n    zAxis.setFromMatrixColumn(this, 2);\n    return this;\n  },\n  makeBasis: function makeBasis(xAxis, yAxis, zAxis) {\n    this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  extractRotation: function () {\n    var v1;\n    return function (m) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      var te = this.elements;\n      var me = m.elements;\n      var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n      var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n      var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      return this;\n    };\n  }(),\n  makeRotationFromEuler: function makeRotationFromEuler(euler) {\n    if (euler instanceof THREE.Euler === false) {\n      console.error('THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    }\n\n    var te = this.elements;\n    var x = euler.x,\n        y = euler.y,\n        z = euler.z;\n    var a = Math.cos(x),\n        b = Math.sin(x);\n    var c = Math.cos(y),\n        d = Math.sin(y);\n    var e = Math.cos(z),\n        f = Math.sin(z);\n\n    if (euler.order === 'XYZ') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    } // last column\n\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  makeRotationFromQuaternion: function makeRotationFromQuaternion(q) {\n    var te = this.elements;\n    var x = q.x,\n        y = q.y,\n        z = q.z,\n        w = q.w;\n    var x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    var xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    var yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    var wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    te[0] = 1 - (yy + zz);\n    te[4] = xy - wz;\n    te[8] = xz + wy;\n    te[1] = xy + wz;\n    te[5] = 1 - (xx + zz);\n    te[9] = yz - wx;\n    te[2] = xz - wy;\n    te[6] = yz + wx;\n    te[10] = 1 - (xx + yy); // last column\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  lookAt: function () {\n    var x, y, z;\n    return function (eye, target, up) {\n      if (x === undefined) {\n        x = new THREE.Vector3();\n        y = new THREE.Vector3();\n        z = new THREE.Vector3();\n      }\n\n      var te = this.elements;\n      z.subVectors(eye, target).normalize();\n\n      if (z.lengthSq() === 0) {\n        z.z = 1;\n      }\n\n      x.crossVectors(up, z).normalize();\n\n      if (x.lengthSq() === 0) {\n        z.z += 0.0001;\n        x.crossVectors(up, z).normalize();\n      }\n\n      y.crossVectors(z, x);\n      te[0] = x.x;\n      te[4] = y.x;\n      te[8] = z.x;\n      te[1] = x.y;\n      te[5] = y.y;\n      te[9] = z.y;\n      te[2] = x.z;\n      te[6] = y.z;\n      te[10] = z.z;\n      return this;\n    };\n  }(),\n  multiply: function multiply(m, n) {\n    if (n !== undefined) {\n      console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n      return this.multiplyMatrices(m, n);\n    }\n\n    return this.multiplyMatrices(this, m);\n  },\n  premultiply: function premultiply(m) {\n    return this.multiplyMatrices(m, this);\n  },\n  multiplyMatrices: function multiplyMatrices(a, b) {\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n    var a11 = ae[0],\n        a12 = ae[4],\n        a13 = ae[8],\n        a14 = ae[12];\n    var a21 = ae[1],\n        a22 = ae[5],\n        a23 = ae[9],\n        a24 = ae[13];\n    var a31 = ae[2],\n        a32 = ae[6],\n        a33 = ae[10],\n        a34 = ae[14];\n    var a41 = ae[3],\n        a42 = ae[7],\n        a43 = ae[11],\n        a44 = ae[15];\n    var b11 = be[0],\n        b12 = be[4],\n        b13 = be[8],\n        b14 = be[12];\n    var b21 = be[1],\n        b22 = be[5],\n        b23 = be[9],\n        b24 = be[13];\n    var b31 = be[2],\n        b32 = be[6],\n        b33 = be[10],\n        b34 = be[14];\n    var b41 = be[3],\n        b42 = be[7],\n        b43 = be[11],\n        b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  },\n  multiplyToArray: function multiplyToArray(a, b, r) {\n    var te = this.elements;\n    this.multiplyMatrices(a, b);\n    r[0] = te[0];\n    r[1] = te[1];\n    r[2] = te[2];\n    r[3] = te[3];\n    r[4] = te[4];\n    r[5] = te[5];\n    r[6] = te[6];\n    r[7] = te[7];\n    r[8] = te[8];\n    r[9] = te[9];\n    r[10] = te[10];\n    r[11] = te[11];\n    r[12] = te[12];\n    r[13] = te[13];\n    r[14] = te[14];\n    r[15] = te[15];\n    return this;\n  },\n  multiplyScalar: function multiplyScalar(s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n    return this;\n  },\n  applyToVector3Array: function () {\n    var v1;\n    return function (array, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n        v1.fromArray(array, j);\n        v1.applyMatrix4(this);\n        v1.toArray(array, j);\n      }\n\n      return array;\n    };\n  }(),\n  applyToBuffer: function () {\n    var v1;\n    return function applyToBuffer(buffer, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = buffer.length / buffer.itemSize;\n\n      for (var i = 0, j = offset; i < length; i++, j++) {\n        v1.x = buffer.getX(j);\n        v1.y = buffer.getY(j);\n        v1.z = buffer.getZ(j);\n        v1.applyMatrix4(this);\n        buffer.setXYZ(v1.x, v1.y, v1.z);\n      }\n\n      return buffer;\n    };\n  }(),\n  determinant: function determinant() {\n    var te = this.elements;\n    var n11 = te[0],\n        n12 = te[4],\n        n13 = te[8],\n        n14 = te[12];\n    var n21 = te[1],\n        n22 = te[5],\n        n23 = te[9],\n        n24 = te[13];\n    var n31 = te[2],\n        n32 = te[6],\n        n33 = te[10],\n        n34 = te[14];\n    var n41 = te[3],\n        n42 = te[7],\n        n43 = te[11],\n        n44 = te[15]; //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n  },\n  transpose: function transpose() {\n    var te = this.elements;\n    var tmp;\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function flattenToArrayOffset(array, offset) {\n    console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated \" + \"- just use .toArray instead.\");\n    return this.toArray(array, offset);\n  },\n  getPosition: function () {\n    var v1;\n    return function () {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n      return v1.setFromMatrixColumn(this, 3);\n    };\n  }(),\n  setPosition: function setPosition(v) {\n    var te = this.elements;\n    te[12] = v.x;\n    te[13] = v.y;\n    te[14] = v.z;\n    return this;\n  },\n  getInverse: function getInverse(m, throwOnDegenerate) {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    var te = this.elements,\n        me = m.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n41 = me[3],\n        n12 = me[4],\n        n22 = me[5],\n        n32 = me[6],\n        n42 = me[7],\n        n13 = me[8],\n        n23 = me[9],\n        n33 = me[10],\n        n43 = me[11],\n        n14 = me[12],\n        n24 = me[13],\n        n34 = me[14],\n        n44 = me[15],\n        t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n        t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n        t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n        t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate || false) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      return this.identity();\n    }\n\n    var detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n    te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n    te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n    te[4] = t12 * detInv;\n    te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n    te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n    te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n    te[8] = t13 * detInv;\n    te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n    te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n    te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n    te[12] = t14 * detInv;\n    te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n    te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n    te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n    return this;\n  },\n  scale: function scale(v) {\n    var te = this.elements;\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n    return this;\n  },\n  getMaxScaleOnAxis: function getMaxScaleOnAxis() {\n    var te = this.elements;\n    var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n  },\n  makeTranslation: function makeTranslation(x, y, z) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationX: function makeRotationX(theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationY: function makeRotationY(theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationZ: function makeRotationZ(theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationAxis: function makeRotationAxis(axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    var c = Math.cos(angle);\n    var s = Math.sin(angle);\n    var t = 1 - c;\n    var x = axis.x,\n        y = axis.y,\n        z = axis.z;\n    var tx = t * x,\n        ty = t * y;\n    this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeScale: function makeScale(x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  compose: function compose(position, quaternion, scale) {\n    this.makeRotationFromQuaternion(quaternion);\n    this.scale(scale);\n    this.setPosition(position);\n    return this;\n  },\n  decompose: function () {\n    var vector, matrix;\n    return function (position, quaternion, scale) {\n      if (vector === undefined) {\n        vector = new THREE.Vector3();\n        matrix = new THREE.Matrix4();\n      }\n\n      var te = this.elements;\n      var sx = vector.set(te[0], te[1], te[2]).length();\n      var sy = vector.set(te[4], te[5], te[6]).length();\n      var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n      var det = this.determinant();\n\n      if (det < 0) {\n        sx = -sx;\n      }\n\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      matrix.elements.set(this.elements); // at this point matrix is incomplete so we can't use .copy()\n\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      matrix.elements[0] *= invSX;\n      matrix.elements[1] *= invSX;\n      matrix.elements[2] *= invSX;\n      matrix.elements[4] *= invSY;\n      matrix.elements[5] *= invSY;\n      matrix.elements[6] *= invSY;\n      matrix.elements[8] *= invSZ;\n      matrix.elements[9] *= invSZ;\n      matrix.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(matrix);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    };\n  }(),\n  makeFrustum: function makeFrustum(left, right, bottom, top, near, far) {\n    var te = this.elements;\n    var x = 2 * near / (right - left);\n    var y = 2 * near / (top - bottom);\n    var a = (right + left) / (right - left);\n    var b = (top + bottom) / (top - bottom);\n    var c = -(far + near) / (far - near);\n    var d = -2 * far * near / (far - near);\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n    return this;\n  },\n  makePerspective: function makePerspective(fov, aspect, near, far) {\n    var ymax = near * Math.tan(THREE.Math.DEG2RAD * fov * 0.5);\n    var ymin = -ymax;\n    var xmin = ymin * aspect;\n    var xmax = ymax * aspect;\n    return this.makeFrustum(xmin, xmax, ymin, ymax, near, far);\n  },\n  makeOrthographic: function makeOrthographic(left, right, top, bottom, near, far) {\n    var te = this.elements;\n    var w = 1.0 / (right - left);\n    var h = 1.0 / (top - bottom);\n    var p = 1.0 / (far - near);\n    var x = (right + left) * w;\n    var y = (top + bottom) * h;\n    var z = (far + near) * p;\n    te[0] = 2 * w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 * h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 * p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n    return this;\n  },\n  equals: function equals(matrix) {\n    var te = this.elements;\n    var me = matrix.elements;\n\n    for (var i = 0; i < 16; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  },\n  fromArray: function fromArray(array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function toArray(array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  }\n}; // File:src/math/Ray.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Ray = function (origin, direction) {\n  this.origin = origin !== undefined ? origin : new THREE.Vector3();\n  this.direction = direction !== undefined ? direction : new THREE.Vector3();\n};\n\nTHREE.Ray.prototype = {\n  constructor: THREE.Ray,\n  set: function set(origin, direction) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n    return this;\n  },\n  at: function at(t, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n  },\n  lookAt: function lookAt(v) {\n    this.direction.copy(v).sub(this.origin).normalize();\n    return this;\n  },\n  recast: function () {\n    var v1 = new THREE.Vector3();\n    return function (t) {\n      this.origin.copy(this.at(t, v1));\n      return this;\n    };\n  }(),\n  closestPointToPoint: function closestPointToPoint(point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(point, this.origin);\n    var directionDistance = result.dot(this.direction);\n\n    if (directionDistance < 0) {\n      return result.copy(this.origin);\n    }\n\n    return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n  },\n  distanceToPoint: function distanceToPoint(point) {\n    return Math.sqrt(this.distanceSqToPoint(point));\n  },\n  distanceSqToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n      if (directionDistance < 0) {\n        return this.origin.distanceToSquared(point);\n      }\n\n      v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n      return v1.distanceToSquared(point);\n    };\n  }(),\n  distanceSqToSegment: function () {\n    var segCenter = new THREE.Vector3();\n    var segDir = new THREE.Vector3();\n    var diff = new THREE.Vector3();\n    return function (v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n      // It returns the min distance between the ray and the segment\n      // defined by v0 and v1\n      // It can also set two optional targets :\n      // - The closest point on the ray\n      // - The closest point on the segment\n      segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n      segDir.copy(v1).sub(v0).normalize();\n      diff.copy(this.origin).sub(segCenter);\n      var segExtent = v0.distanceTo(v1) * 0.5;\n      var a01 = -this.direction.dot(segDir);\n      var b0 = diff.dot(this.direction);\n      var b1 = -diff.dot(segDir);\n      var c = diff.lengthSq();\n      var det = Math.abs(1 - a01 * a01);\n      var s0, s1, sqrDist, extDet;\n\n      if (det > 0) {\n        // The ray and segment are not parallel.\n        s0 = a01 * b1 - b0;\n        s1 = a01 * b0 - b1;\n        extDet = segExtent * det;\n\n        if (s0 >= 0) {\n          if (s1 >= -extDet) {\n            if (s1 <= extDet) {\n              // region 0\n              // Minimum at interior points of ray and segment.\n              var invDet = 1 / det;\n              s0 *= invDet;\n              s1 *= invDet;\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n            } else {\n              // region 1\n              s1 = segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            // region 5\n            s1 = -segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          if (s1 <= -extDet) {\n            // region 4\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          } else if (s1 <= extDet) {\n            // region 3\n            s0 = 0;\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = s1 * (s1 + 2 * b1) + c;\n          } else {\n            // region 2\n            s0 = Math.max(0, -(a01 * segExtent + b0));\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        }\n      } else {\n        // Ray and segment are parallel.\n        s1 = a01 > 0 ? -segExtent : segExtent;\n        s0 = Math.max(0, -(a01 * s1 + b0));\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n      }\n\n      if (optionalPointOnRay) {\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n      }\n\n      if (optionalPointOnSegment) {\n        optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n      }\n\n      return sqrDist;\n    };\n  }(),\n  intersectSphere: function () {\n    var v1 = new THREE.Vector3();\n    return function (sphere, optionalTarget) {\n      v1.subVectors(sphere.center, this.origin);\n      var tca = v1.dot(this.direction);\n      var d2 = v1.dot(v1) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n      if (d2 > radius2) return null;\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n      if (t0 < 0) return this.at(t1, optionalTarget); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n      return this.at(t0, optionalTarget);\n    };\n  }(),\n  intersectsSphere: function intersectsSphere(sphere) {\n    return this.distanceToPoint(sphere.center) <= sphere.radius;\n  },\n  distanceToPlane: function distanceToPlane(plane) {\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) === 0) {\n        return 0;\n      } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n      return null;\n    }\n\n    var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n    return t >= 0 ? t : null;\n  },\n  intersectPlane: function intersectPlane(plane, optionalTarget) {\n    var t = this.distanceToPlane(plane);\n\n    if (t === null) {\n      return null;\n    }\n\n    return this.at(t, optionalTarget);\n  },\n  intersectsPlane: function intersectsPlane(plane) {\n    // check if the ray lies on the plane first\n    var distToPoint = plane.distanceToPoint(this.origin);\n\n    if (distToPoint === 0) {\n      return true;\n    }\n\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator * distToPoint < 0) {\n      return true;\n    } // ray origin is behind the plane (and is pointing behind it)\n\n\n    return false;\n  },\n  intersectBox: function intersectBox(box, optionalTarget) {\n    var tmin, tmax, tymin, tymax, tzmin, tzmax;\n    var invdirx = 1 / this.direction.x,\n        invdiry = 1 / this.direction.y,\n        invdirz = 1 / this.direction.z;\n    var origin = this.origin;\n\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n\n    if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    if (tymin > tmin || tmin !== tmin) tmin = tymin;\n    if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n\n    if (tmin > tzmax || tzmin > tmax) return null;\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n    if (tmax < 0) return null;\n    return this.at(tmin >= 0 ? tmin : tmax, optionalTarget);\n  },\n  intersectsBox: function () {\n    var v = new THREE.Vector3();\n    return function (box) {\n      return this.intersectBox(box, v) !== null;\n    };\n  }(),\n  intersectTriangle: function () {\n    // Compute the offset origin, edges, and normal.\n    var diff = new THREE.Vector3();\n    var edge1 = new THREE.Vector3();\n    var edge2 = new THREE.Vector3();\n    var normal = new THREE.Vector3();\n    return function (a, b, c, backfaceCulling, optionalTarget) {\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n      edge1.subVectors(b, a);\n      edge2.subVectors(c, a);\n      normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n      var DdN = this.direction.dot(normal);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) return null;\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      diff.subVectors(this.origin, a);\n      var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, optionalTarget);\n    };\n  }(),\n  applyMatrix4: function applyMatrix4(matrix4) {\n    this.direction.add(this.origin).applyMatrix4(matrix4);\n    this.origin.applyMatrix4(matrix4);\n    this.direction.sub(this.origin);\n    this.direction.normalize();\n    return this;\n  },\n  equals: function equals(ray) {\n    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n  }\n}; // File:src/math/Sphere.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Sphere = function (center, radius) {\n  this.center = center !== undefined ? center : new THREE.Vector3();\n  this.radius = radius !== undefined ? radius : 0;\n};\n\nTHREE.Sphere.prototype = {\n  constructor: THREE.Sphere,\n  set: function set(center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  },\n  setFromPoints: function () {\n    var box = new THREE.Box3();\n    return function (points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        box.setFromPoints(points).center(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    };\n  }(),\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  },\n  empty: function empty() {\n    return this.radius <= 0;\n  },\n  containsPoint: function containsPoint(point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  },\n  distanceToPoint: function distanceToPoint(point) {\n    return point.distanceTo(this.center) - this.radius;\n  },\n  intersectsSphere: function intersectsSphere(sphere) {\n    var radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n  },\n  intersectsBox: function intersectsBox(box) {\n    return box.intersectsSphere(this);\n  },\n  intersectsPlane: function intersectsPlane(plane) {\n    // We use the following equation to compute the signed distance from\n    // the center of the sphere to the plane.\n    //\n    // distance = q * n - d\n    //\n    // If this distance is greater than the radius of the sphere,\n    // then there is no intersection.\n    return Math.abs(this.center.dot(plane.normal) - plane.constant) <= this.radius;\n  },\n  clampPoint: function clampPoint(point, optionalTarget) {\n    var deltaLengthSq = this.center.distanceToSquared(point);\n    var result = optionalTarget || new THREE.Vector3();\n    result.copy(point);\n\n    if (deltaLengthSq > this.radius * this.radius) {\n      result.sub(this.center).normalize();\n      result.multiplyScalar(this.radius).add(this.center);\n    }\n\n    return result;\n  },\n  getBoundingBox: function getBoundingBox(optionalTarget) {\n    var box = optionalTarget || new THREE.Box3();\n    box.set(this.center, this.center);\n    box.expandByScalar(this.radius);\n    return box;\n  },\n  applyMatrix4: function applyMatrix4(matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  },\n  translate: function translate(offset) {\n    this.center.add(offset);\n    return this;\n  },\n  equals: function equals(sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n}; // File:src/math/Frustum.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Frustum = function (p0, p1, p2, p3, p4, p5) {\n  this.planes = [p0 !== undefined ? p0 : new THREE.Plane(), p1 !== undefined ? p1 : new THREE.Plane(), p2 !== undefined ? p2 : new THREE.Plane(), p3 !== undefined ? p3 : new THREE.Plane(), p4 !== undefined ? p4 : new THREE.Plane(), p5 !== undefined ? p5 : new THREE.Plane()];\n};\n\nTHREE.Frustum.prototype = {\n  constructor: THREE.Frustum,\n  set: function set(p0, p1, p2, p3, p4, p5) {\n    var planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(frustum) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n\n    return this;\n  },\n  setFromMatrix: function setFromMatrix(m) {\n    var planes = this.planes;\n    var me = m.elements;\n    var me0 = me[0],\n        me1 = me[1],\n        me2 = me[2],\n        me3 = me[3];\n    var me4 = me[4],\n        me5 = me[5],\n        me6 = me[6],\n        me7 = me[7];\n    var me8 = me[8],\n        me9 = me[9],\n        me10 = me[10],\n        me11 = me[11];\n    var me12 = me[12],\n        me13 = me[13],\n        me14 = me[14],\n        me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    return this;\n  },\n  intersectsObject: function () {\n    var sphere = new THREE.Sphere();\n    return function (object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSprite: function () {\n    var sphere = new THREE.Sphere();\n    return function (sprite) {\n      sphere.center.set(0, 0, 0);\n      sphere.radius = 0.7071067811865476;\n      sphere.applyMatrix4(sprite.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSphere: function intersectsSphere(sphere) {\n    var planes = this.planes;\n    var center = sphere.center;\n    var negRadius = -sphere.radius;\n\n    for (var i = 0; i < 6; i++) {\n      var distance = planes[i].distanceToPoint(center);\n\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  intersectsBox: function () {\n    var p1 = new THREE.Vector3(),\n        p2 = new THREE.Vector3();\n    return function (box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i];\n        p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n        p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n        p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n        p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n        var d1 = plane.distanceToPoint(p1);\n        var d2 = plane.distanceToPoint(p2); // if both outside plane, no intersection\n\n        if (d1 < 0 && d2 < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }(),\n  containsPoint: function containsPoint(point) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}; // File:src/math/Plane.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Plane = function (normal, constant) {\n  this.normal = normal !== undefined ? normal : new THREE.Vector3(1, 0, 0);\n  this.constant = constant !== undefined ? constant : 0;\n};\n\nTHREE.Plane.prototype = {\n  constructor: THREE.Plane,\n  set: function set(normal, constant) {\n    this.normal.copy(normal);\n    this.constant = constant;\n    return this;\n  },\n  setComponents: function setComponents(x, y, z, w) {\n    this.normal.set(x, y, z);\n    this.constant = w;\n    return this;\n  },\n  setFromNormalAndCoplanarPoint: function setFromNormalAndCoplanarPoint(normal, point) {\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal); // must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n  },\n  setFromCoplanarPoints: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    return function (a, b, c) {\n      var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    };\n  }(),\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(plane) {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n    return this;\n  },\n  normalize: function normalize() {\n    // Note: will lead to a divide by zero if the plane is invalid.\n    var inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n    return this;\n  },\n  negate: function negate() {\n    this.constant *= -1;\n    this.normal.negate();\n    return this;\n  },\n  distanceToPoint: function distanceToPoint(point) {\n    return this.normal.dot(point) + this.constant;\n  },\n  distanceToSphere: function distanceToSphere(sphere) {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  },\n  projectPoint: function projectPoint(point, optionalTarget) {\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n  },\n  orthoPoint: function orthoPoint(point, optionalTarget) {\n    var perpendicularMagnitude = this.distanceToPoint(point);\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n  },\n  intersectLine: function () {\n    var v1 = new THREE.Vector3();\n    return function (line, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      var direction = line.delta(v1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n          return result.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return undefined;\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n    };\n  }(),\n  intersectsLine: function intersectsLine(line) {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n    var startSign = this.distanceToPoint(line.start);\n    var endSign = this.distanceToPoint(line.end);\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  },\n  intersectsBox: function intersectsBox(box) {\n    return box.intersectsPlane(this);\n  },\n  intersectsSphere: function intersectsSphere(sphere) {\n    return sphere.intersectsPlane(this);\n  },\n  coplanarPoint: function coplanarPoint(optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n  },\n  applyMatrix4: function () {\n    var v1 = new THREE.Vector3();\n    var m1 = new THREE.Matrix3();\n    return function (matrix, optionalNormalMatrix) {\n      var referencePoint = this.coplanarPoint(v1).applyMatrix4(matrix); // transform normal based on theory here:\n      // http://www.songho.ca/opengl/gl_normaltransform.html\n\n      var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n      var normal = this.normal.applyMatrix3(normalMatrix).normalize(); // recalculate constant (like in setFromNormalAndCoplanarPoint)\n\n      this.constant = -referencePoint.dot(normal);\n      return this;\n    };\n  }(),\n  translate: function translate(offset) {\n    this.constant = this.constant - offset.dot(this.normal);\n    return this;\n  },\n  equals: function equals(plane) {\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  }\n}; // File:src/math/Spherical.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n *\r\n * The poles (phi) are at the positive and negative y axis.\r\n * The equator starts at positive z.\r\n */\n\nTHREE.Spherical = function (radius, phi, theta) {\n  this.radius = radius !== undefined ? radius : 1.0;\n  this.phi = phi !== undefined ? phi : 0; // up / down towards top and bottom pole\n\n  this.theta = theta !== undefined ? theta : 0; // around the equator of the sphere\n\n  return this;\n};\n\nTHREE.Spherical.prototype = {\n  constructor: THREE.Spherical,\n  set: function set(radius, phi, theta) {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(other) {\n    this.radius.copy(other.radius);\n    this.phi.copy(other.phi);\n    this.theta.copy(other.theta);\n    return this;\n  },\n  // restrict phi to be betwee EPS and PI-EPS\n  makeSafe: function makeSafe() {\n    var EPS = 0.000001;\n    this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n    return this;\n  },\n  setFromVector3: function setFromVector3(vec3) {\n    this.radius = vec3.length();\n\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      this.theta = Math.atan2(vec3.x, vec3.z); // equator angle around y-up axis\n\n      this.phi = Math.acos(THREE.Math.clamp(vec3.y / this.radius, -1, 1)); // polar angle\n    }\n\n    return this;\n  }\n}; // File:src/math/Math.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Math = {\n  DEG2RAD: Math.PI / 180,\n  RAD2DEG: 180 / Math.PI,\n  generateUUID: function () {\n    // http://www.broofa.com/Tools/Math.uuid.htm\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n    var uuid = new Array(36);\n    var rnd = 0,\n        r;\n    return function () {\n      for (var i = 0; i < 36; i++) {\n        if (i === 8 || i === 13 || i === 18 || i === 23) {\n          uuid[i] = '-';\n        } else if (i === 14) {\n          uuid[i] = '4';\n        } else {\n          if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n          r = rnd & 0xf;\n          rnd = rnd >> 4;\n          uuid[i] = chars[i === 19 ? r & 0x3 | 0x8 : r];\n        }\n      }\n\n      return uuid.join('');\n    };\n  }(),\n  clamp: function clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  },\n  // compute euclidian modulo of m % n\n  // https://en.wikipedia.org/wiki/Modulo_operation\n  euclideanModulo: function euclideanModulo(n, m) {\n    return (n % m + m) % m;\n  },\n  // Linear mapping from range <a1, a2> to range <b1, b2>\n  mapLinear: function mapLinear(x, a1, a2, b1, b2) {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n  },\n  // http://en.wikipedia.org/wiki/Smoothstep\n  smoothstep: function smoothstep(x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * (3 - 2 * x);\n  },\n  smootherstep: function smootherstep(x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * x * (x * (x * 6 - 15) + 10);\n  },\n  random16: function random16() {\n    console.warn('THREE.Math.random16() has been deprecated. Use Math.random() instead.');\n    return Math.random();\n  },\n  // Random integer from <low, high> interval\n  randInt: function randInt(low, high) {\n    return low + Math.floor(Math.random() * (high - low + 1));\n  },\n  // Random float from <low, high> interval\n  randFloat: function randFloat(low, high) {\n    return low + Math.random() * (high - low);\n  },\n  // Random float from <-range/2, range/2> interval\n  randFloatSpread: function randFloatSpread(range) {\n    return range * (0.5 - Math.random());\n  },\n  degToRad: function degToRad(degrees) {\n    return degrees * THREE.Math.DEG2RAD;\n  },\n  radToDeg: function radToDeg(radians) {\n    return radians * THREE.Math.RAD2DEG;\n  },\n  isPowerOfTwo: function isPowerOfTwo(value) {\n    return (value & value - 1) === 0 && value !== 0;\n  },\n  nearestPowerOfTwo: function nearestPowerOfTwo(value) {\n    return Math.pow(2, Math.round(Math.log(value) / Math.LN2));\n  },\n  nextPowerOfTwo: function nextPowerOfTwo(value) {\n    value--;\n    value |= value >> 1;\n    value |= value >> 2;\n    value |= value >> 4;\n    value |= value >> 8;\n    value |= value >> 16;\n    value++;\n    return value;\n  }\n}; // File:src/math/Spline.js\n\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Spline = function (points) {\n  this.points = points;\n  var c = [],\n      v3 = {\n    x: 0,\n    y: 0,\n    z: 0\n  },\n      point,\n      intPoint,\n      weight,\n      w2,\n      w3,\n      pa,\n      pb,\n      pc,\n      pd;\n\n  this.initFromArray = function (a) {\n    this.points = [];\n\n    for (var i = 0; i < a.length; i++) {\n      this.points[i] = {\n        x: a[i][0],\n        y: a[i][1],\n        z: a[i][2]\n      };\n    }\n  };\n\n  this.getPoint = function (k) {\n    point = (this.points.length - 1) * k;\n    intPoint = Math.floor(point);\n    weight = point - intPoint;\n    c[0] = intPoint === 0 ? intPoint : intPoint - 1;\n    c[1] = intPoint;\n    c[2] = intPoint > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n    c[3] = intPoint > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n    pa = this.points[c[0]];\n    pb = this.points[c[1]];\n    pc = this.points[c[2]];\n    pd = this.points[c[3]];\n    w2 = weight * weight;\n    w3 = weight * w2;\n    v3.x = interpolate(pa.x, pb.x, pc.x, pd.x, weight, w2, w3);\n    v3.y = interpolate(pa.y, pb.y, pc.y, pd.y, weight, w2, w3);\n    v3.z = interpolate(pa.z, pb.z, pc.z, pd.z, weight, w2, w3);\n    return v3;\n  };\n\n  this.getControlPointsArray = function () {\n    var i,\n        p,\n        l = this.points.length,\n        coords = [];\n\n    for (i = 0; i < l; i++) {\n      p = this.points[i];\n      coords[i] = [p.x, p.y, p.z];\n    }\n\n    return coords;\n  }; // approximate length by summing linear segments\n\n\n  this.getLength = function (nSubDivisions) {\n    var i,\n        index,\n        nSamples,\n        position,\n        point = 0,\n        intPoint = 0,\n        oldIntPoint = 0,\n        oldPosition = new THREE.Vector3(),\n        tmpVec = new THREE.Vector3(),\n        chunkLengths = [],\n        totalLength = 0; // first point has 0 length\n\n    chunkLengths[0] = 0;\n    if (!nSubDivisions) nSubDivisions = 100;\n    nSamples = this.points.length * nSubDivisions;\n    oldPosition.copy(this.points[0]);\n\n    for (i = 1; i < nSamples; i++) {\n      index = i / nSamples;\n      position = this.getPoint(index);\n      tmpVec.copy(position);\n      totalLength += tmpVec.distanceTo(oldPosition);\n      oldPosition.copy(position);\n      point = (this.points.length - 1) * index;\n      intPoint = Math.floor(point);\n\n      if (intPoint !== oldIntPoint) {\n        chunkLengths[intPoint] = totalLength;\n        oldIntPoint = intPoint;\n      }\n    } // last point ends with total length\n\n\n    chunkLengths[chunkLengths.length] = totalLength;\n    return {\n      chunks: chunkLengths,\n      total: totalLength\n    };\n  };\n\n  this.reparametrizeByArcLength = function (samplingCoef) {\n    var i,\n        j,\n        index,\n        indexCurrent,\n        indexNext,\n        realDistance,\n        sampling,\n        position,\n        newpoints = [],\n        tmpVec = new THREE.Vector3(),\n        sl = this.getLength();\n    newpoints.push(tmpVec.copy(this.points[0]).clone());\n\n    for (i = 1; i < this.points.length; i++) {\n      //tmpVec.copy( this.points[ i - 1 ] );\n      //linearDistance = tmpVec.distanceTo( this.points[ i ] );\n      realDistance = sl.chunks[i] - sl.chunks[i - 1];\n      sampling = Math.ceil(samplingCoef * realDistance / sl.total);\n      indexCurrent = (i - 1) / (this.points.length - 1);\n      indexNext = i / (this.points.length - 1);\n\n      for (j = 1; j < sampling - 1; j++) {\n        index = indexCurrent + j * (1 / sampling) * (indexNext - indexCurrent);\n        position = this.getPoint(index);\n        newpoints.push(tmpVec.copy(position).clone());\n      }\n\n      newpoints.push(tmpVec.copy(this.points[i]).clone());\n    }\n\n    this.points = newpoints;\n  }; // Catmull-Rom\n\n\n  function interpolate(p0, p1, p2, p3, t, t2, t3) {\n    var v0 = (p2 - p0) * 0.5,\n        v1 = (p3 - p1) * 0.5;\n    return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n  }\n}; // File:src/math/Triangle.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.Triangle = function (a, b, c) {\n  this.a = a !== undefined ? a : new THREE.Vector3();\n  this.b = b !== undefined ? b : new THREE.Vector3();\n  this.c = c !== undefined ? c : new THREE.Vector3();\n};\n\nTHREE.Triangle.normal = function () {\n  var v0 = new THREE.Vector3();\n  return function (a, b, c, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(c, b);\n    v0.subVectors(a, b);\n    result.cross(v0);\n    var resultLengthSq = result.lengthSq();\n\n    if (resultLengthSq > 0) {\n      return result.multiplyScalar(1 / Math.sqrt(resultLengthSq));\n    }\n\n    return result.set(0, 0, 0);\n  };\n}(); // static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\nTHREE.Triangle.barycoordFromPoint = function () {\n  var v0 = new THREE.Vector3();\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  return function (point, a, b, c, optionalTarget) {\n    v0.subVectors(c, a);\n    v1.subVectors(b, a);\n    v2.subVectors(point, a);\n    var dot00 = v0.dot(v0);\n    var dot01 = v0.dot(v1);\n    var dot02 = v0.dot(v2);\n    var dot11 = v1.dot(v1);\n    var dot12 = v1.dot(v2);\n    var denom = dot00 * dot11 - dot01 * dot01;\n    var result = optionalTarget || new THREE.Vector3(); // collinear or singular triangle\n\n    if (denom === 0) {\n      // arbitrary location outside of triangle?\n      // not sure if this is the best idea, maybe should be returning undefined\n      return result.set(-2, -1, -1);\n    }\n\n    var invDenom = 1 / denom;\n    var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n    return result.set(1 - u - v, v, u);\n  };\n}();\n\nTHREE.Triangle.containsPoint = function () {\n  var v1 = new THREE.Vector3();\n  return function (point, a, b, c) {\n    var result = THREE.Triangle.barycoordFromPoint(point, a, b, c, v1);\n    return result.x >= 0 && result.y >= 0 && result.x + result.y <= 1;\n  };\n}();\n\nTHREE.Triangle.prototype = {\n  constructor: THREE.Triangle,\n  set: function set(a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  },\n  setFromPointsAndIndices: function setFromPointsAndIndices(points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  },\n  area: function () {\n    var v0 = new THREE.Vector3();\n    var v1 = new THREE.Vector3();\n    return function () {\n      v0.subVectors(this.c, this.b);\n      v1.subVectors(this.a, this.b);\n      return v0.cross(v1).length() * 0.5;\n    };\n  }(),\n  midpoint: function midpoint(optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  },\n  normal: function normal(optionalTarget) {\n    return THREE.Triangle.normal(this.a, this.b, this.c, optionalTarget);\n  },\n  plane: function plane(optionalTarget) {\n    var result = optionalTarget || new THREE.Plane();\n    return result.setFromCoplanarPoints(this.a, this.b, this.c);\n  },\n  barycoordFromPoint: function barycoordFromPoint(point, optionalTarget) {\n    return THREE.Triangle.barycoordFromPoint(point, this.a, this.b, this.c, optionalTarget);\n  },\n  containsPoint: function containsPoint(point) {\n    return THREE.Triangle.containsPoint(point, this.a, this.b, this.c);\n  },\n  closestPointToPoint: function () {\n    var plane, edgeList, projectedPoint, closestPoint;\n    return function closestPointToPoint(point, optionalTarget) {\n      if (plane === undefined) {\n        plane = new THREE.Plane();\n        edgeList = [new THREE.Line3(), new THREE.Line3(), new THREE.Line3()];\n        projectedPoint = new THREE.Vector3();\n        closestPoint = new THREE.Vector3();\n      }\n\n      var result = optionalTarget || new THREE.Vector3();\n      var minDistance = Infinity; // project the point onto the plane of the triangle\n\n      plane.setFromCoplanarPoints(this.a, this.b, this.c);\n      plane.projectPoint(point, projectedPoint); // check if the projection lies within the triangle\n\n      if (this.containsPoint(projectedPoint) === true) {\n        // if so, this is the closest point\n        result.copy(projectedPoint);\n      } else {\n        // if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n        edgeList[0].set(this.a, this.b);\n        edgeList[1].set(this.b, this.c);\n        edgeList[2].set(this.c, this.a);\n\n        for (var i = 0; i < edgeList.length; i++) {\n          edgeList[i].closestPointToPoint(projectedPoint, true, closestPoint);\n          var distance = projectedPoint.distanceToSquared(closestPoint);\n\n          if (distance < minDistance) {\n            minDistance = distance;\n            result.copy(closestPoint);\n          }\n        }\n      }\n\n      return result;\n    };\n  }(),\n  equals: function equals(triangle) {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  }\n}; // File:src/math/Interpolant.js\n\n/**\r\n * Abstract base class of interpolants over parametric samples.\r\n *\r\n * The parameter domain is one dimensional, typically the time or a path\r\n * along a curve defined by the data.\r\n *\r\n * The sample values can have any dimensionality and derived classes may\r\n * apply special interpretations to the data.\r\n *\r\n * This class provides the interval seek in a Template Method, deferring\r\n * the actual interpolation to derived classes.\r\n *\r\n * Time complexity is O(1) for linear access crossing at most two points\r\n * and O(log N) for random access, where N is the number of positions.\r\n *\r\n * References:\r\n *\r\n * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n *\r\n * @author tschw\r\n */\n\nTHREE.Interpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  this.parameterPositions = parameterPositions;\n  this._cachedIndex = 0;\n  this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n  this.sampleValues = sampleValues;\n  this.valueSize = sampleSize;\n};\n\nTHREE.Interpolant.prototype = {\n  constructor: THREE.Interpolant,\n  evaluate: function evaluate(t) {\n    var pp = this.parameterPositions,\n        i1 = this._cachedIndex,\n        t1 = pp[i1],\n        t0 = pp[i1 - 1];\n\n    validate_interval: {\n      seek: {\n        var right;\n\n        linear_scan: {\n          //- See http://jsperf.com/comparison-to-undefined/3\n          //- slower code:\n          //-\n          //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n          forward_scan: if (!(t < t1)) {\n            for (var giveUpAt = i1 + 2;;) {\n              if (t1 === undefined) {\n                if (t < t0) break forward_scan; // after end\n\n                i1 = pp.length;\n                this._cachedIndex = i1;\n                return this.afterEnd_(i1 - 1, t, t0);\n              }\n\n              if (i1 === giveUpAt) break; // this loop\n\n              t0 = t1;\n              t1 = pp[++i1];\n\n              if (t < t1) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            } // prepare binary search on the right side of the index\n\n\n            right = pp.length;\n            break linear_scan;\n          } //- slower code:\n          //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n          if (!(t >= t0)) {\n            // looping?\n            var t1global = pp[1];\n\n            if (t < t1global) {\n              i1 = 2; // + 1, using the scan for the details\n\n              t0 = t1global;\n            } // linear reverse scan\n\n\n            for (var giveUpAt = i1 - 2;;) {\n              if (t0 === undefined) {\n                // before start\n                this._cachedIndex = 0;\n                return this.beforeStart_(0, t, t1);\n              }\n\n              if (i1 === giveUpAt) break; // this loop\n\n              t1 = t0;\n              t0 = pp[--i1 - 1];\n\n              if (t >= t0) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            } // prepare binary search on the left side of the index\n\n\n            right = i1;\n            i1 = 0;\n            break linear_scan;\n          } // the interval is valid\n\n\n          break validate_interval;\n        } // linear scan\n        // binary search\n\n\n        while (i1 < right) {\n          var mid = i1 + right >>> 1;\n\n          if (t < pp[mid]) {\n            right = mid;\n          } else {\n            i1 = mid + 1;\n          }\n        }\n\n        t1 = pp[i1];\n        t0 = pp[i1 - 1]; // check boundary cases, again\n\n        if (t0 === undefined) {\n          this._cachedIndex = 0;\n          return this.beforeStart_(0, t, t1);\n        }\n\n        if (t1 === undefined) {\n          i1 = pp.length;\n          this._cachedIndex = i1;\n          return this.afterEnd_(i1 - 1, t0, t);\n        }\n      } // seek\n\n\n      this._cachedIndex = i1;\n      this.intervalChanged_(i1, t0, t1);\n    } // validate_interval\n\n\n    return this.interpolate_(i1, t0, t, t1);\n  },\n  settings: null,\n  // optional, subclass-specific settings structure\n  // Note: The indirection allows central control of many interpolants.\n  // --- Protected interface\n  DefaultSettings_: {},\n  getSettings_: function getSettings_() {\n    return this.settings || this.DefaultSettings_;\n  },\n  copySampleValue_: function copySampleValue_(index) {\n    // copies a sample value to the result buffer\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset = index * stride;\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = values[offset + i];\n    }\n\n    return result;\n  },\n  // Template methods for derived classes:\n  interpolate_: function interpolate_(i1, t0, t, t1) {\n    throw new Error(\"call to abstract method\"); // implementations shall return this.resultBuffer\n  },\n  intervalChanged_: function intervalChanged_(i1, t0, t1) {// empty\n  }\n};\nObject.assign(THREE.Interpolant.prototype, {\n  beforeStart_: //( 0, t, t0 ), returns this.resultBuffer\n  THREE.Interpolant.prototype.copySampleValue_,\n  afterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\n  THREE.Interpolant.prototype.copySampleValue_\n}); // File:src/math/interpolants/CubicInterpolant.js\n\n/**\r\n * Fast and simple cubic spline interpolant.\r\n *\r\n * It was derived from a Hermitian construction setting the first derivative\r\n * at each sample position to the linear slope between neighboring positions\r\n * over their parameter interval.\r\n *\r\n * @author tschw\r\n */\n\nTHREE.CubicInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  this._weightPrev = -0;\n  this._offsetPrev = -0;\n  this._weightNext = -0;\n  this._offsetNext = -0;\n};\n\nTHREE.CubicInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n  constructor: THREE.CubicInterpolant,\n  DefaultSettings_: {\n    endingStart: THREE.ZeroCurvatureEnding,\n    endingEnd: THREE.ZeroCurvatureEnding\n  },\n  intervalChanged_: function intervalChanged_(i1, t0, t1) {\n    var pp = this.parameterPositions,\n        iPrev = i1 - 2,\n        iNext = i1 + 1,\n        tPrev = pp[iPrev],\n        tNext = pp[iNext];\n\n    if (tPrev === undefined) {\n      switch (this.getSettings_().endingStart) {\n        case THREE.ZeroSlopeEnding:\n          // f'(t0) = 0\n          iPrev = i1;\n          tPrev = 2 * t0 - t1;\n          break;\n\n        case THREE.WrapAroundEnding:\n          // use the other end of the curve\n          iPrev = pp.length - 2;\n          tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n          break;\n\n        default:\n          // ZeroCurvatureEnding\n          // f''(t0) = 0 a.k.a. Natural Spline\n          iPrev = i1;\n          tPrev = t1;\n      }\n    }\n\n    if (tNext === undefined) {\n      switch (this.getSettings_().endingEnd) {\n        case THREE.ZeroSlopeEnding:\n          // f'(tN) = 0\n          iNext = i1;\n          tNext = 2 * t1 - t0;\n          break;\n\n        case THREE.WrapAroundEnding:\n          // use the other end of the curve\n          iNext = 1;\n          tNext = t1 + pp[1] - pp[0];\n          break;\n\n        default:\n          // ZeroCurvatureEnding\n          // f''(tN) = 0, a.k.a. Natural Spline\n          iNext = i1 - 1;\n          tNext = t0;\n      }\n    }\n\n    var halfDt = (t1 - t0) * 0.5,\n        stride = this.valueSize;\n    this._weightPrev = halfDt / (t0 - tPrev);\n    this._weightNext = halfDt / (tNext - t1);\n    this._offsetPrev = iPrev * stride;\n    this._offsetNext = iNext * stride;\n  },\n  interpolate_: function interpolate_(i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        o1 = i1 * stride,\n        o0 = o1 - stride,\n        oP = this._offsetPrev,\n        oN = this._offsetNext,\n        wP = this._weightPrev,\n        wN = this._weightNext,\n        p = (t - t0) / (t1 - t0),\n        pp = p * p,\n        ppp = pp * p; // evaluate polynomials\n\n    var sP = -wP * ppp + 2 * wP * pp - wP * p;\n    var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n    var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n    var sN = wN * ppp - wN * pp; // combine data linearly\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n    }\n\n    return result;\n  }\n}); // File:src/math/interpolants/DiscreteInterpolant.js\n\n/**\r\n *\r\n * Interpolant that evaluates to the sample value at the position preceeding\r\n * the parameter.\r\n *\r\n * @author tschw\r\n */\n\nTHREE.DiscreteInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n};\n\nTHREE.DiscreteInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n  constructor: THREE.DiscreteInterpolant,\n  interpolate_: function interpolate_(i1, t0, t, t1) {\n    return this.copySampleValue_(i1 - 1);\n  }\n}); // File:src/math/interpolants/LinearInterpolant.js\n\n/**\r\n * @author tschw\r\n */\n\nTHREE.LinearInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n};\n\nTHREE.LinearInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n  constructor: THREE.LinearInterpolant,\n  interpolate_: function interpolate_(i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset1 = i1 * stride,\n        offset0 = offset1 - stride,\n        weight1 = (t - t0) / (t1 - t0),\n        weight0 = 1 - weight1;\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n    }\n\n    return result;\n  }\n}); // File:src/math/interpolants/QuaternionLinearInterpolant.js\n\n/**\r\n * Spherical linear unit quaternion interpolant.\r\n *\r\n * @author tschw\r\n */\n\nTHREE.QuaternionLinearInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n};\n\nTHREE.QuaternionLinearInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n  constructor: THREE.QuaternionLinearInterpolant,\n  interpolate_: function interpolate_(i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset = i1 * stride,\n        alpha = (t - t0) / (t1 - t0);\n\n    for (var end = offset + stride; offset !== end; offset += 4) {\n      THREE.Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n    }\n\n    return result;\n  }\n}); // File:src/core/Clock.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Clock = function (autoStart) {\n  this.autoStart = autoStart !== undefined ? autoStart : true;\n  this.startTime = 0;\n  this.oldTime = 0;\n  this.elapsedTime = 0;\n  this.running = false;\n};\n\nTHREE.Clock.prototype = {\n  constructor: THREE.Clock,\n  start: function start() {\n    this.startTime = (performance || Date).now();\n    this.oldTime = this.startTime;\n    this.running = true;\n  },\n  stop: function stop() {\n    this.getElapsedTime();\n    this.running = false;\n  },\n  getElapsedTime: function getElapsedTime() {\n    this.getDelta();\n    return this.elapsedTime;\n  },\n  getDelta: function getDelta() {\n    var diff = 0;\n\n    if (this.autoStart && !this.running) {\n      this.start();\n    }\n\n    if (this.running) {\n      var newTime = (performance || Date).now();\n      diff = (newTime - this.oldTime) / 1000;\n      this.oldTime = newTime;\n      this.elapsedTime += diff;\n    }\n\n    return diff;\n  }\n}; // File:src/core/EventDispatcher.js\n\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\n\nTHREE.EventDispatcher = function () {};\n\nObject.assign(THREE.EventDispatcher.prototype, {\n  addEventListener: function addEventListener(type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n    var listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  },\n  hasEventListener: function hasEventListener(type, listener) {\n    if (this._listeners === undefined) return false;\n    var listeners = this._listeners;\n\n    if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1) {\n      return true;\n    }\n\n    return false;\n  },\n  removeEventListener: function removeEventListener(type, listener) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  },\n  dispatchEvent: function dispatchEvent(event) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n      var array = [],\n          i = 0;\n      var length = listenerArray.length;\n\n      for (i = 0; i < length; i++) {\n        array[i] = listenerArray[i];\n      }\n\n      for (i = 0; i < length; i++) {\n        array[i].call(this, event);\n      }\n    }\n  }\n}); // File:src/core/Layers.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Layers = function () {\n  this.mask = 1;\n};\n\nTHREE.Layers.prototype = {\n  constructor: THREE.Layers,\n  set: function set(channel) {\n    this.mask = 1 << channel;\n  },\n  enable: function enable(channel) {\n    this.mask |= 1 << channel;\n  },\n  toggle: function toggle(channel) {\n    this.mask ^= 1 << channel;\n  },\n  disable: function disable(channel) {\n    this.mask &= ~(1 << channel);\n  },\n  test: function test(layers) {\n    return (this.mask & layers.mask) !== 0;\n  }\n}; // File:src/core/Raycaster.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://clara.io/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\n\n(function (THREE) {\n  THREE.Raycaster = function (origin, direction, near, far) {\n    this.ray = new THREE.Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n    this.params = {\n      Mesh: {},\n      Line: {},\n      LOD: {},\n      Points: {\n        threshold: 1\n      },\n      Sprite: {}\n    };\n    Object.defineProperties(this.params, {\n      PointCloud: {\n        get: function get() {\n          console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n          return this.Points;\n        }\n      }\n    });\n  };\n\n  function ascSort(a, b) {\n    return a.distance - b.distance;\n  }\n\n  function _intersectObject(object, raycaster, intersects, recursive) {\n    if (object.visible === false) return;\n    object.raycast(raycaster, intersects);\n\n    if (recursive === true) {\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        _intersectObject(children[i], raycaster, intersects, true);\n      }\n    }\n  } //\n\n\n  THREE.Raycaster.prototype = {\n    constructor: THREE.Raycaster,\n    linePrecision: 1,\n    set: function set(origin, direction) {\n      // direction is assumed to be normalized (for accurate distance calculations)\n      this.ray.set(origin, direction);\n    },\n    setFromCamera: function setFromCamera(coords, camera) {\n      if (camera instanceof THREE.PerspectiveCamera) {\n        this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n        this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n      } else if (camera instanceof THREE.OrthographicCamera) {\n        this.ray.origin.set(coords.x, coords.y, -1).unproject(camera);\n        this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n      } else {\n        console.error('THREE.Raycaster: Unsupported camera type.');\n      }\n    },\n    intersectObject: function intersectObject(object, recursive) {\n      var intersects = [];\n\n      _intersectObject(object, this, intersects, recursive);\n\n      intersects.sort(ascSort);\n      return intersects;\n    },\n    intersectObjects: function intersectObjects(objects, recursive) {\n      var intersects = [];\n\n      if (Array.isArray(objects) === false) {\n        console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n        return intersects;\n      }\n\n      for (var i = 0, l = objects.length; i < l; i++) {\n        _intersectObject(objects[i], this, intersects, recursive);\n      }\n\n      intersects.sort(ascSort);\n      return intersects;\n    }\n  };\n})(THREE); // File:src/core/Object3D.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\n\n\nTHREE.Object3D = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.Object3DIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Object3D';\n  this.parent = null;\n  this.children = [];\n  this.up = THREE.Object3D.DefaultUp.clone();\n  var position = new THREE.Vector3();\n  var rotation = new THREE.Euler();\n  var quaternion = new THREE.Quaternion();\n  var scale = new THREE.Vector3(1, 1, 1);\n\n  function onRotationChange() {\n    quaternion.setFromEuler(rotation, false);\n  }\n\n  function onQuaternionChange() {\n    rotation.setFromQuaternion(quaternion, undefined, false);\n  }\n\n  rotation.onChange(onRotationChange);\n  quaternion.onChange(onQuaternionChange);\n  Object.defineProperties(this, {\n    position: {\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      enumerable: true,\n      value: scale\n    },\n    modelViewMatrix: {\n      value: new THREE.Matrix4()\n    },\n    normalMatrix: {\n      value: new THREE.Matrix3()\n    }\n  });\n  this.matrix = new THREE.Matrix4();\n  this.matrixWorld = new THREE.Matrix4();\n  this.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\n  this.matrixWorldNeedsUpdate = false;\n  this.layers = new THREE.Layers();\n  this.visible = true;\n  this.castShadow = false;\n  this.receiveShadow = false;\n  this.frustumCulled = true;\n  this.renderOrder = 0;\n  this.userData = {};\n};\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0);\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\nObject.assign(THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {\n  applyMatrix: function applyMatrix(matrix) {\n    this.matrix.multiplyMatrices(matrix, this.matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  },\n  setRotationFromAxisAngle: function setRotationFromAxisAngle(axis, angle) {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  },\n  setRotationFromEuler: function setRotationFromEuler(euler) {\n    this.quaternion.setFromEuler(euler, true);\n  },\n  setRotationFromMatrix: function setRotationFromMatrix(m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  },\n  setRotationFromQuaternion: function setRotationFromQuaternion(q) {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  },\n  rotateOnAxis: function () {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    var q1 = new THREE.Quaternion();\n    return function (axis, angle) {\n      q1.setFromAxisAngle(axis, angle);\n      this.quaternion.multiply(q1);\n      return this;\n    };\n  }(),\n  rotateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  translateOnAxis: function () {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    var v1 = new THREE.Vector3();\n    return function (axis, distance) {\n      v1.copy(axis).applyQuaternion(this.quaternion);\n      this.position.add(v1.multiplyScalar(distance));\n      return this;\n    };\n  }(),\n  translateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  localToWorld: function localToWorld(vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  },\n  worldToLocal: function () {\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n    };\n  }(),\n  lookAt: function () {\n    // This routine does not support objects with rotated and/or translated parent(s)\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      m1.lookAt(vector, this.position, this.up);\n      this.quaternion.setFromRotationMatrix(m1);\n    };\n  }(),\n  add: function add(object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    if (object === this) {\n      console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n      return this;\n    }\n\n    if (object instanceof THREE.Object3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      object.dispatchEvent({\n        type: 'added'\n      });\n      this.children.push(object);\n    } else {\n      console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n    }\n\n    return this;\n  },\n  remove: function remove(object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n    }\n\n    var index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = null;\n      object.dispatchEvent({\n        type: 'removed'\n      });\n      this.children.splice(index, 1);\n    }\n  },\n  getObjectById: function getObjectById(id) {\n    return this.getObjectByProperty('id', id);\n  },\n  getObjectByName: function getObjectByName(name) {\n    return this.getObjectByProperty('name', name);\n  },\n  getObjectByProperty: function getObjectByProperty(name, value) {\n    if (this[name] === value) return this;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      var object = child.getObjectByProperty(name, value);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getWorldPosition: function getWorldPosition(optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.updateMatrixWorld(true);\n    return result.setFromMatrixPosition(this.matrixWorld);\n  },\n  getWorldQuaternion: function () {\n    var position = new THREE.Vector3();\n    var scale = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Quaternion();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, result, scale);\n      return result;\n    };\n  }(),\n  getWorldRotation: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Euler();\n      this.getWorldQuaternion(quaternion);\n      return result.setFromQuaternion(quaternion, this.rotation.order, false);\n    };\n  }(),\n  getWorldScale: function () {\n    var position = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, quaternion, result);\n      return result;\n    };\n  }(),\n  getWorldDirection: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.getWorldQuaternion(quaternion);\n      return result.set(0, 0, 1).applyQuaternion(quaternion);\n    };\n  }(),\n  raycast: function raycast() {},\n  traverse: function traverse(callback) {\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  },\n  traverseVisible: function traverseVisible(callback) {\n    if (this.visible === false) return;\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  },\n  traverseAncestors: function traverseAncestors(callback) {\n    var parent = this.parent;\n\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  },\n  updateMatrix: function updateMatrix() {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  },\n  updateMatrixWorld: function updateMatrixWorld(force) {\n    if (this.matrixAutoUpdate === true) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate === true || force === true) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      this.children[i].updateMatrixWorld(force);\n    }\n  },\n  toJSON: function toJSON(meta) {\n    // meta is '' when called from JSON.stringify\n    var isRootObject = meta === undefined || meta === '';\n    var output = {}; // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {}\n      };\n      output.metadata = {\n        version: 4.4,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    } // standard Object3D serialization\n\n\n    var object = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    object.matrix = this.matrix.toArray(); //\n\n    if (this.geometry !== undefined) {\n      if (meta.geometries[this.geometry.uuid] === undefined) {\n        meta.geometries[this.geometry.uuid] = this.geometry.toJSON(meta);\n      }\n\n      object.geometry = this.geometry.uuid;\n    }\n\n    if (this.material !== undefined) {\n      if (meta.materials[this.material.uuid] === undefined) {\n        meta.materials[this.material.uuid] = this.material.toJSON(meta);\n      }\n\n      object.material = this.material.uuid;\n    } //\n\n\n    if (this.children.length > 0) {\n      object.children = [];\n\n      for (var i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    if (isRootObject) {\n      var geometries = extractFromCache(meta.geometries);\n      var materials = extractFromCache(meta.materials);\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n    }\n\n    output.object = object;\n    return output; // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  },\n  clone: function clone(recursive) {\n    return new this.constructor().copy(this, recursive);\n  },\n  copy: function copy(source, recursive) {\n    if (recursive === undefined) recursive = true;\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    if (recursive === true) {\n      for (var i = 0; i < source.children.length; i++) {\n        var child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n\n    return this;\n  }\n});\nTHREE.Object3DIdCount = 0; // File:src/core/Face3.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Face3 = function (a, b, c, normal, color, materialIndex) {\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n  this.vertexNormals = Array.isArray(normal) ? normal : [];\n  this.color = color instanceof THREE.Color ? color : new THREE.Color();\n  this.vertexColors = Array.isArray(color) ? color : [];\n  this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n};\n\nTHREE.Face3.prototype = {\n  constructor: THREE.Face3,\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(source) {\n    this.a = source.a;\n    this.b = source.b;\n    this.c = source.c;\n    this.normal.copy(source.normal);\n    this.color.copy(source.color);\n    this.materialIndex = source.materialIndex;\n\n    for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n      this.vertexNormals[i] = source.vertexNormals[i].clone();\n    }\n\n    for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n      this.vertexColors[i] = source.vertexColors[i].clone();\n    }\n\n    return this;\n  }\n}; // File:src/core/BufferAttribute.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.BufferAttribute = function (array, itemSize, normalized) {\n  this.uuid = THREE.Math.generateUUID();\n  this.array = array;\n  this.itemSize = itemSize;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n  this.normalized = normalized === true;\n};\n\nTHREE.BufferAttribute.prototype = {\n  constructor: THREE.BufferAttribute,\n\n  get count() {\n    return this.array.length / this.itemSize;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  setDynamic: function setDynamic(value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function copy(source) {\n    this.array = new source.array.constructor(source.array);\n    this.itemSize = source.itemSize;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function copyAt(index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n\n    for (var i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  copyArray: function copyArray(array) {\n    this.array.set(array);\n    return this;\n  },\n  copyColorsArray: function copyColorsArray(colors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = colors.length; i < l; i++) {\n      var color = colors[i];\n\n      if (color === undefined) {\n        console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n        color = new THREE.Color();\n      }\n\n      array[offset++] = color.r;\n      array[offset++] = color.g;\n      array[offset++] = color.b;\n    }\n\n    return this;\n  },\n  copyIndicesArray: function copyIndicesArray(indices) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = indices.length; i < l; i++) {\n      var index = indices[i];\n      array[offset++] = index.a;\n      array[offset++] = index.b;\n      array[offset++] = index.c;\n    }\n\n    return this;\n  },\n  copyVector2sArray: function copyVector2sArray(vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n        vector = new THREE.Vector2();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n    }\n\n    return this;\n  },\n  copyVector3sArray: function copyVector3sArray(vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n        vector = new THREE.Vector3();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n    }\n\n    return this;\n  },\n  copyVector4sArray: function copyVector4sArray(vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n        vector = new THREE.Vector4();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n      array[offset++] = vector.w;\n    }\n\n    return this;\n  },\n  set: function set(value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  getX: function getX(index) {\n    return this.array[index * this.itemSize];\n  },\n  setX: function setX(index, x) {\n    this.array[index * this.itemSize] = x;\n    return this;\n  },\n  getY: function getY(index) {\n    return this.array[index * this.itemSize + 1];\n  },\n  setY: function setY(index, y) {\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  },\n  getZ: function getZ(index) {\n    return this.array[index * this.itemSize + 2];\n  },\n  setZ: function setZ(index, z) {\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  },\n  getW: function getW(index) {\n    return this.array[index * this.itemSize + 3];\n  },\n  setW: function setW(index, w) {\n    this.array[index * this.itemSize + 3] = w;\n    return this;\n  },\n  setXY: function setXY(index, x, y) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function setXYZ(index, x, y, z) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function setXYZW(index, x, y, z, w) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  }\n}; //\n\nTHREE.Int8Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int8Array(array), itemSize);\n};\n\nTHREE.Uint8Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint8Array(array), itemSize);\n};\n\nTHREE.Uint8ClampedAttribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint8ClampedArray(array), itemSize);\n};\n\nTHREE.Int16Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int16Array(array), itemSize);\n};\n\nTHREE.Uint16Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint16Array(array), itemSize);\n};\n\nTHREE.Int32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int32Array(array), itemSize);\n};\n\nTHREE.Uint32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint32Array(array), itemSize);\n};\n\nTHREE.Float32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Float32Array(array), itemSize);\n};\n\nTHREE.Float64Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Float64Array(array), itemSize);\n}; // Deprecated\n\n\nTHREE.DynamicBufferAttribute = function (array, itemSize) {\n  console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');\n  return new THREE.BufferAttribute(array, itemSize).setDynamic(true);\n}; // File:src/core/InstancedBufferAttribute.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\n\nTHREE.InstancedBufferAttribute = function (array, itemSize, meshPerAttribute) {\n  THREE.BufferAttribute.call(this, array, itemSize);\n  this.meshPerAttribute = meshPerAttribute || 1;\n};\n\nTHREE.InstancedBufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype);\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\n\nTHREE.InstancedBufferAttribute.prototype.copy = function (source) {\n  THREE.BufferAttribute.prototype.copy.call(this, source);\n  this.meshPerAttribute = source.meshPerAttribute;\n  return this;\n}; // File:src/core/InterleavedBuffer.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\n\nTHREE.InterleavedBuffer = function (array, stride) {\n  this.uuid = THREE.Math.generateUUID();\n  this.array = array;\n  this.stride = stride;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n};\n\nTHREE.InterleavedBuffer.prototype = {\n  constructor: THREE.InterleavedBuffer,\n\n  get length() {\n    return this.array.length;\n  },\n\n  get count() {\n    return this.array.length / this.stride;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  setDynamic: function setDynamic(value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function copy(source) {\n    this.array = new source.array.constructor(source.array);\n    this.stride = source.stride;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function copyAt(index1, attribute, index2) {\n    index1 *= this.stride;\n    index2 *= attribute.stride;\n\n    for (var i = 0, l = this.stride; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  set: function set(value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  }\n}; // File:src/core/InstancedInterleavedBuffer.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\nTHREE.InstancedInterleavedBuffer = function (array, stride, meshPerAttribute) {\n  THREE.InterleavedBuffer.call(this, array, stride);\n  this.meshPerAttribute = meshPerAttribute || 1;\n};\n\nTHREE.InstancedInterleavedBuffer.prototype = Object.create(THREE.InterleavedBuffer.prototype);\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\n\nTHREE.InstancedInterleavedBuffer.prototype.copy = function (source) {\n  THREE.InterleavedBuffer.prototype.copy.call(this, source);\n  this.meshPerAttribute = source.meshPerAttribute;\n  return this;\n}; // File:src/core/InterleavedBufferAttribute.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\n\nTHREE.InterleavedBufferAttribute = function (interleavedBuffer, itemSize, offset) {\n  this.uuid = THREE.Math.generateUUID();\n  this.data = interleavedBuffer;\n  this.itemSize = itemSize;\n  this.offset = offset;\n};\n\nTHREE.InterleavedBufferAttribute.prototype = {\n  constructor: THREE.InterleavedBufferAttribute,\n\n  get length() {\n    console.warn('THREE.BufferAttribute: .length has been deprecated. Please use .count.');\n    return this.array.length;\n  },\n\n  get count() {\n    return this.data.count;\n  },\n\n  setX: function setX(index, x) {\n    this.data.array[index * this.data.stride + this.offset] = x;\n    return this;\n  },\n  setY: function setY(index, y) {\n    this.data.array[index * this.data.stride + this.offset + 1] = y;\n    return this;\n  },\n  setZ: function setZ(index, z) {\n    this.data.array[index * this.data.stride + this.offset + 2] = z;\n    return this;\n  },\n  setW: function setW(index, w) {\n    this.data.array[index * this.data.stride + this.offset + 3] = w;\n    return this;\n  },\n  getX: function getX(index) {\n    return this.data.array[index * this.data.stride + this.offset];\n  },\n  getY: function getY(index) {\n    return this.data.array[index * this.data.stride + this.offset + 1];\n  },\n  getZ: function getZ(index) {\n    return this.data.array[index * this.data.stride + this.offset + 2];\n  },\n  getW: function getW(index) {\n    return this.data.array[index * this.data.stride + this.offset + 3];\n  },\n  setXY: function setXY(index, x, y) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function setXYZ(index, x, y, z) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function setXYZW(index, x, y, z, w) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    this.data.array[index + 3] = w;\n    return this;\n  }\n}; // File:src/core/Geometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Geometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Geometry';\n  this.vertices = [];\n  this.colors = [];\n  this.faces = [];\n  this.faceVertexUvs = [[]];\n  this.morphTargets = [];\n  this.morphNormals = [];\n  this.skinWeights = [];\n  this.skinIndices = [];\n  this.lineDistances = [];\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.elementsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.lineDistancesNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nObject.assign(THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {\n  applyMatrix: function applyMatrix(matrix) {\n    var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n\n    for (var i = 0, il = this.vertices.length; i < il; i++) {\n      var vertex = this.vertices[i];\n      vertex.applyMatrix4(matrix);\n    }\n\n    for (var i = 0, il = this.faces.length; i < il; i++) {\n      var face = this.faces[i];\n      face.normal.applyMatrix3(normalMatrix).normalize();\n\n      for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n        face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n      }\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    this.verticesNeedUpdate = true;\n    this.normalsNeedUpdate = true;\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1;\n    return function rotateX(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1;\n    return function rotateY(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1;\n    return function rotateZ(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1;\n    return function translate(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1;\n    return function scale(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj;\n    return function lookAt(vector) {\n      if (obj === undefined) obj = new THREE.Object3D();\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  fromBufferGeometry: function fromBufferGeometry(geometry) {\n    var scope = this;\n    var indices = geometry.index !== null ? geometry.index.array : undefined;\n    var attributes = geometry.attributes;\n    var positions = attributes.position.array;\n    var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n    var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n    var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n    var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n    if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n    var tempNormals = [];\n    var tempUVs = [];\n    var tempUVs2 = [];\n\n    for (var i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n      scope.vertices.push(new THREE.Vector3(positions[i], positions[i + 1], positions[i + 2]));\n\n      if (normals !== undefined) {\n        tempNormals.push(new THREE.Vector3(normals[i], normals[i + 1], normals[i + 2]));\n      }\n\n      if (colors !== undefined) {\n        scope.colors.push(new THREE.Color(colors[i], colors[i + 1], colors[i + 2]));\n      }\n\n      if (uvs !== undefined) {\n        tempUVs.push(new THREE.Vector2(uvs[j], uvs[j + 1]));\n      }\n\n      if (uvs2 !== undefined) {\n        tempUVs2.push(new THREE.Vector2(uvs2[j], uvs2[j + 1]));\n      }\n    }\n\n    function addFace(a, b, c, materialIndex) {\n      var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n      var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n      var face = new THREE.Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n      scope.faces.push(face);\n\n      if (uvs !== undefined) {\n        scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n      }\n\n      if (uvs2 !== undefined) {\n        scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n      }\n    }\n\n    if (indices !== undefined) {\n      var groups = geometry.groups;\n\n      if (groups.length > 0) {\n        for (var i = 0; i < groups.length; i++) {\n          var group = groups[i];\n          var start = group.start;\n          var count = group.count;\n\n          for (var j = start, jl = start + count; j < jl; j += 3) {\n            addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n          }\n        }\n      } else {\n        for (var i = 0; i < indices.length; i += 3) {\n          addFace(indices[i], indices[i + 1], indices[i + 2]);\n        }\n      }\n    } else {\n      for (var i = 0; i < positions.length / 3; i += 3) {\n        addFace(i, i + 1, i + 2);\n      }\n    }\n\n    this.computeFaceNormals();\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    return this;\n  },\n  center: function center() {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.center().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  normalize: function normalize() {\n    this.computeBoundingSphere();\n    var center = this.boundingSphere.center;\n    var radius = this.boundingSphere.radius;\n    var s = radius === 0 ? 1 : 1.0 / radius;\n    var matrix = new THREE.Matrix4();\n    matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n    this.applyMatrix(matrix);\n    return this;\n  },\n  computeFaceNormals: function computeFaceNormals() {\n    var cb = new THREE.Vector3(),\n        ab = new THREE.Vector3();\n\n    for (var f = 0, fl = this.faces.length; f < fl; f++) {\n      var face = this.faces[f];\n      var vA = this.vertices[face.a];\n      var vB = this.vertices[face.b];\n      var vC = this.vertices[face.c];\n      cb.subVectors(vC, vB);\n      ab.subVectors(vA, vB);\n      cb.cross(ab);\n      cb.normalize();\n      face.normal.copy(cb);\n    }\n  },\n  computeVertexNormals: function computeVertexNormals(areaWeighted) {\n    if (areaWeighted === undefined) areaWeighted = true;\n    var v, vl, f, fl, face, vertices;\n    vertices = new Array(this.vertices.length);\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v] = new THREE.Vector3();\n    }\n\n    if (areaWeighted) {\n      // vertex normals weighted by triangle areas\n      // http://www.iquilezles.org/www/articles/normals/normals.htm\n      var vA, vB, vC;\n      var cb = new THREE.Vector3(),\n          ab = new THREE.Vector3();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vA = this.vertices[face.a];\n        vB = this.vertices[face.b];\n        vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        vertices[face.a].add(cb);\n        vertices[face.b].add(cb);\n        vertices[face.c].add(cb);\n      }\n    } else {\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vertices[face.a].add(face.normal);\n        vertices[face.b].add(face.normal);\n        vertices[face.c].add(face.normal);\n      }\n    }\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v].normalize();\n    }\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        vertexNormals[0].copy(vertices[face.a]);\n        vertexNormals[1].copy(vertices[face.b]);\n        vertexNormals[2].copy(vertices[face.c]);\n      } else {\n        vertexNormals[0] = vertices[face.a].clone();\n        vertexNormals[1] = vertices[face.b].clone();\n        vertexNormals[2] = vertices[face.c].clone();\n      }\n    }\n\n    if (this.faces.length > 0) {\n      this.normalsNeedUpdate = true;\n    }\n  },\n  computeMorphNormals: function computeMorphNormals() {\n    var i, il, f, fl, face; // save original normals\n    // - create temp variables on first access\n    //   otherwise just copy (for faster repeated calls)\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n\n      if (!face.__originalFaceNormal) {\n        face.__originalFaceNormal = face.normal.clone();\n      } else {\n        face.__originalFaceNormal.copy(face.normal);\n      }\n\n      if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n      for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n        if (!face.__originalVertexNormals[i]) {\n          face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n        } else {\n          face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n        }\n      }\n    } // use temp geometry to compute face and vertex normals for each morph\n\n\n    var tmpGeo = new THREE.Geometry();\n    tmpGeo.faces = this.faces;\n\n    for (i = 0, il = this.morphTargets.length; i < il; i++) {\n      // create on first access\n      if (!this.morphNormals[i]) {\n        this.morphNormals[i] = {};\n        this.morphNormals[i].faceNormals = [];\n        this.morphNormals[i].vertexNormals = [];\n        var dstNormalsFace = this.morphNormals[i].faceNormals;\n        var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          faceNormal = new THREE.Vector3();\n          vertexNormals = {\n            a: new THREE.Vector3(),\n            b: new THREE.Vector3(),\n            c: new THREE.Vector3()\n          };\n          dstNormalsFace.push(faceNormal);\n          dstNormalsVertex.push(vertexNormals);\n        }\n      }\n\n      var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n      tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n      tmpGeo.computeFaceNormals();\n      tmpGeo.computeVertexNormals(); // store morph normals\n\n      var faceNormal, vertexNormals;\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        faceNormal = morphNormals.faceNormals[f];\n        vertexNormals = morphNormals.vertexNormals[f];\n        faceNormal.copy(face.normal);\n        vertexNormals.a.copy(face.vertexNormals[0]);\n        vertexNormals.b.copy(face.vertexNormals[1]);\n        vertexNormals.c.copy(face.vertexNormals[2]);\n      }\n    } // restore original normals\n\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      face.normal = face.__originalFaceNormal;\n      face.vertexNormals = face.__originalVertexNormals;\n    }\n  },\n  computeTangents: function computeTangents() {\n    console.warn('THREE.Geometry: .computeTangents() has been removed.');\n  },\n  computeLineDistances: function computeLineDistances() {\n    var d = 0;\n    var vertices = this.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      if (i > 0) {\n        d += vertices[i].distanceTo(vertices[i - 1]);\n      }\n\n      this.lineDistances[i] = d;\n    }\n  },\n  computeBoundingBox: function computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new THREE.Box3();\n    }\n\n    this.boundingBox.setFromPoints(this.vertices);\n  },\n  computeBoundingSphere: function computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new THREE.Sphere();\n    }\n\n    this.boundingSphere.setFromPoints(this.vertices);\n  },\n  merge: function merge(geometry, matrix, materialIndexOffset) {\n    if (geometry instanceof THREE.Geometry === false) {\n      console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n      return;\n    }\n\n    var normalMatrix,\n        vertexOffset = this.vertices.length,\n        vertices1 = this.vertices,\n        vertices2 = geometry.vertices,\n        faces1 = this.faces,\n        faces2 = geometry.faces,\n        uvs1 = this.faceVertexUvs[0],\n        uvs2 = geometry.faceVertexUvs[0];\n    if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n    if (matrix !== undefined) {\n      normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n    } // vertices\n\n\n    for (var i = 0, il = vertices2.length; i < il; i++) {\n      var vertex = vertices2[i];\n      var vertexCopy = vertex.clone();\n      if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n      vertices1.push(vertexCopy);\n    } // faces\n\n\n    for (i = 0, il = faces2.length; i < il; i++) {\n      var face = faces2[i],\n          faceCopy,\n          normal,\n          color,\n          faceVertexNormals = face.vertexNormals,\n          faceVertexColors = face.vertexColors;\n      faceCopy = new THREE.Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n      faceCopy.normal.copy(face.normal);\n\n      if (normalMatrix !== undefined) {\n        faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n      }\n\n      for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n        normal = faceVertexNormals[j].clone();\n\n        if (normalMatrix !== undefined) {\n          normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        faceCopy.vertexNormals.push(normal);\n      }\n\n      faceCopy.color.copy(face.color);\n\n      for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n        color = faceVertexColors[j];\n        faceCopy.vertexColors.push(color.clone());\n      }\n\n      faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n      faces1.push(faceCopy);\n    } // uvs\n\n\n    for (i = 0, il = uvs2.length; i < il; i++) {\n      var uv = uvs2[i],\n          uvCopy = [];\n\n      if (uv === undefined) {\n        continue;\n      }\n\n      for (var j = 0, jl = uv.length; j < jl; j++) {\n        uvCopy.push(uv[j].clone());\n      }\n\n      uvs1.push(uvCopy);\n    }\n  },\n  mergeMesh: function mergeMesh(mesh) {\n    if (mesh instanceof THREE.Mesh === false) {\n      console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n      return;\n    }\n\n    mesh.matrixAutoUpdate && mesh.updateMatrix();\n    this.merge(mesh.geometry, mesh.matrix);\n  },\n\n  /*\r\n   * Checks for duplicate vertices with hashmap.\r\n   * Duplicated vertices are removed\r\n   * and faces' vertices are updated.\r\n   */\n  mergeVertices: function mergeVertices() {\n    var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n    var unique = [],\n        changes = [];\n    var v, key;\n    var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n    var precision = Math.pow(10, precisionPoints);\n    var i, il, face;\n    var indices, j, jl;\n\n    for (i = 0, il = this.vertices.length; i < il; i++) {\n      v = this.vertices[i];\n      key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n      if (verticesMap[key] === undefined) {\n        verticesMap[key] = i;\n        unique.push(this.vertices[i]);\n        changes[i] = unique.length - 1;\n      } else {\n        //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n        changes[i] = changes[verticesMap[key]];\n      }\n    } // if faces are completely degenerate after merging vertices, we\n    // have to remove them from the geometry.\n\n\n    var faceIndicesToRemove = [];\n\n    for (i = 0, il = this.faces.length; i < il; i++) {\n      face = this.faces[i];\n      face.a = changes[face.a];\n      face.b = changes[face.b];\n      face.c = changes[face.c];\n      indices = [face.a, face.b, face.c];\n      var dupIndex = -1; // if any duplicate vertices are found in a Face3\n      // we have to remove the face as nothing can be saved\n\n      for (var n = 0; n < 3; n++) {\n        if (indices[n] === indices[(n + 1) % 3]) {\n          dupIndex = n;\n          faceIndicesToRemove.push(i);\n          break;\n        }\n      }\n    }\n\n    for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n      var idx = faceIndicesToRemove[i];\n      this.faces.splice(idx, 1);\n\n      for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n        this.faceVertexUvs[j].splice(idx, 1);\n      }\n    } // Use unique set of vertices\n\n\n    var diff = this.vertices.length - unique.length;\n    this.vertices = unique;\n    return diff;\n  },\n  sortFacesByMaterialIndex: function sortFacesByMaterialIndex() {\n    var faces = this.faces;\n    var length = faces.length; // tag faces\n\n    for (var i = 0; i < length; i++) {\n      faces[i]._id = i;\n    } // sort faces\n\n\n    function materialIndexSort(a, b) {\n      return a.materialIndex - b.materialIndex;\n    }\n\n    faces.sort(materialIndexSort); // sort uvs\n\n    var uvs1 = this.faceVertexUvs[0];\n    var uvs2 = this.faceVertexUvs[1];\n    var newUvs1, newUvs2;\n    if (uvs1 && uvs1.length === length) newUvs1 = [];\n    if (uvs2 && uvs2.length === length) newUvs2 = [];\n\n    for (var i = 0; i < length; i++) {\n      var id = faces[i]._id;\n      if (newUvs1) newUvs1.push(uvs1[id]);\n      if (newUvs2) newUvs2.push(uvs2[id]);\n    }\n\n    if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n    if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n  },\n  toJSON: function toJSON() {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'Geometry',\n        generator: 'Geometry.toJSON'\n      }\n    }; // standard Geometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    var vertices = [];\n\n    for (var i = 0; i < this.vertices.length; i++) {\n      var vertex = this.vertices[i];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    var faces = [];\n    var normals = [];\n    var normalsHash = {};\n    var colors = [];\n    var colorsHash = {};\n    var uvs = [];\n    var uvsHash = {};\n\n    for (var i = 0; i < this.faces.length; i++) {\n      var face = this.faces[i];\n      var hasMaterial = true;\n      var hasFaceUv = false; // deprecated\n\n      var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n      var hasFaceNormal = face.normal.length() > 0;\n      var hasFaceVertexNormal = face.vertexNormals.length > 0;\n      var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n      var hasFaceVertexColor = face.vertexColors.length > 0;\n      var faceType = 0;\n      faceType = setBit(faceType, 0, 0); // isQuad\n\n      faceType = setBit(faceType, 1, hasMaterial);\n      faceType = setBit(faceType, 2, hasFaceUv);\n      faceType = setBit(faceType, 3, hasFaceVertexUv);\n      faceType = setBit(faceType, 4, hasFaceNormal);\n      faceType = setBit(faceType, 5, hasFaceVertexNormal);\n      faceType = setBit(faceType, 6, hasFaceColor);\n      faceType = setBit(faceType, 7, hasFaceVertexColor);\n      faces.push(faceType);\n      faces.push(face.a, face.b, face.c);\n      faces.push(face.materialIndex);\n\n      if (hasFaceVertexUv) {\n        var faceVertexUvs = this.faceVertexUvs[0][i];\n        faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n      }\n\n      if (hasFaceNormal) {\n        faces.push(getNormalIndex(face.normal));\n      }\n\n      if (hasFaceVertexNormal) {\n        var vertexNormals = face.vertexNormals;\n        faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n      }\n\n      if (hasFaceColor) {\n        faces.push(getColorIndex(face.color));\n      }\n\n      if (hasFaceVertexColor) {\n        var vertexColors = face.vertexColors;\n        faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n      }\n    }\n\n    function setBit(value, position, enabled) {\n      return enabled ? value | 1 << position : value & ~(1 << position);\n    }\n\n    function getNormalIndex(normal) {\n      var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n      if (normalsHash[hash] !== undefined) {\n        return normalsHash[hash];\n      }\n\n      normalsHash[hash] = normals.length / 3;\n      normals.push(normal.x, normal.y, normal.z);\n      return normalsHash[hash];\n    }\n\n    function getColorIndex(color) {\n      var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n      if (colorsHash[hash] !== undefined) {\n        return colorsHash[hash];\n      }\n\n      colorsHash[hash] = colors.length;\n      colors.push(color.getHex());\n      return colorsHash[hash];\n    }\n\n    function getUvIndex(uv) {\n      var hash = uv.x.toString() + uv.y.toString();\n\n      if (uvsHash[hash] !== undefined) {\n        return uvsHash[hash];\n      }\n\n      uvsHash[hash] = uvs.length / 2;\n      uvs.push(uv.x, uv.y);\n      return uvsHash[hash];\n    }\n\n    data.data = {};\n    data.data.vertices = vertices;\n    data.data.normals = normals;\n    if (colors.length > 0) data.data.colors = colors;\n    if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n    data.data.faces = faces;\n    return data;\n  },\n  clone: function clone() {\n    /*\r\n    // Handle primitives\r\n    \t\tvar parameters = this.parameters;\r\n    \t\tif ( parameters !== undefined ) {\r\n    \t\t\tvar values = [];\r\n    \t\t\tfor ( var key in parameters ) {\r\n    \t\t\t\tvalues.push( parameters[ key ] );\r\n    \t\t\t}\r\n    \t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n    \tthis.constructor.apply( geometry, values );\r\n    \treturn geometry;\r\n    \t\t}\r\n    \t\treturn new this.constructor().copy( this );\r\n    */\n    return new THREE.Geometry().copy(this);\n  },\n  copy: function copy(source) {\n    this.vertices = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    var vertices = source.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      this.vertices.push(vertices[i].clone());\n    }\n\n    var faces = source.faces;\n\n    for (var i = 0, il = faces.length; i < il; i++) {\n      this.faces.push(faces[i].clone());\n    }\n\n    for (var i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n      var faceVertexUvs = source.faceVertexUvs[i];\n\n      if (this.faceVertexUvs[i] === undefined) {\n        this.faceVertexUvs[i] = [];\n      }\n\n      for (var j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n        var uvs = faceVertexUvs[j],\n            uvsCopy = [];\n\n        for (var k = 0, kl = uvs.length; k < kl; k++) {\n          var uv = uvs[k];\n          uvsCopy.push(uv.clone());\n        }\n\n        this.faceVertexUvs[i].push(uvsCopy);\n      }\n    }\n\n    return this;\n  },\n  dispose: function dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\nTHREE.GeometryIdCount = 0; // File:src/core/DirectGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.DirectGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'DirectGeometry';\n  this.indices = [];\n  this.vertices = [];\n  this.normals = [];\n  this.colors = [];\n  this.uvs = [];\n  this.uvs2 = [];\n  this.groups = [];\n  this.morphTargets = {};\n  this.skinWeights = [];\n  this.skinIndices = []; // this.lineDistances = [];\n\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nObject.assign(THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {\n  computeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\n  computeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\n  computeFaceNormals: function computeFaceNormals() {\n    console.warn('THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.');\n  },\n  computeVertexNormals: function computeVertexNormals() {\n    console.warn('THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.');\n  },\n  computeGroups: function computeGroups(geometry) {\n    var group;\n    var groups = [];\n    var materialIndex;\n    var faces = geometry.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i]; // materials\n\n      if (face.materialIndex !== materialIndex) {\n        materialIndex = face.materialIndex;\n\n        if (group !== undefined) {\n          group.count = i * 3 - group.start;\n          groups.push(group);\n        }\n\n        group = {\n          start: i * 3,\n          materialIndex: materialIndex\n        };\n      }\n    }\n\n    if (group !== undefined) {\n      group.count = i * 3 - group.start;\n      groups.push(group);\n    }\n\n    this.groups = groups;\n  },\n  fromGeometry: function fromGeometry(geometry) {\n    var faces = geometry.faces;\n    var vertices = geometry.vertices;\n    var faceVertexUvs = geometry.faceVertexUvs;\n    var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n    var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n    var morphTargets = geometry.morphTargets;\n    var morphTargetsLength = morphTargets.length;\n    var morphTargetsPosition;\n\n    if (morphTargetsLength > 0) {\n      morphTargetsPosition = [];\n\n      for (var i = 0; i < morphTargetsLength; i++) {\n        morphTargetsPosition[i] = [];\n      }\n\n      this.morphTargets.position = morphTargetsPosition;\n    }\n\n    var morphNormals = geometry.morphNormals;\n    var morphNormalsLength = morphNormals.length;\n    var morphTargetsNormal;\n\n    if (morphNormalsLength > 0) {\n      morphTargetsNormal = [];\n\n      for (var i = 0; i < morphNormalsLength; i++) {\n        morphTargetsNormal[i] = [];\n      }\n\n      this.morphTargets.normal = morphTargetsNormal;\n    } // skins\n\n\n    var skinIndices = geometry.skinIndices;\n    var skinWeights = geometry.skinWeights;\n    var hasSkinIndices = skinIndices.length === vertices.length;\n    var hasSkinWeights = skinWeights.length === vertices.length; //\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n      } else {\n        var normal = face.normal;\n        this.normals.push(normal, normal, normal);\n      }\n\n      var vertexColors = face.vertexColors;\n\n      if (vertexColors.length === 3) {\n        this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n      } else {\n        var color = face.color;\n        this.colors.push(color, color, color);\n      }\n\n      if (hasFaceVertexUv === true) {\n        var vertexUvs = faceVertexUvs[0][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n          this.uvs.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n        }\n      }\n\n      if (hasFaceVertexUv2 === true) {\n        var vertexUvs = faceVertexUvs[1][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n          this.uvs2.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n        }\n      } // morphs\n\n\n      for (var j = 0; j < morphTargetsLength; j++) {\n        var morphTarget = morphTargets[j].vertices;\n        morphTargetsPosition[j].push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n      }\n\n      for (var j = 0; j < morphNormalsLength; j++) {\n        var morphNormal = morphNormals[j].vertexNormals[i];\n        morphTargetsNormal[j].push(morphNormal.a, morphNormal.b, morphNormal.c);\n      } // skins\n\n\n      if (hasSkinIndices) {\n        this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n      }\n\n      if (hasSkinWeights) {\n        this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n      }\n    }\n\n    this.computeGroups(geometry);\n    this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n    return this;\n  },\n  dispose: function dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n}); // File:src/core/BufferGeometry.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.BufferGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'BufferGeometry';\n  this.index = null;\n  this.attributes = {};\n  this.morphAttributes = {};\n  this.groups = [];\n  this.boundingBox = null;\n  this.boundingSphere = null;\n  this.drawRange = {\n    start: 0,\n    count: Infinity\n  };\n};\n\nObject.assign(THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {\n  getIndex: function getIndex() {\n    return this.index;\n  },\n  setIndex: function setIndex(index) {\n    this.index = index;\n  },\n  addAttribute: function addAttribute(name, attribute) {\n    if (attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false) {\n      console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n      this.addAttribute(name, new THREE.BufferAttribute(arguments[1], arguments[2]));\n      return;\n    }\n\n    if (name === 'index') {\n      console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n      this.setIndex(attribute);\n      return;\n    }\n\n    this.attributes[name] = attribute;\n    return this;\n  },\n  getAttribute: function getAttribute(name) {\n    return this.attributes[name];\n  },\n  removeAttribute: function removeAttribute(name) {\n    delete this.attributes[name];\n    return this;\n  },\n  addGroup: function addGroup(start, count, materialIndex) {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex !== undefined ? materialIndex : 0\n    });\n  },\n  clearGroups: function clearGroups() {\n    this.groups = [];\n  },\n  setDrawRange: function setDrawRange(start, count) {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  },\n  applyMatrix: function applyMatrix(matrix) {\n    var position = this.attributes.position;\n\n    if (position !== undefined) {\n      matrix.applyToVector3Array(position.array);\n      position.needsUpdate = true;\n    }\n\n    var normal = this.attributes.normal;\n\n    if (normal !== undefined) {\n      var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n      normalMatrix.applyToVector3Array(normal.array);\n      normal.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1;\n    return function rotateX(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1;\n    return function rotateY(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1;\n    return function rotateZ(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1;\n    return function translate(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1;\n    return function scale(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj;\n    return function lookAt(vector) {\n      if (obj === undefined) obj = new THREE.Object3D();\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  center: function center() {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.center().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  setFromObject: function setFromObject(object) {\n    // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n    var geometry = object.geometry;\n\n    if (object instanceof THREE.Points || object instanceof THREE.Line) {\n      var positions = new THREE.Float32Attribute(geometry.vertices.length * 3, 3);\n      var colors = new THREE.Float32Attribute(geometry.colors.length * 3, 3);\n      this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n      this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n      if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n        var lineDistances = new THREE.Float32Attribute(geometry.lineDistances.length, 1);\n        this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n    } else if (object instanceof THREE.Mesh) {\n      if (geometry instanceof THREE.Geometry) {\n        this.fromGeometry(geometry);\n      }\n    }\n\n    return this;\n  },\n  updateFromObject: function updateFromObject(object) {\n    var geometry = object.geometry;\n\n    if (object instanceof THREE.Mesh) {\n      var direct = geometry.__directGeometry;\n\n      if (direct === undefined) {\n        return this.fromGeometry(geometry);\n      }\n\n      direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      geometry.verticesNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.uvsNeedUpdate = false;\n      geometry.groupsNeedUpdate = false;\n      geometry = direct;\n    }\n\n    if (geometry.verticesNeedUpdate === true) {\n      var attribute = this.attributes.position;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.vertices);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.verticesNeedUpdate = false;\n    }\n\n    if (geometry.normalsNeedUpdate === true) {\n      var attribute = this.attributes.normal;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.normals);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.normalsNeedUpdate = false;\n    }\n\n    if (geometry.colorsNeedUpdate === true) {\n      var attribute = this.attributes.color;\n\n      if (attribute !== undefined) {\n        attribute.copyColorsArray(geometry.colors);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.colorsNeedUpdate = false;\n    }\n\n    if (geometry.uvsNeedUpdate) {\n      var attribute = this.attributes.uv;\n\n      if (attribute !== undefined) {\n        attribute.copyVector2sArray(geometry.uvs);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.uvsNeedUpdate = false;\n    }\n\n    if (geometry.lineDistancesNeedUpdate) {\n      var attribute = this.attributes.lineDistance;\n\n      if (attribute !== undefined) {\n        attribute.copyArray(geometry.lineDistances);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.lineDistancesNeedUpdate = false;\n    }\n\n    if (geometry.groupsNeedUpdate) {\n      geometry.computeGroups(object.geometry);\n      this.groups = geometry.groups;\n      geometry.groupsNeedUpdate = false;\n    }\n\n    return this;\n  },\n  fromGeometry: function fromGeometry(geometry) {\n    geometry.__directGeometry = new THREE.DirectGeometry().fromGeometry(geometry);\n    return this.fromDirectGeometry(geometry.__directGeometry);\n  },\n  fromDirectGeometry: function fromDirectGeometry(geometry) {\n    var positions = new Float32Array(geometry.vertices.length * 3);\n    this.addAttribute('position', new THREE.BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n    if (geometry.normals.length > 0) {\n      var normals = new Float32Array(geometry.normals.length * 3);\n      this.addAttribute('normal', new THREE.BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n    }\n\n    if (geometry.colors.length > 0) {\n      var colors = new Float32Array(geometry.colors.length * 3);\n      this.addAttribute('color', new THREE.BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n    }\n\n    if (geometry.uvs.length > 0) {\n      var uvs = new Float32Array(geometry.uvs.length * 2);\n      this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n    }\n\n    if (geometry.uvs2.length > 0) {\n      var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n      this.addAttribute('uv2', new THREE.BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n    }\n\n    if (geometry.indices.length > 0) {\n      var TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n      var indices = new TypeArray(geometry.indices.length * 3);\n      this.setIndex(new THREE.BufferAttribute(indices, 1).copyIndicesArray(geometry.indices));\n    } // groups\n\n\n    this.groups = geometry.groups; // morphs\n\n    for (var name in geometry.morphTargets) {\n      var array = [];\n      var morphTargets = geometry.morphTargets[name];\n\n      for (var i = 0, l = morphTargets.length; i < l; i++) {\n        var morphTarget = morphTargets[i];\n        var attribute = new THREE.Float32Attribute(morphTarget.length * 3, 3);\n        array.push(attribute.copyVector3sArray(morphTarget));\n      }\n\n      this.morphAttributes[name] = array;\n    } // skinning\n\n\n    if (geometry.skinIndices.length > 0) {\n      var skinIndices = new THREE.Float32Attribute(geometry.skinIndices.length * 4, 4);\n      this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n    }\n\n    if (geometry.skinWeights.length > 0) {\n      var skinWeights = new THREE.Float32Attribute(geometry.skinWeights.length * 4, 4);\n      this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n    } //\n\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    return this;\n  },\n  computeBoundingBox: function computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new THREE.Box3();\n    }\n\n    var positions = this.attributes.position.array;\n\n    if (positions !== undefined) {\n      this.boundingBox.setFromArray(positions);\n    } else {\n      this.boundingBox.makeEmpty();\n    }\n\n    if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n      console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n    }\n  },\n  computeBoundingSphere: function () {\n    var box = new THREE.Box3();\n    var vector = new THREE.Vector3();\n    return function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new THREE.Sphere();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions) {\n        var center = this.boundingSphere.center;\n        box.setFromArray(positions);\n        box.center(center); // hoping to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = positions.length; i < il; i += 3) {\n          vector.fromArray(positions, i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n        }\n      }\n    };\n  }(),\n  computeFaceNormals: function computeFaceNormals() {// backwards compatibility\n  },\n  computeVertexNormals: function computeVertexNormals() {\n    var index = this.index;\n    var attributes = this.attributes;\n    var groups = this.groups;\n\n    if (attributes.position) {\n      var positions = attributes.position.array;\n\n      if (attributes.normal === undefined) {\n        this.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(positions.length), 3));\n      } else {\n        // reset existing normals to zero\n        var array = attributes.normal.array;\n\n        for (var i = 0, il = array.length; i < il; i++) {\n          array[i] = 0;\n        }\n      }\n\n      var normals = attributes.normal.array;\n      var vA,\n          vB,\n          vC,\n          pA = new THREE.Vector3(),\n          pB = new THREE.Vector3(),\n          pC = new THREE.Vector3(),\n          cb = new THREE.Vector3(),\n          ab = new THREE.Vector3(); // indexed elements\n\n      if (index) {\n        var indices = index.array;\n\n        if (groups.length === 0) {\n          this.addGroup(0, indices.length);\n        }\n\n        for (var j = 0, jl = groups.length; j < jl; ++j) {\n          var group = groups[j];\n          var start = group.start;\n          var count = group.count;\n\n          for (var i = start, il = start + count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n        for (var i = 0, il = positions.length; i < il; i += 9) {\n          pA.fromArray(positions, i);\n          pB.fromArray(positions, i + 3);\n          pC.fromArray(positions, i + 6);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normals[i] = cb.x;\n          normals[i + 1] = cb.y;\n          normals[i + 2] = cb.z;\n          normals[i + 3] = cb.x;\n          normals[i + 4] = cb.y;\n          normals[i + 5] = cb.z;\n          normals[i + 6] = cb.x;\n          normals[i + 7] = cb.y;\n          normals[i + 8] = cb.z;\n        }\n      }\n\n      this.normalizeNormals();\n      attributes.normal.needsUpdate = true;\n    }\n  },\n  merge: function merge(geometry, offset) {\n    if (geometry instanceof THREE.BufferGeometry === false) {\n      console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n      return;\n    }\n\n    if (offset === undefined) offset = 0;\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      if (geometry.attributes[key] === undefined) continue;\n      var attribute1 = attributes[key];\n      var attributeArray1 = attribute1.array;\n      var attribute2 = geometry.attributes[key];\n      var attributeArray2 = attribute2.array;\n      var attributeSize = attribute2.itemSize;\n\n      for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n        attributeArray1[j] = attributeArray2[i];\n      }\n    }\n\n    return this;\n  },\n  normalizeNormals: function normalizeNormals() {\n    var normals = this.attributes.normal.array;\n    var x, y, z, n;\n\n    for (var i = 0, il = normals.length; i < il; i += 3) {\n      x = normals[i];\n      y = normals[i + 1];\n      z = normals[i + 2];\n      n = 1.0 / Math.sqrt(x * x + y * y + z * z);\n      normals[i] *= n;\n      normals[i + 1] *= n;\n      normals[i + 2] *= n;\n    }\n  },\n  toNonIndexed: function toNonIndexed() {\n    if (this.index === null) {\n      console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');\n      return this;\n    }\n\n    var geometry2 = new THREE.BufferGeometry();\n    var indices = this.index.array;\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      var array = attribute.array;\n      var itemSize = attribute.itemSize;\n      var array2 = new array.constructor(indices.length * itemSize);\n      var index = 0,\n          index2 = 0;\n\n      for (var i = 0, l = indices.length; i < l; i++) {\n        index = indices[i] * itemSize;\n\n        for (var j = 0; j < itemSize; j++) {\n          array2[index2++] = array[index++];\n        }\n      }\n\n      geometry2.addAttribute(name, new THREE.BufferAttribute(array2, itemSize));\n    }\n\n    return geometry2;\n  },\n  toJSON: function toJSON() {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometry.toJSON'\n      }\n    }; // standard BufferGeometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    data.data = {\n      attributes: {}\n    };\n    var index = this.index;\n\n    if (index !== null) {\n      var array = Array.prototype.slice.call(index.array);\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: array\n      };\n    }\n\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var array = Array.prototype.slice.call(attribute.array);\n      data.data.attributes[key] = {\n        itemSize: attribute.itemSize,\n        type: attribute.array.constructor.name,\n        array: array,\n        normalized: attribute.normalized\n      };\n    }\n\n    var groups = this.groups;\n\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n\n    var boundingSphere = this.boundingSphere;\n\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n\n    return data;\n  },\n  clone: function clone() {\n    /*\r\n    // Handle primitives\r\n    \t\tvar parameters = this.parameters;\r\n    \t\tif ( parameters !== undefined ) {\r\n    \t\t\tvar values = [];\r\n    \t\t\tfor ( var key in parameters ) {\r\n    \t\t\t\tvalues.push( parameters[ key ] );\r\n    \t\t\t}\r\n    \t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n    \tthis.constructor.apply( geometry, values );\r\n    \treturn geometry;\r\n    \t\t}\r\n    \t\treturn new this.constructor().copy( this );\r\n    */\n    return new THREE.BufferGeometry().copy(this);\n  },\n  copy: function copy(source) {\n    var index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone());\n    }\n\n    var attributes = source.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      this.addAttribute(name, attribute.clone());\n    }\n\n    var groups = source.groups;\n\n    for (var i = 0, l = groups.length; i < l; i++) {\n      var group = groups[i];\n      this.addGroup(group.start, group.count, group.materialIndex);\n    }\n\n    return this;\n  },\n  dispose: function dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\nTHREE.BufferGeometry.MaxIndex = 65535; // File:src/core/InstancedBufferGeometry.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\nTHREE.InstancedBufferGeometry = function () {\n  THREE.BufferGeometry.call(this);\n  this.type = 'InstancedBufferGeometry';\n  this.maxInstancedCount = undefined;\n};\n\nTHREE.InstancedBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\n\nTHREE.InstancedBufferGeometry.prototype.addGroup = function (start, count, instances) {\n  this.groups.push({\n    start: start,\n    count: count,\n    instances: instances\n  });\n};\n\nTHREE.InstancedBufferGeometry.prototype.copy = function (source) {\n  var index = source.index;\n\n  if (index !== null) {\n    this.setIndex(index.clone());\n  }\n\n  var attributes = source.attributes;\n\n  for (var name in attributes) {\n    var attribute = attributes[name];\n    this.addAttribute(name, attribute.clone());\n  }\n\n  var groups = source.groups;\n\n  for (var i = 0, l = groups.length; i < l; i++) {\n    var group = groups[i];\n    this.addGroup(group.start, group.count, group.instances);\n  }\n\n  return this;\n}; // File:src/core/Uniform.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.Uniform = function (value) {\n  if (typeof value === 'string') {\n    console.warn('THREE.Uniform: Type parameter is no longer needed.');\n    value = arguments[1];\n  }\n\n  this.value = value;\n  this.dynamic = false;\n};\n\nTHREE.Uniform.prototype = {\n  constructor: THREE.Uniform,\n  onUpdate: function onUpdate(callback) {\n    this.dynamic = true;\n    this.onUpdateCallback = callback;\n    return this;\n  }\n}; // File:src/animation/AnimationAction.js\n\n/**\r\n *\r\n * Action provided by AnimationMixer for scheduling clip playback on specific\r\n * objects.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n *\r\n */\n\nTHREE.AnimationAction = function () {\n  throw new Error(\"THREE.AnimationAction: \" + \"Use mixer.clipAction for construction.\");\n};\n\nTHREE.AnimationAction._new = function AnimationAction(mixer, clip, localRoot) {\n  this._mixer = mixer;\n  this._clip = clip;\n  this._localRoot = localRoot || null;\n  var tracks = clip.tracks,\n      nTracks = tracks.length,\n      interpolants = new Array(nTracks);\n  var interpolantSettings = {\n    endingStart: THREE.ZeroCurvatureEnding,\n    endingEnd: THREE.ZeroCurvatureEnding\n  };\n\n  for (var i = 0; i !== nTracks; ++i) {\n    var interpolant = tracks[i].createInterpolant(null);\n    interpolants[i] = interpolant;\n    interpolant.settings = interpolantSettings;\n  }\n\n  this._interpolantSettings = interpolantSettings;\n  this._interpolants = interpolants; // bound by the mixer\n  // inside: PropertyMixer (managed by the mixer)\n\n  this._propertyBindings = new Array(nTracks);\n  this._cacheIndex = null; // for the memory manager\n\n  this._byClipCacheIndex = null; // for the memory manager\n\n  this._timeScaleInterpolant = null;\n  this._weightInterpolant = null;\n  this.loop = THREE.LoopRepeat;\n  this._loopCount = -1; // global mixer time when the action is to be started\n  // it's set back to 'null' upon start of the action\n\n  this._startTime = null; // scaled local time of the action\n  // gets clamped or wrapped to 0..clip.duration according to loop\n\n  this.time = 0;\n  this.timeScale = 1;\n  this._effectiveTimeScale = 1;\n  this.weight = 1;\n  this._effectiveWeight = 1;\n  this.repetitions = Infinity; // no. of repetitions when looping\n\n  this.paused = false; // false -> zero effective time scale\n\n  this.enabled = true; // true -> zero effective weight\n\n  this.clampWhenFinished = false; // keep feeding the last frame?\n\n  this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n  this.zeroSlopeAtEnd = true; // clips for start, loop and end\n};\n\nTHREE.AnimationAction._new.prototype = {\n  constructor: THREE.AnimationAction._new,\n  // State & Scheduling\n  play: function play() {\n    this._mixer._activateAction(this);\n\n    return this;\n  },\n  stop: function stop() {\n    this._mixer._deactivateAction(this);\n\n    return this.reset();\n  },\n  reset: function reset() {\n    this.paused = false;\n    this.enabled = true;\n    this.time = 0; // restart clip\n\n    this._loopCount = -1; // forget previous loops\n\n    this._startTime = null; // forget scheduling\n\n    return this.stopFading().stopWarping();\n  },\n  isRunning: function isRunning() {\n    var start = this._startTime;\n    return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n  },\n  // return true when play has been called\n  isScheduled: function isScheduled() {\n    return this._mixer._isActiveAction(this);\n  },\n  startAt: function startAt(time) {\n    this._startTime = time;\n    return this;\n  },\n  setLoop: function setLoop(mode, repetitions) {\n    this.loop = mode;\n    this.repetitions = repetitions;\n    return this;\n  },\n  // Weight\n  // set the weight stopping any scheduled fading\n  // although .enabled = false yields an effective weight of zero, this\n  // method does *not* change .enabled, because it would be confusing\n  setEffectiveWeight: function setEffectiveWeight(weight) {\n    this.weight = weight; // note: same logic as when updated at runtime\n\n    this._effectiveWeight = this.enabled ? weight : 0;\n    return this.stopFading();\n  },\n  // return the weight considering fading and .enabled\n  getEffectiveWeight: function getEffectiveWeight() {\n    return this._effectiveWeight;\n  },\n  fadeIn: function fadeIn(duration) {\n    return this._scheduleFading(duration, 0, 1);\n  },\n  fadeOut: function fadeOut(duration) {\n    return this._scheduleFading(duration, 1, 0);\n  },\n  crossFadeFrom: function crossFadeFrom(fadeOutAction, duration, warp) {\n    var mixer = this._mixer;\n    fadeOutAction.fadeOut(duration);\n    this.fadeIn(duration);\n\n    if (warp) {\n      var fadeInDuration = this._clip.duration,\n          fadeOutDuration = fadeOutAction._clip.duration,\n          startEndRatio = fadeOutDuration / fadeInDuration,\n          endStartRatio = fadeInDuration / fadeOutDuration;\n      fadeOutAction.warp(1.0, startEndRatio, duration);\n      this.warp(endStartRatio, 1.0, duration);\n    }\n\n    return this;\n  },\n  crossFadeTo: function crossFadeTo(fadeInAction, duration, warp) {\n    return fadeInAction.crossFadeFrom(this, duration, warp);\n  },\n  stopFading: function stopFading() {\n    var weightInterpolant = this._weightInterpolant;\n\n    if (weightInterpolant !== null) {\n      this._weightInterpolant = null;\n\n      this._mixer._takeBackControlInterpolant(weightInterpolant);\n    }\n\n    return this;\n  },\n  // Time Scale Control\n  // set the weight stopping any scheduled warping\n  // although .paused = true yields an effective time scale of zero, this\n  // method does *not* change .paused, because it would be confusing\n  setEffectiveTimeScale: function setEffectiveTimeScale(timeScale) {\n    this.timeScale = timeScale;\n    this._effectiveTimeScale = this.paused ? 0 : timeScale;\n    return this.stopWarping();\n  },\n  // return the time scale considering warping and .paused\n  getEffectiveTimeScale: function getEffectiveTimeScale() {\n    return this._effectiveTimeScale;\n  },\n  setDuration: function setDuration(duration) {\n    this.timeScale = this._clip.duration / duration;\n    return this.stopWarping();\n  },\n  syncWith: function syncWith(action) {\n    this.time = action.time;\n    this.timeScale = action.timeScale;\n    return this.stopWarping();\n  },\n  halt: function halt(duration) {\n    return this.warp(this._effectiveTimeScale, 0, duration);\n  },\n  warp: function warp(startTimeScale, endTimeScale, duration) {\n    var mixer = this._mixer,\n        now = mixer.time,\n        interpolant = this._timeScaleInterpolant,\n        timeScale = this.timeScale;\n\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant(), this._timeScaleInterpolant = interpolant;\n    }\n\n    var times = interpolant.parameterPositions,\n        values = interpolant.sampleValues;\n    times[0] = now;\n    times[1] = now + duration;\n    values[0] = startTimeScale / timeScale;\n    values[1] = endTimeScale / timeScale;\n    return this;\n  },\n  stopWarping: function stopWarping() {\n    var timeScaleInterpolant = this._timeScaleInterpolant;\n\n    if (timeScaleInterpolant !== null) {\n      this._timeScaleInterpolant = null;\n\n      this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n    }\n\n    return this;\n  },\n  // Object Accessors\n  getMixer: function getMixer() {\n    return this._mixer;\n  },\n  getClip: function getClip() {\n    return this._clip;\n  },\n  getRoot: function getRoot() {\n    return this._localRoot || this._mixer._root;\n  },\n  // Interna\n  _update: function _update(time, deltaTime, timeDirection, accuIndex) {\n    // called by the mixer\n    var startTime = this._startTime;\n\n    if (startTime !== null) {\n      // check for scheduled start of action\n      var timeRunning = (time - startTime) * timeDirection;\n\n      if (timeRunning < 0 || timeDirection === 0) {\n        return; // yet to come / don't decide when delta = 0\n      } // start\n\n\n      this._startTime = null; // unschedule\n\n      deltaTime = timeDirection * timeRunning;\n    } // apply time scale and advance time\n\n\n    deltaTime *= this._updateTimeScale(time);\n\n    var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n    // an effective weight of 0\n\n\n    var weight = this._updateWeight(time);\n\n    if (weight > 0) {\n      var interpolants = this._interpolants;\n      var propertyMixers = this._propertyBindings;\n\n      for (var j = 0, m = interpolants.length; j !== m; ++j) {\n        interpolants[j].evaluate(clipTime);\n        propertyMixers[j].accumulate(accuIndex, weight);\n      }\n    }\n  },\n  _updateWeight: function _updateWeight(time) {\n    var weight = 0;\n\n    if (this.enabled) {\n      weight = this.weight;\n      var interpolant = this._weightInterpolant;\n\n      if (interpolant !== null) {\n        var interpolantValue = interpolant.evaluate(time)[0];\n        weight *= interpolantValue;\n\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopFading();\n\n          if (interpolantValue === 0) {\n            // faded out, disable\n            this.enabled = false;\n          }\n        }\n      }\n    }\n\n    this._effectiveWeight = weight;\n    return weight;\n  },\n  _updateTimeScale: function _updateTimeScale(time) {\n    var timeScale = 0;\n\n    if (!this.paused) {\n      timeScale = this.timeScale;\n      var interpolant = this._timeScaleInterpolant;\n\n      if (interpolant !== null) {\n        var interpolantValue = interpolant.evaluate(time)[0];\n        timeScale *= interpolantValue;\n\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopWarping();\n\n          if (timeScale === 0) {\n            // motion has halted, pause\n            this.paused = true;\n          } else {\n            // warp done - apply final time scale\n            this.timeScale = timeScale;\n          }\n        }\n      }\n    }\n\n    this._effectiveTimeScale = timeScale;\n    return timeScale;\n  },\n  _updateTime: function _updateTime(deltaTime) {\n    var time = this.time + deltaTime;\n    if (deltaTime === 0) return time;\n    var duration = this._clip.duration,\n        loop = this.loop,\n        loopCount = this._loopCount;\n\n    if (loop === THREE.LoopOnce) {\n      if (loopCount === -1) {\n        // just started\n        this.loopCount = 0;\n\n        this._setEndings(true, true, false);\n      }\n\n      handle_stop: {\n        if (time >= duration) {\n          time = duration;\n        } else if (time < 0) {\n          time = 0;\n        } else break handle_stop;\n\n        if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\n        this._mixer.dispatchEvent({\n          type: 'finished',\n          action: this,\n          direction: deltaTime < 0 ? -1 : 1\n        });\n      }\n    } else {\n      // repetitive Repeat or PingPong\n      var pingPong = loop === THREE.LoopPingPong;\n\n      if (loopCount === -1) {\n        // just started\n        if (deltaTime >= 0) {\n          loopCount = 0;\n\n          this._setEndings(true, this.repetitions === 0, pingPong);\n        } else {\n          // when looping in reverse direction, the initial\n          // transition through zero counts as a repetition,\n          // so leave loopCount at -1\n          this._setEndings(this.repetitions === 0, true, pingPong);\n        }\n      }\n\n      if (time >= duration || time < 0) {\n        // wrap around\n        var loopDelta = Math.floor(time / duration); // signed\n\n        time -= duration * loopDelta;\n        loopCount += Math.abs(loopDelta);\n        var pending = this.repetitions - loopCount;\n\n        if (pending < 0) {\n          // have to stop (switch state, clamp time, fire event)\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n          time = deltaTime > 0 ? duration : 0;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime > 0 ? 1 : -1\n          });\n        } else {\n          // keep running\n          if (pending === 0) {\n            // entering the last round\n            var atStart = deltaTime < 0;\n\n            this._setEndings(atStart, !atStart, pingPong);\n          } else {\n            this._setEndings(false, false, pingPong);\n          }\n\n          this._loopCount = loopCount;\n\n          this._mixer.dispatchEvent({\n            type: 'loop',\n            action: this,\n            loopDelta: loopDelta\n          });\n        }\n      }\n\n      if (pingPong && (loopCount & 1) === 1) {\n        // invert time for the \"pong round\"\n        this.time = time;\n        return duration - time;\n      }\n    }\n\n    this.time = time;\n    return time;\n  },\n  _setEndings: function _setEndings(atStart, atEnd, pingPong) {\n    var settings = this._interpolantSettings;\n\n    if (pingPong) {\n      settings.endingStart = THREE.ZeroSlopeEnding;\n      settings.endingEnd = THREE.ZeroSlopeEnding;\n    } else {\n      // assuming for LoopOnce atStart == atEnd == true\n      if (atStart) {\n        settings.endingStart = this.zeroSlopeAtStart ? THREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n      } else {\n        settings.endingStart = THREE.WrapAroundEnding;\n      }\n\n      if (atEnd) {\n        settings.endingEnd = this.zeroSlopeAtEnd ? THREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n      } else {\n        settings.endingEnd = THREE.WrapAroundEnding;\n      }\n    }\n  },\n  _scheduleFading: function _scheduleFading(duration, weightNow, weightThen) {\n    var mixer = this._mixer,\n        now = mixer.time,\n        interpolant = this._weightInterpolant;\n\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant(), this._weightInterpolant = interpolant;\n    }\n\n    var times = interpolant.parameterPositions,\n        values = interpolant.sampleValues;\n    times[0] = now;\n    values[0] = weightNow;\n    times[1] = now + duration;\n    values[1] = weightThen;\n    return this;\n  }\n}; // File:src/animation/AnimationClip.js\n\n/**\r\n *\r\n * Reusable set of Tracks that represent an animation.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\n\nTHREE.AnimationClip = function (name, duration, tracks) {\n  this.name = name;\n  this.tracks = tracks;\n  this.duration = duration !== undefined ? duration : -1;\n  this.uuid = THREE.Math.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n  if (this.duration < 0) {\n    this.resetDuration();\n  } // maybe only do these on demand, as doing them here could potentially slow down loading\n  // but leaving these here during development as this ensures a lot of testing of these functions\n\n\n  this.trim();\n  this.optimize();\n};\n\nTHREE.AnimationClip.prototype = {\n  constructor: THREE.AnimationClip,\n  resetDuration: function resetDuration() {\n    var tracks = this.tracks,\n        duration = 0;\n\n    for (var i = 0, n = tracks.length; i !== n; ++i) {\n      var track = this.tracks[i];\n      duration = Math.max(duration, track.times[track.times.length - 1]);\n    }\n\n    this.duration = duration;\n  },\n  trim: function trim() {\n    for (var i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].trim(0, this.duration);\n    }\n\n    return this;\n  },\n  optimize: function optimize() {\n    for (var i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].optimize();\n    }\n\n    return this;\n  }\n}; // Static methods:\n\nObject.assign(THREE.AnimationClip, {\n  parse: function parse(json) {\n    var tracks = [],\n        jsonTracks = json.tracks,\n        frameTime = 1.0 / (json.fps || 1.0);\n\n    for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n      tracks.push(THREE.KeyframeTrack.parse(jsonTracks[i]).scale(frameTime));\n    }\n\n    return new THREE.AnimationClip(json.name, json.duration, tracks);\n  },\n  toJSON: function toJSON(clip) {\n    var tracks = [],\n        clipTracks = clip.tracks;\n    var json = {\n      'name': clip.name,\n      'duration': clip.duration,\n      'tracks': tracks\n    };\n\n    for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n      tracks.push(THREE.KeyframeTrack.toJSON(clipTracks[i]));\n    }\n\n    return json;\n  },\n  CreateFromMorphTargetSequence: function CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n    var numMorphTargets = morphTargetSequence.length;\n    var tracks = [];\n\n    for (var i = 0; i < numMorphTargets; i++) {\n      var times = [];\n      var values = [];\n      times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n      values.push(0, 1, 0);\n      var order = THREE.AnimationUtils.getKeyframeOrder(times);\n      times = THREE.AnimationUtils.sortedArray(times, 1, order);\n      values = THREE.AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n      // last frame as well for perfect loop.\n\n      if (!noLoop && times[0] === 0) {\n        times.push(numMorphTargets);\n        values.push(values[0]);\n      }\n\n      tracks.push(new THREE.NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n    }\n\n    return new THREE.AnimationClip(name, -1, tracks);\n  },\n  findByName: function findByName(objectOrClipArray, name) {\n    var clipArray = objectOrClipArray;\n\n    if (!Array.isArray(objectOrClipArray)) {\n      var o = objectOrClipArray;\n      clipArray = o.geometry && o.geometry.animations || o.animations;\n    }\n\n    for (var i = 0; i < clipArray.length; i++) {\n      if (clipArray[i].name === name) {\n        return clipArray[i];\n      }\n    }\n\n    return null;\n  },\n  CreateClipsFromMorphTargetSequences: function CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n    var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n    // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n    var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n    // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n    for (var i = 0, il = morphTargets.length; i < il; i++) {\n      var morphTarget = morphTargets[i];\n      var parts = morphTarget.name.match(pattern);\n\n      if (parts && parts.length > 1) {\n        var name = parts[1];\n        var animationMorphTargets = animationToMorphTargets[name];\n\n        if (!animationMorphTargets) {\n          animationToMorphTargets[name] = animationMorphTargets = [];\n        }\n\n        animationMorphTargets.push(morphTarget);\n      }\n    }\n\n    var clips = [];\n\n    for (var name in animationToMorphTargets) {\n      clips.push(THREE.AnimationClip.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n    }\n\n    return clips;\n  },\n  // parse the animation.hierarchy format\n  parseAnimation: function parseAnimation(animation, bones, nodeName) {\n    if (!animation) {\n      console.error(\"  no animation in JSONLoader data\");\n      return null;\n    }\n\n    var addNonemptyTrack = function addNonemptyTrack(trackType, trackName, animationKeys, propertyName, destTracks) {\n      // only return track if there are actually keys.\n      if (animationKeys.length !== 0) {\n        var times = [];\n        var values = [];\n        THREE.AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n        if (times.length !== 0) {\n          destTracks.push(new trackType(trackName, times, values));\n        }\n      }\n    };\n\n    var tracks = [];\n    var clipName = animation.name || 'default'; // automatic length determination in AnimationClip.\n\n    var duration = animation.length || -1;\n    var fps = animation.fps || 30;\n    var hierarchyTracks = animation.hierarchy || [];\n\n    for (var h = 0; h < hierarchyTracks.length; h++) {\n      var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n      if (!animationKeys || animationKeys.length === 0) continue; // process morph targets in a way exactly compatible\n      // with AnimationHandler.init( animation )\n\n      if (animationKeys[0].morphTargets) {\n        // figure out all morph targets used in this track\n        var morphTargetNames = {};\n\n        for (var k = 0; k < animationKeys.length; k++) {\n          if (animationKeys[k].morphTargets) {\n            for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n              morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n            }\n          }\n        } // create a track for each morph target with all zero\n        // morphTargetInfluences except for the keys in which\n        // the morphTarget is named.\n\n\n        for (var morphTargetName in morphTargetNames) {\n          var times = [];\n          var values = [];\n\n          for (var m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n            var animationKey = animationKeys[k];\n            times.push(animationKey.time);\n            values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n          }\n\n          tracks.push(new THREE.NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n        }\n\n        duration = morphTargetNames.length * (fps || 1.0);\n      } else {\n        // ...assume skeletal animation\n        var boneName = '.bones[' + bones[h].name + ']';\n        addNonemptyTrack(THREE.VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n        addNonemptyTrack(THREE.QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n        addNonemptyTrack(THREE.VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n      }\n    }\n\n    if (tracks.length === 0) {\n      return null;\n    }\n\n    var clip = new THREE.AnimationClip(clipName, duration, tracks);\n    return clip;\n  }\n}); // File:src/animation/AnimationMixer.js\n\n/**\r\n *\r\n * Player for AnimationClips.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.AnimationMixer = function (root) {\n  this._root = root;\n\n  this._initMemoryManager();\n\n  this._accuIndex = 0;\n  this.time = 0;\n  this.timeScale = 1.0;\n};\n\nObject.assign(THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {\n  // return an action for a clip optionally using a custom root target\n  // object (this method allocates a lot of dynamic memory in case a\n  // previously unknown clip/root combination is specified)\n  clipAction: function clipAction(clip, optionalRoot) {\n    var root = optionalRoot || this._root,\n        rootUuid = root.uuid,\n        clipObject = typeof clip === 'string' ? THREE.AnimationClip.findByName(root, clip) : clip,\n        clipUuid = clipObject !== null ? clipObject.uuid : clip,\n        actionsForClip = this._actionsByClip[clipUuid],\n        prototypeAction = null;\n\n    if (actionsForClip !== undefined) {\n      var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n      if (existingAction !== undefined) {\n        return existingAction;\n      } // we know the clip, so we don't have to parse all\n      // the bindings again but can just copy\n\n\n      prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n      if (clipObject === null) clipObject = prototypeAction._clip;\n    } // clip must be known when specified via string\n\n\n    if (clipObject === null) return null; // allocate all resources required to run it\n\n    var newAction = new THREE.AnimationMixer._Action(this, clipObject, optionalRoot);\n\n    this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n    this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n    return newAction;\n  },\n  // get an existing action\n  existingAction: function existingAction(clip, optionalRoot) {\n    var root = optionalRoot || this._root,\n        rootUuid = root.uuid,\n        clipObject = typeof clip === 'string' ? THREE.AnimationClip.findByName(root, clip) : clip,\n        clipUuid = clipObject ? clipObject.uuid : clip,\n        actionsForClip = this._actionsByClip[clipUuid];\n\n    if (actionsForClip !== undefined) {\n      return actionsForClip.actionByRoot[rootUuid] || null;\n    }\n\n    return null;\n  },\n  // deactivates all previously scheduled actions\n  stopAllAction: function stopAllAction() {\n    var actions = this._actions,\n        nActions = this._nActiveActions,\n        bindings = this._bindings,\n        nBindings = this._nActiveBindings;\n    this._nActiveActions = 0;\n    this._nActiveBindings = 0;\n\n    for (var i = 0; i !== nActions; ++i) {\n      actions[i].reset();\n    }\n\n    for (var i = 0; i !== nBindings; ++i) {\n      bindings[i].useCount = 0;\n    }\n\n    return this;\n  },\n  // advance the time and update apply the animation\n  update: function update(deltaTime) {\n    deltaTime *= this.timeScale;\n    var actions = this._actions,\n        nActions = this._nActiveActions,\n        time = this.time += deltaTime,\n        timeDirection = Math.sign(deltaTime),\n        accuIndex = this._accuIndex ^= 1; // run active actions\n\n    for (var i = 0; i !== nActions; ++i) {\n      var action = actions[i];\n\n      if (action.enabled) {\n        action._update(time, deltaTime, timeDirection, accuIndex);\n      }\n    } // update scene graph\n\n\n    var bindings = this._bindings,\n        nBindings = this._nActiveBindings;\n\n    for (var i = 0; i !== nBindings; ++i) {\n      bindings[i].apply(accuIndex);\n    }\n\n    return this;\n  },\n  // return this mixer's root target object\n  getRoot: function getRoot() {\n    return this._root;\n  },\n  // free all resources specific to a particular clip\n  uncacheClip: function uncacheClip(clip) {\n    var actions = this._actions,\n        clipUuid = clip.uuid,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid];\n\n    if (actionsForClip !== undefined) {\n      // note: just calling _removeInactiveAction would mess up the\n      // iteration state and also require updating the state we can\n      // just throw away\n      var actionsToRemove = actionsForClip.knownActions;\n\n      for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n        var action = actionsToRemove[i];\n\n        this._deactivateAction(action);\n\n        var cacheIndex = action._cacheIndex,\n            lastInactiveAction = actions[actions.length - 1];\n        action._cacheIndex = null;\n        action._byClipCacheIndex = null;\n        lastInactiveAction._cacheIndex = cacheIndex;\n        actions[cacheIndex] = lastInactiveAction;\n        actions.pop();\n\n        this._removeInactiveBindingsForAction(action);\n      }\n\n      delete actionsByClip[clipUuid];\n    }\n  },\n  // free all resources specific to a particular root target object\n  uncacheRoot: function uncacheRoot(root) {\n    var rootUuid = root.uuid,\n        actionsByClip = this._actionsByClip;\n\n    for (var clipUuid in actionsByClip) {\n      var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n          action = actionByRoot[rootUuid];\n\n      if (action !== undefined) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n\n    var bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid];\n\n    if (bindingByName !== undefined) {\n      for (var trackName in bindingByName) {\n        var binding = bindingByName[trackName];\n        binding.restoreOriginalState();\n\n        this._removeInactiveBinding(binding);\n      }\n    }\n  },\n  // remove a targeted clip from the cache\n  uncacheAction: function uncacheAction(clip, optionalRoot) {\n    var action = this.existingAction(clip, optionalRoot);\n\n    if (action !== null) {\n      this._deactivateAction(action);\n\n      this._removeInactiveAction(action);\n    }\n  }\n});\nTHREE.AnimationMixer._Action = THREE.AnimationAction._new; // Implementation details:\n\nObject.assign(THREE.AnimationMixer.prototype, {\n  _bindAction: function _bindAction(action, prototypeAction) {\n    var root = action._localRoot || this._root,\n        tracks = action._clip.tracks,\n        nTracks = tracks.length,\n        bindings = action._propertyBindings,\n        interpolants = action._interpolants,\n        rootUuid = root.uuid,\n        bindingsByRoot = this._bindingsByRootAndName,\n        bindingsByName = bindingsByRoot[rootUuid];\n\n    if (bindingsByName === undefined) {\n      bindingsByName = {};\n      bindingsByRoot[rootUuid] = bindingsByName;\n    }\n\n    for (var i = 0; i !== nTracks; ++i) {\n      var track = tracks[i],\n          trackName = track.name,\n          binding = bindingsByName[trackName];\n\n      if (binding !== undefined) {\n        bindings[i] = binding;\n      } else {\n        binding = bindings[i];\n\n        if (binding !== undefined) {\n          // existing binding, make sure the cache knows\n          if (binding._cacheIndex === null) {\n            ++binding.referenceCount;\n\n            this._addInactiveBinding(binding, rootUuid, trackName);\n          }\n\n          continue;\n        }\n\n        var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n        binding = new THREE.PropertyMixer(THREE.PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n        ++binding.referenceCount;\n\n        this._addInactiveBinding(binding, rootUuid, trackName);\n\n        bindings[i] = binding;\n      }\n\n      interpolants[i].resultBuffer = binding.buffer;\n    }\n  },\n  _activateAction: function _activateAction(action) {\n    if (!this._isActiveAction(action)) {\n      if (action._cacheIndex === null) {\n        // this action has been forgotten by the cache, but the user\n        // appears to be still using it -> rebind\n        var rootUuid = (action._localRoot || this._root).uuid,\n            clipUuid = action._clip.uuid,\n            actionsForClip = this._actionsByClip[clipUuid];\n\n        this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n        this._addInactiveAction(action, clipUuid, rootUuid);\n      }\n\n      var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (binding.useCount++ === 0) {\n          this._lendBinding(binding);\n\n          binding.saveOriginalState();\n        }\n      }\n\n      this._lendAction(action);\n    }\n  },\n  _deactivateAction: function _deactivateAction(action) {\n    if (this._isActiveAction(action)) {\n      var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.useCount === 0) {\n          binding.restoreOriginalState();\n\n          this._takeBackBinding(binding);\n        }\n      }\n\n      this._takeBackAction(action);\n    }\n  },\n  // Memory manager\n  _initMemoryManager: function _initMemoryManager() {\n    this._actions = []; // 'nActiveActions' followed by inactive ones\n\n    this._nActiveActions = 0;\n    this._actionsByClip = {}; // inside:\n    // {\n    // \t\tknownActions: Array< _Action >\t- used as prototypes\n    // \t\tactionByRoot: _Action\t\t\t- lookup\n    // }\n\n    this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n    this._nActiveBindings = 0;\n    this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n    this._controlInterpolants = []; // same game as above\n\n    this._nActiveControlInterpolants = 0;\n    var scope = this;\n    this.stats = {\n      actions: {\n        get total() {\n          return scope._actions.length;\n        },\n\n        get inUse() {\n          return scope._nActiveActions;\n        }\n\n      },\n      bindings: {\n        get total() {\n          return scope._bindings.length;\n        },\n\n        get inUse() {\n          return scope._nActiveBindings;\n        }\n\n      },\n      controlInterpolants: {\n        get total() {\n          return scope._controlInterpolants.length;\n        },\n\n        get inUse() {\n          return scope._nActiveControlInterpolants;\n        }\n\n      }\n    };\n  },\n  // Memory management for _Action objects\n  _isActiveAction: function _isActiveAction(action) {\n    var index = action._cacheIndex;\n    return index !== null && index < this._nActiveActions;\n  },\n  _addInactiveAction: function _addInactiveAction(action, clipUuid, rootUuid) {\n    var actions = this._actions,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid];\n\n    if (actionsForClip === undefined) {\n      actionsForClip = {\n        knownActions: [action],\n        actionByRoot: {}\n      };\n      action._byClipCacheIndex = 0;\n      actionsByClip[clipUuid] = actionsForClip;\n    } else {\n      var knownActions = actionsForClip.knownActions;\n      action._byClipCacheIndex = knownActions.length;\n      knownActions.push(action);\n    }\n\n    action._cacheIndex = actions.length;\n    actions.push(action);\n    actionsForClip.actionByRoot[rootUuid] = action;\n  },\n  _removeInactiveAction: function _removeInactiveAction(action) {\n    var actions = this._actions,\n        lastInactiveAction = actions[actions.length - 1],\n        cacheIndex = action._cacheIndex;\n    lastInactiveAction._cacheIndex = cacheIndex;\n    actions[cacheIndex] = lastInactiveAction;\n    actions.pop();\n    action._cacheIndex = null;\n    var clipUuid = action._clip.uuid,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid],\n        knownActionsForClip = actionsForClip.knownActions,\n        lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n        byClipCacheIndex = action._byClipCacheIndex;\n    lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n    knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n    knownActionsForClip.pop();\n    action._byClipCacheIndex = null;\n    var actionByRoot = actionsForClip.actionByRoot,\n        rootUuid = (actions._localRoot || this._root).uuid;\n    delete actionByRoot[rootUuid];\n\n    if (knownActionsForClip.length === 0) {\n      delete actionsByClip[clipUuid];\n    }\n\n    this._removeInactiveBindingsForAction(action);\n  },\n  _removeInactiveBindingsForAction: function _removeInactiveBindingsForAction(action) {\n    var bindings = action._propertyBindings;\n\n    for (var i = 0, n = bindings.length; i !== n; ++i) {\n      var binding = bindings[i];\n\n      if (--binding.referenceCount === 0) {\n        this._removeInactiveBinding(binding);\n      }\n    }\n  },\n  _lendAction: function _lendAction(action) {\n    // [ active actions |  inactive actions  ]\n    // [  active actions >| inactive actions ]\n    //                 s        a\n    //                  <-swap->\n    //                 a        s\n    var actions = this._actions,\n        prevIndex = action._cacheIndex,\n        lastActiveIndex = this._nActiveActions++,\n        firstInactiveAction = actions[lastActiveIndex];\n    action._cacheIndex = lastActiveIndex;\n    actions[lastActiveIndex] = action;\n    firstInactiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = firstInactiveAction;\n  },\n  _takeBackAction: function _takeBackAction(action) {\n    // [  active actions  | inactive actions ]\n    // [ active actions |< inactive actions  ]\n    //        a        s\n    //         <-swap->\n    //        s        a\n    var actions = this._actions,\n        prevIndex = action._cacheIndex,\n        firstInactiveIndex = --this._nActiveActions,\n        lastActiveAction = actions[firstInactiveIndex];\n    action._cacheIndex = firstInactiveIndex;\n    actions[firstInactiveIndex] = action;\n    lastActiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = lastActiveAction;\n  },\n  // Memory management for PropertyMixer objects\n  _addInactiveBinding: function _addInactiveBinding(binding, rootUuid, trackName) {\n    var bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid],\n        bindings = this._bindings;\n\n    if (bindingByName === undefined) {\n      bindingByName = {};\n      bindingsByRoot[rootUuid] = bindingByName;\n    }\n\n    bindingByName[trackName] = binding;\n    binding._cacheIndex = bindings.length;\n    bindings.push(binding);\n  },\n  _removeInactiveBinding: function _removeInactiveBinding(binding) {\n    var bindings = this._bindings,\n        propBinding = binding.binding,\n        rootUuid = propBinding.rootNode.uuid,\n        trackName = propBinding.path,\n        bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid],\n        lastInactiveBinding = bindings[bindings.length - 1],\n        cacheIndex = binding._cacheIndex;\n    lastInactiveBinding._cacheIndex = cacheIndex;\n    bindings[cacheIndex] = lastInactiveBinding;\n    bindings.pop();\n    delete bindingByName[trackName];\n\n    remove_empty_map: {\n      for (var _ in bindingByName) {\n        break remove_empty_map;\n      }\n\n      delete bindingsByRoot[rootUuid];\n    }\n  },\n  _lendBinding: function _lendBinding(binding) {\n    var bindings = this._bindings,\n        prevIndex = binding._cacheIndex,\n        lastActiveIndex = this._nActiveBindings++,\n        firstInactiveBinding = bindings[lastActiveIndex];\n    binding._cacheIndex = lastActiveIndex;\n    bindings[lastActiveIndex] = binding;\n    firstInactiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = firstInactiveBinding;\n  },\n  _takeBackBinding: function _takeBackBinding(binding) {\n    var bindings = this._bindings,\n        prevIndex = binding._cacheIndex,\n        firstInactiveIndex = --this._nActiveBindings,\n        lastActiveBinding = bindings[firstInactiveIndex];\n    binding._cacheIndex = firstInactiveIndex;\n    bindings[firstInactiveIndex] = binding;\n    lastActiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = lastActiveBinding;\n  },\n  // Memory management of Interpolants for weight and time scale\n  _lendControlInterpolant: function _lendControlInterpolant() {\n    var interpolants = this._controlInterpolants,\n        lastActiveIndex = this._nActiveControlInterpolants++,\n        interpolant = interpolants[lastActiveIndex];\n\n    if (interpolant === undefined) {\n      interpolant = new THREE.LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n      interpolant.__cacheIndex = lastActiveIndex;\n      interpolants[lastActiveIndex] = interpolant;\n    }\n\n    return interpolant;\n  },\n  _takeBackControlInterpolant: function _takeBackControlInterpolant(interpolant) {\n    var interpolants = this._controlInterpolants,\n        prevIndex = interpolant.__cacheIndex,\n        firstInactiveIndex = --this._nActiveControlInterpolants,\n        lastActiveInterpolant = interpolants[firstInactiveIndex];\n    interpolant.__cacheIndex = firstInactiveIndex;\n    interpolants[firstInactiveIndex] = interpolant;\n    lastActiveInterpolant.__cacheIndex = prevIndex;\n    interpolants[prevIndex] = lastActiveInterpolant;\n  },\n  _controlInterpolantsResultBuffer: new Float32Array(1)\n}); // File:src/animation/AnimationObjectGroup.js\n\n/**\r\n *\r\n * A group of objects that receives a shared animation state.\r\n *\r\n * Usage:\r\n *\r\n * \t-\tAdd objects you would otherwise pass as 'root' to the\r\n * \t\tconstructor or the .clipAction method of AnimationMixer.\r\n *\r\n * \t-\tInstead pass this object as 'root'.\r\n *\r\n * \t-\tYou can also add and remove objects later when the mixer\r\n * \t\tis running.\r\n *\r\n * Note:\r\n *\r\n *  \tObjects of this class appear as one object to the mixer,\r\n *  \tso cache control of the individual objects must be done\r\n *  \ton the group.\r\n *\r\n * Limitation:\r\n *\r\n * \t- \tThe animated properties must be compatible among the\r\n * \t\tall objects in the group.\r\n *\r\n *  -\tA single property can either be controlled through a\r\n *  \ttarget group or directly, but not both.\r\n *\r\n * @author tschw\r\n */\n\nTHREE.AnimationObjectGroup = function (var_args) {\n  this.uuid = THREE.Math.generateUUID(); // cached objects followed by the active ones\n\n  this._objects = Array.prototype.slice.call(arguments);\n  this.nCachedObjects_ = 0; // threshold\n  // note: read by PropertyBinding.Composite\n\n  var indices = {};\n  this._indicesByUUID = indices; // for bookkeeping\n\n  for (var i = 0, n = arguments.length; i !== n; ++i) {\n    indices[arguments[i].uuid] = i;\n  }\n\n  this._paths = []; // inside: string\n\n  this._parsedPaths = []; // inside: { we don't care, here }\n\n  this._bindings = []; // inside: Array< PropertyBinding >\n\n  this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n  var scope = this;\n  this.stats = {\n    objects: {\n      get total() {\n        return scope._objects.length;\n      },\n\n      get inUse() {\n        return this.total - scope.nCachedObjects_;\n      }\n\n    },\n\n    get bindingsPerObject() {\n      return scope._bindings.length;\n    }\n\n  };\n};\n\nTHREE.AnimationObjectGroup.prototype = {\n  constructor: THREE.AnimationObjectGroup,\n  add: function add(var_args) {\n    var objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index === undefined) {\n        // unknown object -> add it to the ACTIVE region\n        index = nObjects++;\n        indicesByUUID[uuid] = index;\n        objects.push(object); // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          bindings[j].push(new THREE.PropertyBinding(object, paths[j], parsedPaths[j]));\n        }\n      } else if (index < nCachedObjects) {\n        var knownObject = objects[index]; // move existing object to the ACTIVE region\n\n        var firstActiveIndex = --nCachedObjects,\n            lastCachedObject = objects[firstActiveIndex];\n        indicesByUUID[lastCachedObject.uuid] = index;\n        objects[index] = lastCachedObject;\n        indicesByUUID[uuid] = firstActiveIndex;\n        objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          var bindingsForPath = bindings[j],\n              lastCached = bindingsForPath[firstActiveIndex],\n              binding = bindingsForPath[index];\n          bindingsForPath[index] = lastCached;\n\n          if (binding === undefined) {\n            // since we do not bother to create new bindings\n            // for objects that are cached, the binding may\n            // or may not exist\n            binding = new THREE.PropertyBinding(object, paths[j], parsedPaths[j]);\n          }\n\n          bindingsForPath[firstActiveIndex] = binding;\n        }\n      } else if (objects[index] !== knownObject) {\n        console.error(\"Different objects with the same UUID \" + \"detected. Clean the caches or recreate your \" + \"infrastructure when reloading scenes...\");\n      } // else the object is already where we want it to be\n\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  remove: function remove(var_args) {\n    var objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index !== undefined && index >= nCachedObjects) {\n        // move existing object into the CACHED region\n        var lastCachedIndex = nCachedObjects++,\n            firstActiveObject = objects[lastCachedIndex];\n        indicesByUUID[firstActiveObject.uuid] = index;\n        objects[index] = firstActiveObject;\n        indicesByUUID[uuid] = lastCachedIndex;\n        objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          var bindingsForPath = bindings[j],\n              firstActive = bindingsForPath[lastCachedIndex],\n              binding = bindingsForPath[index];\n          bindingsForPath[index] = firstActive;\n          bindingsForPath[lastCachedIndex] = binding;\n        }\n      }\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  // remove & forget\n  uncache: function uncache(var_args) {\n    var objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index !== undefined) {\n        delete indicesByUUID[uuid];\n\n        if (index < nCachedObjects) {\n          // object is cached, shrink the CACHED region\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex],\n              lastIndex = --nObjects,\n              lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n          indicesByUUID[lastObject.uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = lastObject;\n          objects.pop(); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                lastCached = bindingsForPath[firstActiveIndex],\n                last = bindingsForPath[lastIndex];\n            bindingsForPath[index] = lastCached;\n            bindingsForPath[firstActiveIndex] = last;\n            bindingsForPath.pop();\n          }\n        } else {\n          // object is active, just swap with the last and pop\n          var lastIndex = --nObjects,\n              lastObject = objects[lastIndex];\n          indicesByUUID[lastObject.uuid] = index;\n          objects[index] = lastObject;\n          objects.pop(); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j];\n            bindingsForPath[index] = bindingsForPath[lastIndex];\n            bindingsForPath.pop();\n          }\n        } // cached or active\n\n      } // if object is known\n\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  // Internal interface used by befriended PropertyBinding.Composite:\n  subscribe_: function subscribe_(path, parsedPath) {\n    // returns an array of bindings for the given path that is changed\n    // according to the contained objects in the group\n    var indicesByPath = this._bindingsIndicesByPath,\n        index = indicesByPath[path],\n        bindings = this._bindings;\n    if (index !== undefined) return bindings[index];\n    var paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        bindingsForPath = new Array(nObjects);\n    index = bindings.length;\n    indicesByPath[path] = index;\n    paths.push(path);\n    parsedPaths.push(parsedPath);\n    bindings.push(bindingsForPath);\n\n    for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n      var object = objects[i];\n      bindingsForPath[i] = new THREE.PropertyBinding(object, path, parsedPath);\n    }\n\n    return bindingsForPath;\n  },\n  unsubscribe_: function unsubscribe_(path) {\n    // tells the group to forget about a property path and no longer\n    // update the array previously obtained with 'subscribe_'\n    var indicesByPath = this._bindingsIndicesByPath,\n        index = indicesByPath[path];\n\n    if (index !== undefined) {\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          lastBindingsIndex = bindings.length - 1,\n          lastBindings = bindings[lastBindingsIndex],\n          lastBindingsPath = path[lastBindingsIndex];\n      indicesByPath[lastBindingsPath] = index;\n      bindings[index] = lastBindings;\n      bindings.pop();\n      parsedPaths[index] = parsedPaths[lastBindingsIndex];\n      parsedPaths.pop();\n      paths[index] = paths[lastBindingsIndex];\n      paths.pop();\n    }\n  }\n}; // File:src/animation/AnimationUtils.js\n\n/**\r\n * @author tschw\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\n\nTHREE.AnimationUtils = {\n  // same as Array.prototype.slice, but also works on typed arrays\n  arraySlice: function arraySlice(array, from, to) {\n    if (THREE.AnimationUtils.isTypedArray(array)) {\n      return new array.constructor(array.subarray(from, to));\n    }\n\n    return array.slice(from, to);\n  },\n  // converts an array to a specific type\n  convertArray: function convertArray(array, type, forceClone) {\n    if (!array || // let 'undefined' and 'null' pass\n    !forceClone && array.constructor === type) return array;\n\n    if (typeof type.BYTES_PER_ELEMENT === 'number') {\n      return new type(array); // create typed array\n    }\n\n    return Array.prototype.slice.call(array); // create Array\n  },\n  isTypedArray: function isTypedArray(object) {\n    return ArrayBuffer.isView(object) && !(object instanceof DataView);\n  },\n  // returns an array by which times and values can be sorted\n  getKeyframeOrder: function getKeyframeOrder(times) {\n    function compareTime(i, j) {\n      return times[i] - times[j];\n    }\n\n    var n = times.length;\n    var result = new Array(n);\n\n    for (var i = 0; i !== n; ++i) {\n      result[i] = i;\n    }\n\n    result.sort(compareTime);\n    return result;\n  },\n  // uses the array previously returned by 'getKeyframeOrder' to sort data\n  sortedArray: function sortedArray(values, stride, order) {\n    var nValues = values.length;\n    var result = new values.constructor(nValues);\n\n    for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n      var srcOffset = order[i] * stride;\n\n      for (var j = 0; j !== stride; ++j) {\n        result[dstOffset++] = values[srcOffset + j];\n      }\n    }\n\n    return result;\n  },\n  // function for parsing AOS keyframe formats\n  flattenJSON: function flattenJSON(jsonKeys, times, values, valuePropertyName) {\n    var i = 1,\n        key = jsonKeys[0];\n\n    while (key !== undefined && key[valuePropertyName] === undefined) {\n      key = jsonKeys[i++];\n    }\n\n    if (key === undefined) return; // no data\n\n    var value = key[valuePropertyName];\n    if (value === undefined) return; // no data\n\n    if (Array.isArray(value)) {\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push.apply(values, value); // push all elements\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else if (value.toArray !== undefined) {\n      // ...assume THREE.Math-ish\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          value.toArray(values, values.length);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else {\n      // otherwise push as-is\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push(value);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    }\n  }\n}; // File:src/animation/KeyframeTrack.js\n\n/**\r\n *\r\n * A timed sequence of keyframes for a specific property.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.KeyframeTrack = function (name, times, values, interpolation) {\n  if (name === undefined) throw new Error(\"track name is undefined\");\n\n  if (times === undefined || times.length === 0) {\n    throw new Error(\"no keyframes in track named \" + name);\n  }\n\n  this.name = name;\n  this.times = THREE.AnimationUtils.convertArray(times, this.TimeBufferType);\n  this.values = THREE.AnimationUtils.convertArray(values, this.ValueBufferType);\n  this.setInterpolation(interpolation || this.DefaultInterpolation);\n  this.validate();\n  this.optimize();\n};\n\nTHREE.KeyframeTrack.prototype = {\n  constructor: THREE.KeyframeTrack,\n  TimeBufferType: Float32Array,\n  ValueBufferType: Float32Array,\n  DefaultInterpolation: THREE.InterpolateLinear,\n  InterpolantFactoryMethodDiscrete: function InterpolantFactoryMethodDiscrete(result) {\n    return new THREE.DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(result) {\n    return new THREE.LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodSmooth: function InterpolantFactoryMethodSmooth(result) {\n    return new THREE.CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  setInterpolation: function setInterpolation(interpolation) {\n    var factoryMethod;\n\n    switch (interpolation) {\n      case THREE.InterpolateDiscrete:\n        factoryMethod = this.InterpolantFactoryMethodDiscrete;\n        break;\n\n      case THREE.InterpolateLinear:\n        factoryMethod = this.InterpolantFactoryMethodLinear;\n        break;\n\n      case THREE.InterpolateSmooth:\n        factoryMethod = this.InterpolantFactoryMethodSmooth;\n        break;\n    }\n\n    if (factoryMethod === undefined) {\n      var message = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n\n      if (this.createInterpolant === undefined) {\n        // fall back to default, unless the default itself is messed up\n        if (interpolation !== this.DefaultInterpolation) {\n          this.setInterpolation(this.DefaultInterpolation);\n        } else {\n          throw new Error(message); // fatal, in this case\n        }\n      }\n\n      console.warn(message);\n      return;\n    }\n\n    this.createInterpolant = factoryMethod;\n  },\n  getInterpolation: function getInterpolation() {\n    switch (this.createInterpolant) {\n      case this.InterpolantFactoryMethodDiscrete:\n        return THREE.InterpolateDiscrete;\n\n      case this.InterpolantFactoryMethodLinear:\n        return THREE.InterpolateLinear;\n\n      case this.InterpolantFactoryMethodSmooth:\n        return THREE.InterpolateSmooth;\n    }\n  },\n  getValueSize: function getValueSize() {\n    return this.values.length / this.times.length;\n  },\n  // move all keyframes either forwards or backwards in time\n  shift: function shift(timeOffset) {\n    if (timeOffset !== 0.0) {\n      var times = this.times;\n\n      for (var i = 0, n = times.length; i !== n; ++i) {\n        times[i] += timeOffset;\n      }\n    }\n\n    return this;\n  },\n  // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n  scale: function scale(timeScale) {\n    if (timeScale !== 1.0) {\n      var times = this.times;\n\n      for (var i = 0, n = times.length; i !== n; ++i) {\n        times[i] *= timeScale;\n      }\n    }\n\n    return this;\n  },\n  // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n  // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n  trim: function trim(startTime, endTime) {\n    var times = this.times,\n        nKeys = times.length,\n        from = 0,\n        to = nKeys - 1;\n\n    while (from !== nKeys && times[from] < startTime) {\n      ++from;\n    }\n\n    while (to !== -1 && times[to] > endTime) {\n      --to;\n    }\n\n    ++to; // inclusive -> exclusive bound\n\n    if (from !== 0 || to !== nKeys) {\n      // empty tracks are forbidden, so keep at least one keyframe\n      if (from >= to) to = Math.max(to, 1), from = to - 1;\n      var stride = this.getValueSize();\n      this.times = THREE.AnimationUtils.arraySlice(times, from, to);\n      this.values = THREE.AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n    }\n\n    return this;\n  },\n  // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n  validate: function validate() {\n    var valid = true;\n    var valueSize = this.getValueSize();\n\n    if (valueSize - Math.floor(valueSize) !== 0) {\n      console.error(\"invalid value size in track\", this);\n      valid = false;\n    }\n\n    var times = this.times,\n        values = this.values,\n        nKeys = times.length;\n\n    if (nKeys === 0) {\n      console.error(\"track is empty\", this);\n      valid = false;\n    }\n\n    var prevTime = null;\n\n    for (var i = 0; i !== nKeys; i++) {\n      var currTime = times[i];\n\n      if (typeof currTime === 'number' && isNaN(currTime)) {\n        console.error(\"time is not a valid number\", this, i, currTime);\n        valid = false;\n        break;\n      }\n\n      if (prevTime !== null && prevTime > currTime) {\n        console.error(\"out of order keys\", this, i, currTime, prevTime);\n        valid = false;\n        break;\n      }\n\n      prevTime = currTime;\n    }\n\n    if (values !== undefined) {\n      if (THREE.AnimationUtils.isTypedArray(values)) {\n        for (var i = 0, n = values.length; i !== n; ++i) {\n          var value = values[i];\n\n          if (isNaN(value)) {\n            console.error(\"value is not a valid number\", this, i, value);\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return valid;\n  },\n  // removes equivalent sequential keys as common in morph target sequences\n  // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n  optimize: function optimize() {\n    var times = this.times,\n        values = this.values,\n        stride = this.getValueSize(),\n        writeIndex = 1;\n\n    for (var i = 1, n = times.length - 1; i <= n; ++i) {\n      var keep = false;\n      var time = times[i];\n      var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n      if (time !== timeNext && (i !== 1 || time !== time[0])) {\n        // remove unnecessary keyframes same as their neighbors\n        var offset = i * stride,\n            offsetP = offset - stride,\n            offsetN = offset + stride;\n\n        for (var j = 0; j !== stride; ++j) {\n          var value = values[offset + j];\n\n          if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n            keep = true;\n            break;\n          }\n        }\n      } // in-place compaction\n\n\n      if (keep) {\n        if (i !== writeIndex) {\n          times[writeIndex] = times[i];\n          var readOffset = i * stride,\n              writeOffset = writeIndex * stride;\n\n          for (var j = 0; j !== stride; ++j) {\n            values[writeOffset + j] = values[readOffset + j];\n          }\n        }\n\n        ++writeIndex;\n      }\n    }\n\n    if (writeIndex !== times.length) {\n      this.times = THREE.AnimationUtils.arraySlice(times, 0, writeIndex);\n      this.values = THREE.AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n    }\n\n    return this;\n  }\n}; // Static methods:\n\nObject.assign(THREE.KeyframeTrack, {\n  // Serialization (in static context, because of constructor invocation\n  // and automatic invocation of .toJSON):\n  parse: function parse(json) {\n    if (json.type === undefined) {\n      throw new Error(\"track type undefined, can not parse\");\n    }\n\n    var trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName(json.type);\n\n    if (json.times === undefined) {\n      var times = [],\n          values = [];\n      THREE.AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n      json.times = times;\n      json.values = values;\n    } // derived classes can define a static parse method\n\n\n    if (trackType.parse !== undefined) {\n      return trackType.parse(json);\n    } else {\n      // by default, we asssume a constructor compatible with the base\n      return new trackType(json.name, json.times, json.values, json.interpolation);\n    }\n  },\n  toJSON: function toJSON(track) {\n    var trackType = track.constructor;\n    var json; // derived classes can define a static toJSON method\n\n    if (trackType.toJSON !== undefined) {\n      json = trackType.toJSON(track);\n    } else {\n      // by default, we assume the data can be serialized as-is\n      json = {\n        'name': track.name,\n        'times': THREE.AnimationUtils.convertArray(track.times, Array),\n        'values': THREE.AnimationUtils.convertArray(track.values, Array)\n      };\n      var interpolation = track.getInterpolation();\n\n      if (interpolation !== track.DefaultInterpolation) {\n        json.interpolation = interpolation;\n      }\n    }\n\n    json.type = track.ValueTypeName; // mandatory\n\n    return json;\n  },\n  _getTrackTypeForValueTypeName: function _getTrackTypeForValueTypeName(typeName) {\n    switch (typeName.toLowerCase()) {\n      case \"scalar\":\n      case \"double\":\n      case \"float\":\n      case \"number\":\n      case \"integer\":\n        return THREE.NumberKeyframeTrack;\n\n      case \"vector\":\n      case \"vector2\":\n      case \"vector3\":\n      case \"vector4\":\n        return THREE.VectorKeyframeTrack;\n\n      case \"color\":\n        return THREE.ColorKeyframeTrack;\n\n      case \"quaternion\":\n        return THREE.QuaternionKeyframeTrack;\n\n      case \"bool\":\n      case \"boolean\":\n        return THREE.BooleanKeyframeTrack;\n\n      case \"string\":\n        return THREE.StringKeyframeTrack;\n    }\n\n    throw new Error(\"Unsupported typeName: \" + typeName);\n  }\n}); // File:src/animation/PropertyBinding.js\n\n/**\r\n *\r\n * A reference to a real property in the scene graph.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.PropertyBinding = function (rootNode, path, parsedPath) {\n  this.path = path;\n  this.parsedPath = parsedPath || THREE.PropertyBinding.parseTrackName(path);\n  this.node = THREE.PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n  this.rootNode = rootNode;\n};\n\nTHREE.PropertyBinding.prototype = {\n  constructor: THREE.PropertyBinding,\n  getValue: function getValue_unbound(targetArray, offset) {\n    this.bind();\n    this.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n    // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n    // prototype version of these methods with one that represents\n    // the bound state. When the property is not found, the methods\n    // become no-ops.\n  },\n  setValue: function getValue_unbound(sourceArray, offset) {\n    this.bind();\n    this.setValue(sourceArray, offset);\n  },\n  // create getter / setter pair for a property in the scene graph\n  bind: function bind() {\n    var targetObject = this.node,\n        parsedPath = this.parsedPath,\n        objectName = parsedPath.objectName,\n        propertyName = parsedPath.propertyName,\n        propertyIndex = parsedPath.propertyIndex;\n\n    if (!targetObject) {\n      targetObject = THREE.PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n      this.node = targetObject;\n    } // set fail state so we can just 'return' on error\n\n\n    this.getValue = this._getValue_unavailable;\n    this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n    if (!targetObject) {\n      console.error(\"  trying to update node for track: \" + this.path + \" but it wasn't found.\");\n      return;\n    }\n\n    if (objectName) {\n      var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n      switch (objectName) {\n        case 'materials':\n          if (!targetObject.material) {\n            console.error('  can not bind to material as node does not have a material', this);\n            return;\n          }\n\n          if (!targetObject.material.materials) {\n            console.error('  can not bind to material.materials as node.material does not have a materials array', this);\n            return;\n          }\n\n          targetObject = targetObject.material.materials;\n          break;\n\n        case 'bones':\n          if (!targetObject.skeleton) {\n            console.error('  can not bind to bones as node does not have a skeleton', this);\n            return;\n          } // potential future optimization: skip this if propertyIndex is already an integer\n          // and convert the integer string to a true integer.\n\n\n          targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n          for (var i = 0; i < targetObject.length; i++) {\n            if (targetObject[i].name === objectIndex) {\n              objectIndex = i;\n              break;\n            }\n          }\n\n          break;\n\n        default:\n          if (targetObject[objectName] === undefined) {\n            console.error('  can not bind to objectName of node, undefined', this);\n            return;\n          }\n\n          targetObject = targetObject[objectName];\n      }\n\n      if (objectIndex !== undefined) {\n        if (targetObject[objectIndex] === undefined) {\n          console.error(\"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject);\n          return;\n        }\n\n        targetObject = targetObject[objectIndex];\n      }\n    } // resolve property\n\n\n    var nodeProperty = targetObject[propertyName];\n\n    if (!nodeProperty) {\n      var nodeName = parsedPath.nodeName;\n      console.error(\"  trying to update property for track: \" + nodeName + '.' + propertyName + \" but it wasn't found.\", targetObject);\n      return;\n    } // determine versioning scheme\n\n\n    var versioning = this.Versioning.None;\n\n    if (targetObject.needsUpdate !== undefined) {\n      // material\n      versioning = this.Versioning.NeedsUpdate;\n      this.targetObject = targetObject;\n    } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n      // node transform\n      versioning = this.Versioning.MatrixWorldNeedsUpdate;\n      this.targetObject = targetObject;\n    } // determine how the property gets bound\n\n\n    var bindingType = this.BindingType.Direct;\n\n    if (propertyIndex !== undefined) {\n      // access a sub element of the property array (only primitives are supported right now)\n      if (propertyName === \"morphTargetInfluences\") {\n        // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n        // support resolving morphTarget names into indices.\n        if (!targetObject.geometry) {\n          console.error('  can not bind to morphTargetInfluences becasuse node does not have a geometry', this);\n          return;\n        }\n\n        if (!targetObject.geometry.morphTargets) {\n          console.error('  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this);\n          return;\n        }\n\n        for (var i = 0; i < this.node.geometry.morphTargets.length; i++) {\n          if (targetObject.geometry.morphTargets[i].name === propertyIndex) {\n            propertyIndex = i;\n            break;\n          }\n        }\n      }\n\n      bindingType = this.BindingType.ArrayElement;\n      this.resolvedProperty = nodeProperty;\n      this.propertyIndex = propertyIndex;\n    } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n      // must use copy for Object3D.Euler/Quaternion\n      bindingType = this.BindingType.HasFromToArray;\n      this.resolvedProperty = nodeProperty;\n    } else if (nodeProperty.length !== undefined) {\n      bindingType = this.BindingType.EntireArray;\n      this.resolvedProperty = nodeProperty;\n    } else {\n      this.propertyName = propertyName;\n    } // select getter / setter\n\n\n    this.getValue = this.GetterByBindingType[bindingType];\n    this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n  },\n  unbind: function unbind() {\n    this.node = null; // back to the prototype version of getValue / setValue\n    // note: avoiding to mutate the shape of 'this' via 'delete'\n\n    this.getValue = this._getValue_unbound;\n    this.setValue = this._setValue_unbound;\n  }\n};\nObject.assign(THREE.PropertyBinding.prototype, {\n  // prototype, continued\n  // these are used to \"bind\" a nonexistent property\n  _getValue_unavailable: function _getValue_unavailable() {},\n  _setValue_unavailable: function _setValue_unavailable() {},\n  // initial state of these methods that calls 'bind'\n  _getValue_unbound: THREE.PropertyBinding.prototype.getValue,\n  _setValue_unbound: THREE.PropertyBinding.prototype.setValue,\n  BindingType: {\n    Direct: 0,\n    EntireArray: 1,\n    ArrayElement: 2,\n    HasFromToArray: 3\n  },\n  Versioning: {\n    None: 0,\n    NeedsUpdate: 1,\n    MatrixWorldNeedsUpdate: 2\n  },\n  GetterByBindingType: [function getValue_direct(buffer, offset) {\n    buffer[offset] = this.node[this.propertyName];\n  }, function getValue_array(buffer, offset) {\n    var source = this.resolvedProperty;\n\n    for (var i = 0, n = source.length; i !== n; ++i) {\n      buffer[offset++] = source[i];\n    }\n  }, function getValue_arrayElement(buffer, offset) {\n    buffer[offset] = this.resolvedProperty[this.propertyIndex];\n  }, function getValue_toArray(buffer, offset) {\n    this.resolvedProperty.toArray(buffer, offset);\n  }],\n  SetterByBindingTypeAndVersioning: [[// Direct\n  function setValue_direct(buffer, offset) {\n    this.node[this.propertyName] = buffer[offset];\n  }, function setValue_direct_setNeedsUpdate(buffer, offset) {\n    this.node[this.propertyName] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.node[this.propertyName] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// EntireArray\n  function setValue_array(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n  }, function setValue_array_setNeedsUpdate(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n\n    this.targetObject.needsUpdate = true;\n  }, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// ArrayElement\n  function setValue_arrayElement(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n  }, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// HasToFromArray\n  function setValue_fromArray(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n  }, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.needsUpdate = true;\n  }, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }]]\n});\n\nTHREE.PropertyBinding.Composite = function (targetGroup, path, optionalParsedPath) {\n  var parsedPath = optionalParsedPath || THREE.PropertyBinding.parseTrackName(path);\n  this._targetGroup = targetGroup;\n  this._bindings = targetGroup.subscribe_(path, parsedPath);\n};\n\nTHREE.PropertyBinding.Composite.prototype = {\n  constructor: THREE.PropertyBinding.Composite,\n  getValue: function getValue(array, offset) {\n    this.bind(); // bind all binding\n\n    var firstValidIndex = this._targetGroup.nCachedObjects_,\n        binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n    if (binding !== undefined) binding.getValue(array, offset);\n  },\n  setValue: function setValue(array, offset) {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].setValue(array, offset);\n    }\n  },\n  bind: function bind() {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].bind();\n    }\n  },\n  unbind: function unbind() {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].unbind();\n    }\n  }\n};\n\nTHREE.PropertyBinding.create = function (root, path, parsedPath) {\n  if (!(root instanceof THREE.AnimationObjectGroup)) {\n    return new THREE.PropertyBinding(root, path, parsedPath);\n  } else {\n    return new THREE.PropertyBinding.Composite(root, path, parsedPath);\n  }\n};\n\nTHREE.PropertyBinding.parseTrackName = function (trackName) {\n  // matches strings in the form of:\n  //    nodeName.property\n  //    nodeName.property[accessor]\n  //    nodeName.material.property[accessor]\n  //    uuid.property[accessor]\n  //    uuid.objectName[objectIndex].propertyName[propertyIndex]\n  //    parentName/nodeName.property\n  //    parentName/parentName/nodeName.property[index]\n  //\t  .bone[Armature.DEF_cog].position\n  // created and tested via https://regex101.com/#javascript\n  var re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\n  var matches = re.exec(trackName);\n\n  if (!matches) {\n    throw new Error(\"cannot parse trackName at all: \" + trackName);\n  }\n\n  if (matches.index === re.lastIndex) {\n    re.lastIndex++;\n  }\n\n  var results = {\n    // directoryName: matches[1], // (tschw) currently unused\n    nodeName: matches[3],\n    // allowed to be null, specified root node.\n    objectName: matches[5],\n    objectIndex: matches[7],\n    propertyName: matches[9],\n    propertyIndex: matches[11] // allowed to be null, specifies that the whole property is set.\n\n  };\n\n  if (results.propertyName === null || results.propertyName.length === 0) {\n    throw new Error(\"can not parse propertyName from trackName: \" + trackName);\n  }\n\n  return results;\n};\n\nTHREE.PropertyBinding.findNode = function (root, nodeName) {\n  if (!nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n    return root;\n  } // search into skeleton bones.\n\n\n  if (root.skeleton) {\n    var searchSkeleton = function searchSkeleton(skeleton) {\n      for (var i = 0; i < skeleton.bones.length; i++) {\n        var bone = skeleton.bones[i];\n\n        if (bone.name === nodeName) {\n          return bone;\n        }\n      }\n\n      return null;\n    };\n\n    var bone = searchSkeleton(root.skeleton);\n\n    if (bone) {\n      return bone;\n    }\n  } // search into node subtree.\n\n\n  if (root.children) {\n    var searchNodeSubtree = function searchNodeSubtree(children) {\n      for (var i = 0; i < children.length; i++) {\n        var childNode = children[i];\n\n        if (childNode.name === nodeName || childNode.uuid === nodeName) {\n          return childNode;\n        }\n\n        var result = searchNodeSubtree(childNode.children);\n        if (result) return result;\n      }\n\n      return null;\n    };\n\n    var subTreeNode = searchNodeSubtree(root.children);\n\n    if (subTreeNode) {\n      return subTreeNode;\n    }\n  }\n\n  return null;\n}; // File:src/animation/PropertyMixer.js\n\n/**\r\n *\r\n * Buffered scene graph property that allows weighted accumulation.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\n\nTHREE.PropertyMixer = function (binding, typeName, valueSize) {\n  this.binding = binding;\n  this.valueSize = valueSize;\n  var bufferType = Float64Array,\n      mixFunction;\n\n  switch (typeName) {\n    case 'quaternion':\n      mixFunction = this._slerp;\n      break;\n\n    case 'string':\n    case 'bool':\n      bufferType = Array, mixFunction = this._select;\n      break;\n\n    default:\n      mixFunction = this._lerp;\n  }\n\n  this.buffer = new bufferType(valueSize * 4); // layout: [ incoming | accu0 | accu1 | orig ]\n  //\n  // interpolators can use .buffer as their .result\n  // the data then goes to 'incoming'\n  //\n  // 'accu0' and 'accu1' are used frame-interleaved for\n  // the cumulative result and are compared to detect\n  // changes\n  //\n  // 'orig' stores the original state of the property\n\n  this._mixBufferRegion = mixFunction;\n  this.cumulativeWeight = 0;\n  this.useCount = 0;\n  this.referenceCount = 0;\n};\n\nTHREE.PropertyMixer.prototype = {\n  constructor: THREE.PropertyMixer,\n  // accumulate data in the 'incoming' region into 'accu<i>'\n  accumulate: function accumulate(accuIndex, weight) {\n    // note: happily accumulating nothing when weight = 0, the caller knows\n    // the weight and shouldn't have made the call in the first place\n    var buffer = this.buffer,\n        stride = this.valueSize,\n        offset = accuIndex * stride + stride,\n        currentWeight = this.cumulativeWeight;\n\n    if (currentWeight === 0) {\n      // accuN := incoming * weight\n      for (var i = 0; i !== stride; ++i) {\n        buffer[offset + i] = buffer[i];\n      }\n\n      currentWeight = weight;\n    } else {\n      // accuN := accuN + incoming * weight\n      currentWeight += weight;\n      var mix = weight / currentWeight;\n\n      this._mixBufferRegion(buffer, offset, 0, mix, stride);\n    }\n\n    this.cumulativeWeight = currentWeight;\n  },\n  // apply the state of 'accu<i>' to the binding when accus differ\n  apply: function apply(accuIndex) {\n    var stride = this.valueSize,\n        buffer = this.buffer,\n        offset = accuIndex * stride + stride,\n        weight = this.cumulativeWeight,\n        binding = this.binding;\n    this.cumulativeWeight = 0;\n\n    if (weight < 1) {\n      // accuN := accuN + original * ( 1 - cumulativeWeight )\n      var originalValueOffset = stride * 3;\n\n      this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n    }\n\n    for (var i = stride, e = stride + stride; i !== e; ++i) {\n      if (buffer[i] !== buffer[i + stride]) {\n        // value has changed -> update scene graph\n        binding.setValue(buffer, offset);\n        break;\n      }\n    }\n  },\n  // remember the state of the bound property and copy it to both accus\n  saveOriginalState: function saveOriginalState() {\n    var binding = this.binding;\n    var buffer = this.buffer,\n        stride = this.valueSize,\n        originalValueOffset = stride * 3;\n    binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n    for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n      buffer[i] = buffer[originalValueOffset + i % stride];\n    }\n\n    this.cumulativeWeight = 0;\n  },\n  // apply the state previously taken via 'saveOriginalState' to the binding\n  restoreOriginalState: function restoreOriginalState() {\n    var originalValueOffset = this.valueSize * 3;\n    this.binding.setValue(this.buffer, originalValueOffset);\n  },\n  // mix functions\n  _select: function _select(buffer, dstOffset, srcOffset, t, stride) {\n    if (t >= 0.5) {\n      for (var i = 0; i !== stride; ++i) {\n        buffer[dstOffset + i] = buffer[srcOffset + i];\n      }\n    }\n  },\n  _slerp: function _slerp(buffer, dstOffset, srcOffset, t, stride) {\n    THREE.Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n  },\n  _lerp: function _lerp(buffer, dstOffset, srcOffset, t, stride) {\n    var s = 1 - t;\n\n    for (var i = 0; i !== stride; ++i) {\n      var j = dstOffset + i;\n      buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n    }\n  }\n}; // File:src/animation/tracks/BooleanKeyframeTrack.js\n\n/**\r\n *\r\n * A Track of Boolean keyframe values.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.BooleanKeyframeTrack = function (name, times, values) {\n  THREE.KeyframeTrack.call(this, name, times, values);\n};\n\nTHREE.BooleanKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.BooleanKeyframeTrack,\n  ValueTypeName: 'bool',\n  ValueBufferType: Array,\n  DefaultInterpolation: THREE.InterpolateDiscrete,\n  InterpolantFactoryMethodLinear: undefined,\n  InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n  // representation of a single value and a custom interpolant that\n  // computes \"firstValue ^ isOdd( index )\".\n\n}); // File:src/animation/tracks/ColorKeyframeTrack.js\n\n/**\r\n *\r\n * A Track of keyframe values that represent color.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.ColorKeyframeTrack = function (name, times, values, interpolation) {\n  THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n};\n\nTHREE.ColorKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.ColorKeyframeTrack,\n  ValueTypeName: 'color' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n  // Note: Very basic implementation and nothing special yet.\n  // However, this is the place for color space parameterization.\n\n}); // File:src/animation/tracks/NumberKeyframeTrack.js\n\n/**\r\n *\r\n * A Track of numeric keyframe values.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.NumberKeyframeTrack = function (name, times, values, interpolation) {\n  THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n};\n\nTHREE.NumberKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.NumberKeyframeTrack,\n  ValueTypeName: 'number' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n\n}); // File:src/animation/tracks/QuaternionKeyframeTrack.js\n\n/**\r\n *\r\n * A Track of quaternion keyframe values.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.QuaternionKeyframeTrack = function (name, times, values, interpolation) {\n  THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n};\n\nTHREE.QuaternionKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.QuaternionKeyframeTrack,\n  ValueTypeName: 'quaternion',\n  // ValueBufferType is inherited\n  DefaultInterpolation: THREE.InterpolateLinear,\n  InterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(result) {\n    return new THREE.QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n}); // File:src/animation/tracks/StringKeyframeTrack.js\n\n/**\r\n *\r\n * A Track that interpolates Strings\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.StringKeyframeTrack = function (name, times, values, interpolation) {\n  THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n};\n\nTHREE.StringKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.StringKeyframeTrack,\n  ValueTypeName: 'string',\n  ValueBufferType: Array,\n  DefaultInterpolation: THREE.InterpolateDiscrete,\n  InterpolantFactoryMethodLinear: undefined,\n  InterpolantFactoryMethodSmooth: undefined\n}); // File:src/animation/tracks/VectorKeyframeTrack.js\n\n/**\r\n *\r\n * A Track of vectored keyframe values.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.VectorKeyframeTrack = function (name, times, values, interpolation) {\n  THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n};\n\nTHREE.VectorKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.VectorKeyframeTrack,\n  ValueTypeName: 'vector' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n\n}); // File:src/audio/Audio.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n */\n\nTHREE.Audio = function (listener) {\n  THREE.Object3D.call(this);\n  this.type = 'Audio';\n  this.context = listener.context;\n  this.source = this.context.createBufferSource();\n  this.source.onended = this.onEnded.bind(this);\n  this.gain = this.context.createGain();\n  this.gain.connect(listener.getInput());\n  this.autoplay = false;\n  this.startTime = 0;\n  this.playbackRate = 1;\n  this.isPlaying = false;\n  this.hasPlaybackControl = true;\n  this.sourceType = 'empty';\n  this.filters = [];\n};\n\nTHREE.Audio.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Audio,\n  getOutput: function getOutput() {\n    return this.gain;\n  },\n  setNodeSource: function setNodeSource(audioNode) {\n    this.hasPlaybackControl = false;\n    this.sourceType = 'audioNode';\n    this.source = audioNode;\n    this.connect();\n    return this;\n  },\n  setBuffer: function setBuffer(audioBuffer) {\n    this.source.buffer = audioBuffer;\n    this.sourceType = 'buffer';\n    if (this.autoplay) this.play();\n    return this;\n  },\n  play: function play() {\n    if (this.isPlaying === true) {\n      console.warn('THREE.Audio: Audio is already playing.');\n      return;\n    }\n\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    var source = this.context.createBufferSource();\n    source.buffer = this.source.buffer;\n    source.loop = this.source.loop;\n    source.onended = this.source.onended;\n    source.start(0, this.startTime);\n    source.playbackRate.value = this.playbackRate;\n    this.isPlaying = true;\n    this.source = source;\n    return this.connect();\n  },\n  pause: function pause() {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.source.stop();\n    this.startTime = this.context.currentTime;\n    return this;\n  },\n  stop: function stop() {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.source.stop();\n    this.startTime = 0;\n    return this;\n  },\n  connect: function connect() {\n    if (this.filters.length > 0) {\n      this.source.connect(this.filters[0]);\n\n      for (var i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].connect(this.filters[i]);\n      }\n\n      this.filters[this.filters.length - 1].connect(this.getOutput());\n    } else {\n      this.source.connect(this.getOutput());\n    }\n\n    return this;\n  },\n  disconnect: function disconnect() {\n    if (this.filters.length > 0) {\n      this.source.disconnect(this.filters[0]);\n\n      for (var i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].disconnect(this.filters[i]);\n      }\n\n      this.filters[this.filters.length - 1].disconnect(this.getOutput());\n    } else {\n      this.source.disconnect(this.getOutput());\n    }\n\n    return this;\n  },\n  getFilters: function getFilters() {\n    return this.filters;\n  },\n  setFilters: function setFilters(value) {\n    if (!value) value = [];\n\n    if (this.isPlaying === true) {\n      this.disconnect();\n      this.filters = value;\n      this.connect();\n    } else {\n      this.filters = value;\n    }\n\n    return this;\n  },\n  getFilter: function getFilter() {\n    return this.getFilters()[0];\n  },\n  setFilter: function setFilter(filter) {\n    return this.setFilters(filter ? [filter] : []);\n  },\n  setPlaybackRate: function setPlaybackRate(value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.playbackRate = value;\n\n    if (this.isPlaying === true) {\n      this.source.playbackRate.value = this.playbackRate;\n    }\n\n    return this;\n  },\n  getPlaybackRate: function getPlaybackRate() {\n    return this.playbackRate;\n  },\n  onEnded: function onEnded() {\n    this.isPlaying = false;\n  },\n  getLoop: function getLoop() {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return false;\n    }\n\n    return this.source.loop;\n  },\n  setLoop: function setLoop(value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.source.loop = value;\n  },\n  getVolume: function getVolume() {\n    return this.gain.gain.value;\n  },\n  setVolume: function setVolume(value) {\n    this.gain.gain.value = value;\n    return this;\n  }\n}); // File:src/audio/AudioAnalyser.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.AudioAnalyser = function (audio, fftSize) {\n  this.analyser = audio.context.createAnalyser();\n  this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n  this.data = new Uint8Array(this.analyser.frequencyBinCount);\n  audio.getOutput().connect(this.analyser);\n};\n\nObject.assign(THREE.AudioAnalyser.prototype, {\n  getFrequencyData: function getFrequencyData() {\n    this.analyser.getByteFrequencyData(this.data);\n    return this.data;\n  },\n  getAverageFrequency: function getAverageFrequency() {\n    var value = 0,\n        data = this.getFrequencyData();\n\n    for (var i = 0; i < data.length; i++) {\n      value += data[i];\n    }\n\n    return value / data.length;\n  }\n}); // File:src/audio/AudioContext.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nObject.defineProperty(THREE, 'AudioContext', {\n  get: function () {\n    var context;\n    return function () {\n      if (context === undefined) {\n        context = new (window.AudioContext || window.webkitAudioContext)();\n      }\n\n      return context;\n    };\n  }()\n}); // File:src/audio/PositionalAudio.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.PositionalAudio = function (listener) {\n  THREE.Audio.call(this, listener);\n  this.panner = this.context.createPanner();\n  this.panner.connect(this.gain);\n};\n\nTHREE.PositionalAudio.prototype = Object.assign(Object.create(THREE.Audio.prototype), {\n  constructor: THREE.PositionalAudio,\n  getOutput: function getOutput() {\n    return this.panner;\n  },\n  getRefDistance: function getRefDistance() {\n    return this.panner.refDistance;\n  },\n  setRefDistance: function setRefDistance(value) {\n    this.panner.refDistance = value;\n  },\n  getRolloffFactor: function getRolloffFactor() {\n    return this.panner.rolloffFactor;\n  },\n  setRolloffFactor: function setRolloffFactor(value) {\n    this.panner.rolloffFactor = value;\n  },\n  getDistanceModel: function getDistanceModel() {\n    return this.panner.distanceModel;\n  },\n  setDistanceModel: function setDistanceModel(value) {\n    this.panner.distanceModel = value;\n  },\n  getMaxDistance: function getMaxDistance() {\n    return this.panner.maxDistance;\n  },\n  setMaxDistance: function setMaxDistance(value) {\n    this.panner.maxDistance = value;\n  },\n  updateMatrixWorld: function () {\n    var position = new THREE.Vector3();\n    return function updateMatrixWorld(force) {\n      THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n      position.setFromMatrixPosition(this.matrixWorld);\n      this.panner.setPosition(position.x, position.y, position.z);\n    };\n  }()\n}); // File:src/audio/AudioListener.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.AudioListener = function () {\n  THREE.Object3D.call(this);\n  this.type = 'AudioListener';\n  this.context = THREE.AudioContext;\n  this.gain = this.context.createGain();\n  this.gain.connect(this.context.destination);\n  this.filter = null;\n};\n\nTHREE.AudioListener.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.AudioListener,\n  getInput: function getInput() {\n    return this.gain;\n  },\n  removeFilter: function removeFilter() {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n      this.gain.connect(this.context.destination);\n      this.filter = null;\n    }\n  },\n  getFilter: function getFilter() {\n    return this.filter;\n  },\n  setFilter: function setFilter(value) {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n    } else {\n      this.gain.disconnect(this.context.destination);\n    }\n\n    this.filter = value;\n    this.gain.connect(this.filter);\n    this.filter.connect(this.context.destination);\n  },\n  getMasterVolume: function getMasterVolume() {\n    return this.gain.gain.value;\n  },\n  setMasterVolume: function setMasterVolume(value) {\n    this.gain.gain.value = value;\n  },\n  updateMatrixWorld: function () {\n    var position = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    var scale = new THREE.Vector3();\n    var orientation = new THREE.Vector3();\n    return function updateMatrixWorld(force) {\n      THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n      var listener = this.context.listener;\n      var up = this.up;\n      this.matrixWorld.decompose(position, quaternion, scale);\n      orientation.set(0, 0, -1).applyQuaternion(quaternion);\n      listener.setPosition(position.x, position.y, position.z);\n      listener.setOrientation(orientation.x, orientation.y, orientation.z, up.x, up.y, up.z);\n    };\n  }()\n}); // File:src/cameras/Camera.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\nTHREE.Camera = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Camera';\n  this.matrixWorldInverse = new THREE.Matrix4();\n  this.projectionMatrix = new THREE.Matrix4();\n};\n\nTHREE.Camera.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Camera.prototype.constructor = THREE.Camera;\n\nTHREE.Camera.prototype.getWorldDirection = function () {\n  var quaternion = new THREE.Quaternion();\n  return function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.getWorldQuaternion(quaternion);\n    return result.set(0, 0, -1).applyQuaternion(quaternion);\n  };\n}();\n\nTHREE.Camera.prototype.lookAt = function () {\n  // This routine does not support cameras with rotated and/or translated parent(s)\n  var m1 = new THREE.Matrix4();\n  return function (vector) {\n    m1.lookAt(this.position, vector, this.up);\n    this.quaternion.setFromRotationMatrix(m1);\n  };\n}();\n\nTHREE.Camera.prototype.clone = function () {\n  return new this.constructor().copy(this);\n};\n\nTHREE.Camera.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.matrixWorldInverse.copy(source.matrixWorldInverse);\n  this.projectionMatrix.copy(source.projectionMatrix);\n  return this;\n}; // File:src/cameras/CubeCamera.js\n\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.CubeCamera = function (near, far, cubeResolution) {\n  THREE.Object3D.call(this);\n  this.type = 'CubeCamera';\n  var fov = 90,\n      aspect = 1;\n  var cameraPX = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPX.up.set(0, -1, 0);\n  cameraPX.lookAt(new THREE.Vector3(1, 0, 0));\n  this.add(cameraPX);\n  var cameraNX = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNX.up.set(0, -1, 0);\n  cameraNX.lookAt(new THREE.Vector3(-1, 0, 0));\n  this.add(cameraNX);\n  var cameraPY = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPY.up.set(0, 0, 1);\n  cameraPY.lookAt(new THREE.Vector3(0, 1, 0));\n  this.add(cameraPY);\n  var cameraNY = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNY.up.set(0, 0, -1);\n  cameraNY.lookAt(new THREE.Vector3(0, -1, 0));\n  this.add(cameraNY);\n  var cameraPZ = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPZ.up.set(0, -1, 0);\n  cameraPZ.lookAt(new THREE.Vector3(0, 0, 1));\n  this.add(cameraPZ);\n  var cameraNZ = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNZ.up.set(0, -1, 0);\n  cameraNZ.lookAt(new THREE.Vector3(0, 0, -1));\n  this.add(cameraNZ);\n  var options = {\n    format: THREE.RGBFormat,\n    magFilter: THREE.LinearFilter,\n    minFilter: THREE.LinearFilter\n  };\n  this.renderTarget = new THREE.WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n\n  this.updateCubeMap = function (renderer, scene) {\n    if (this.parent === null) this.updateMatrixWorld();\n    var renderTarget = this.renderTarget;\n    var generateMipmaps = renderTarget.texture.generateMipmaps;\n    renderTarget.texture.generateMipmaps = false;\n    renderTarget.activeCubeFace = 0;\n    renderer.render(scene, cameraPX, renderTarget);\n    renderTarget.activeCubeFace = 1;\n    renderer.render(scene, cameraNX, renderTarget);\n    renderTarget.activeCubeFace = 2;\n    renderer.render(scene, cameraPY, renderTarget);\n    renderTarget.activeCubeFace = 3;\n    renderer.render(scene, cameraNY, renderTarget);\n    renderTarget.activeCubeFace = 4;\n    renderer.render(scene, cameraPZ, renderTarget);\n    renderTarget.texture.generateMipmaps = generateMipmaps;\n    renderTarget.activeCubeFace = 5;\n    renderer.render(scene, cameraNZ, renderTarget);\n    renderer.setRenderTarget(null);\n  };\n};\n\nTHREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera; // File:src/cameras/OrthographicCamera.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.OrthographicCamera = function (left, right, top, bottom, near, far) {\n  THREE.Camera.call(this);\n  this.type = 'OrthographicCamera';\n  this.zoom = 1;\n  this.left = left;\n  this.right = right;\n  this.top = top;\n  this.bottom = bottom;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n};\n\nTHREE.OrthographicCamera.prototype = Object.assign(Object.create(THREE.Camera.prototype), {\n  constructor: THREE.OrthographicCamera,\n  copy: function copy(source) {\n    THREE.Camera.prototype.copy.call(this, source);\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.near = source.near;\n    this.far = source.far;\n    this.zoom = source.zoom;\n    return this;\n  },\n  updateProjectionMatrix: function updateProjectionMatrix() {\n    var dx = (this.right - this.left) / (2 * this.zoom);\n    var dy = (this.top - this.bottom) / (2 * this.zoom);\n    var cx = (this.right + this.left) / 2;\n    var cy = (this.top + this.bottom) / 2;\n    this.projectionMatrix.makeOrthographic(cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far);\n  },\n  toJSON: function toJSON(meta) {\n    var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n    data.object.zoom = this.zoom;\n    data.object.left = this.left;\n    data.object.right = this.right;\n    data.object.top = this.top;\n    data.object.bottom = this.bottom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    return data;\n  }\n}); // File:src/cameras/PerspectiveCamera.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author tschw\r\n */\n\nTHREE.PerspectiveCamera = function (fov, aspect, near, far) {\n  THREE.Camera.call(this);\n  this.type = 'PerspectiveCamera';\n  this.fov = fov !== undefined ? fov : 50;\n  this.zoom = 1;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.focus = 10;\n  this.aspect = aspect !== undefined ? aspect : 1;\n  this.view = null;\n  this.filmGauge = 35; // width of the film (default in millimeters)\n\n  this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n  this.updateProjectionMatrix();\n};\n\nTHREE.PerspectiveCamera.prototype = Object.assign(Object.create(THREE.Camera.prototype), {\n  constructor: THREE.PerspectiveCamera,\n  copy: function copy(source) {\n    THREE.Camera.prototype.copy.call(this, source);\n    this.fov = source.fov;\n    this.zoom = source.zoom;\n    this.near = source.near;\n    this.far = source.far;\n    this.focus = source.focus;\n    this.aspect = source.aspect;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    this.filmGauge = source.filmGauge;\n    this.filmOffset = source.filmOffset;\n    return this;\n  },\n\n  /**\r\n   * Sets the FOV by focal length in respect to the current .filmGauge.\r\n   *\r\n   * The default film gauge is 35, so that the focal length can be specified for\r\n   * a 35mm (full frame) camera.\r\n   *\r\n   * Values for focal length and film gauge must have the same unit.\r\n   */\n  setFocalLength: function setFocalLength(focalLength) {\n    // see http://www.bobatkins.com/photography/technical/field_of_view.html\n    var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n    this.fov = THREE.Math.RAD2DEG * 2 * Math.atan(vExtentSlope);\n    this.updateProjectionMatrix();\n  },\n\n  /**\r\n   * Calculates the focal length from the current .fov and .filmGauge.\r\n   */\n  getFocalLength: function getFocalLength() {\n    var vExtentSlope = Math.tan(THREE.Math.DEG2RAD * 0.5 * this.fov);\n    return 0.5 * this.getFilmHeight() / vExtentSlope;\n  },\n  getEffectiveFOV: function getEffectiveFOV() {\n    return THREE.Math.RAD2DEG * 2 * Math.atan(Math.tan(THREE.Math.DEG2RAD * 0.5 * this.fov) / this.zoom);\n  },\n  getFilmWidth: function getFilmWidth() {\n    // film not completely covered in portrait format (aspect < 1)\n    return this.filmGauge * Math.min(this.aspect, 1);\n  },\n  getFilmHeight: function getFilmHeight() {\n    // film not completely covered in landscape format (aspect > 1)\n    return this.filmGauge / Math.max(this.aspect, 1);\n  },\n\n  /**\r\n   * Sets an offset in a larger frustum. This is useful for multi-window or\r\n   * multi-monitor/multi-machine setups.\r\n   *\r\n   * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n   * the monitors are in grid like this\r\n   *\r\n   *   +---+---+---+\r\n   *   | A | B | C |\r\n   *   +---+---+---+\r\n   *   | D | E | F |\r\n   *   +---+---+---+\r\n   *\r\n   * then for each monitor you would call it like this\r\n   *\r\n   *   var w = 1920;\r\n   *   var h = 1080;\r\n   *   var fullWidth = w * 3;\r\n   *   var fullHeight = h * 2;\r\n   *\r\n   *   --A--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n   *   --B--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n   *   --C--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n   *   --D--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n   *   --E--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n   *   --F--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n   *\r\n   *   Note there is no reason monitors have to be the same size or in a grid.\r\n   */\n  setViewOffset: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n    this.aspect = fullWidth / fullHeight;\n    this.view = {\n      fullWidth: fullWidth,\n      fullHeight: fullHeight,\n      offsetX: x,\n      offsetY: y,\n      width: width,\n      height: height\n    };\n    this.updateProjectionMatrix();\n  },\n  clearViewOffset: function clearViewOffset() {\n    this.view = null;\n    this.updateProjectionMatrix();\n  },\n  updateProjectionMatrix: function updateProjectionMatrix() {\n    var near = this.near,\n        top = near * Math.tan(THREE.Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\n        height = 2 * top,\n        width = this.aspect * height,\n        left = -0.5 * width,\n        view = this.view;\n\n    if (view !== null) {\n      var fullWidth = view.fullWidth,\n          fullHeight = view.fullHeight;\n      left += view.offsetX * width / fullWidth;\n      top -= view.offsetY * height / fullHeight;\n      width *= view.width / fullWidth;\n      height *= view.height / fullHeight;\n    }\n\n    var skew = this.filmOffset;\n    if (skew !== 0) left += near * skew / this.getFilmWidth();\n    this.projectionMatrix.makeFrustum(left, left + width, top - height, top, near, this.far);\n  },\n  toJSON: function toJSON(meta) {\n    var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n    data.object.fov = this.fov;\n    data.object.zoom = this.zoom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    data.object.focus = this.focus;\n    data.object.aspect = this.aspect;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    data.object.filmGauge = this.filmGauge;\n    data.object.filmOffset = this.filmOffset;\n    return data;\n  }\n}); // File:src/cameras/StereoCamera.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.StereoCamera = function () {\n  this.type = 'StereoCamera';\n  this.aspect = 1;\n  this.cameraL = new THREE.PerspectiveCamera();\n  this.cameraL.layers.enable(1);\n  this.cameraL.matrixAutoUpdate = false;\n  this.cameraR = new THREE.PerspectiveCamera();\n  this.cameraR.layers.enable(2);\n  this.cameraR.matrixAutoUpdate = false;\n};\n\nObject.assign(THREE.StereoCamera.prototype, {\n  update: function () {\n    var focus, fov, aspect, near, far;\n    var eyeRight = new THREE.Matrix4();\n    var eyeLeft = new THREE.Matrix4();\n    return function update(camera) {\n      var needsUpdate = focus !== camera.focus || fov !== camera.fov || aspect !== camera.aspect * this.aspect || near !== camera.near || far !== camera.far;\n\n      if (needsUpdate) {\n        focus = camera.focus;\n        fov = camera.fov;\n        aspect = camera.aspect * this.aspect;\n        near = camera.near;\n        far = camera.far; // Off-axis stereoscopic effect based on\n        // http://paulbourke.net/stereographics/stereorender/\n\n        var projectionMatrix = camera.projectionMatrix.clone();\n        var eyeSep = 0.064 / 2;\n        var eyeSepOnProjection = eyeSep * near / focus;\n        var ymax = near * Math.tan(THREE.Math.DEG2RAD * fov * 0.5);\n        var xmin, xmax; // translate xOffset\n\n        eyeLeft.elements[12] = -eyeSep;\n        eyeRight.elements[12] = eyeSep; // for left eye\n\n        xmin = -ymax * aspect + eyeSepOnProjection;\n        xmax = ymax * aspect + eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n        xmin = -ymax * aspect - eyeSepOnProjection;\n        xmax = ymax * aspect - eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraR.projectionMatrix.copy(projectionMatrix);\n      }\n\n      this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);\n      this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight);\n    };\n  }()\n}); // File:src/lights/Light.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Light = function (color, intensity) {\n  THREE.Object3D.call(this);\n  this.type = 'Light';\n  this.color = new THREE.Color(color);\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.receiveShadow = undefined;\n};\n\nTHREE.Light.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Light,\n  copy: function copy(source) {\n    THREE.Object3D.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.intensity = source.intensity;\n    return this;\n  },\n  toJSON: function toJSON(meta) {\n    var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n    data.object.color = this.color.getHex();\n    data.object.intensity = this.intensity;\n    if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n    if (this.distance !== undefined) data.object.distance = this.distance;\n    if (this.angle !== undefined) data.object.angle = this.angle;\n    if (this.decay !== undefined) data.object.decay = this.decay;\n    if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n    return data;\n  }\n}); // File:src/lights/LightShadow.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.LightShadow = function (camera) {\n  this.camera = camera;\n  this.bias = 0;\n  this.radius = 1;\n  this.mapSize = new THREE.Vector2(512, 512);\n  this.map = null;\n  this.matrix = new THREE.Matrix4();\n};\n\nObject.assign(THREE.LightShadow.prototype, {\n  copy: function copy(source) {\n    this.camera = source.camera.clone();\n    this.bias = source.bias;\n    this.radius = source.radius;\n    this.mapSize.copy(source.mapSize);\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  }\n}); // File:src/lights/AmbientLight.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.AmbientLight = function (color, intensity) {\n  THREE.Light.call(this, color, intensity);\n  this.type = 'AmbientLight';\n  this.castShadow = undefined;\n};\n\nTHREE.AmbientLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n  constructor: THREE.AmbientLight\n}); // File:src/lights/DirectionalLight.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.DirectionalLight = function (color, intensity) {\n  THREE.Light.call(this, color, intensity);\n  this.type = 'DirectionalLight';\n  this.position.set(0, 1, 0);\n  this.updateMatrix();\n  this.target = new THREE.Object3D();\n  this.shadow = new THREE.DirectionalLightShadow();\n};\n\nTHREE.DirectionalLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n  constructor: THREE.DirectionalLight,\n  copy: function copy(source) {\n    THREE.Light.prototype.copy.call(this, source);\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}); // File:src/lights/DirectionalLightShadow.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.DirectionalLightShadow = function (light) {\n  THREE.LightShadow.call(this, new THREE.OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n};\n\nTHREE.DirectionalLightShadow.prototype = Object.assign(Object.create(THREE.LightShadow.prototype), {\n  constructor: THREE.DirectionalLightShadow\n}); // File:src/lights/HemisphereLight.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.HemisphereLight = function (skyColor, groundColor, intensity) {\n  THREE.Light.call(this, skyColor, intensity);\n  this.type = 'HemisphereLight';\n  this.castShadow = undefined;\n  this.position.set(0, 1, 0);\n  this.updateMatrix();\n  this.groundColor = new THREE.Color(groundColor);\n};\n\nTHREE.HemisphereLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n  constructor: THREE.HemisphereLight,\n  copy: function copy(source) {\n    THREE.Light.prototype.copy.call(this, source);\n    this.groundColor.copy(source.groundColor);\n    return this;\n  }\n}); // File:src/lights/PointLight.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.PointLight = function (color, intensity, distance, decay) {\n  THREE.Light.call(this, color, intensity);\n  this.type = 'PointLight';\n  Object.defineProperty(this, 'power', {\n    get: function get() {\n      // intensity = power per solid angle.\n      // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      return this.intensity * 4 * Math.PI;\n    },\n    set: function set(power) {\n      // intensity = power per solid angle.\n      // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      this.intensity = power / (4 * Math.PI);\n    }\n  });\n  this.distance = distance !== undefined ? distance : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.shadow = new THREE.LightShadow(new THREE.PerspectiveCamera(90, 1, 0.5, 500));\n};\n\nTHREE.PointLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n  constructor: THREE.PointLight,\n  copy: function copy(source) {\n    THREE.Light.prototype.copy.call(this, source);\n    this.distance = source.distance;\n    this.decay = source.decay;\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}); // File:src/lights/SpotLight.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.SpotLight = function (color, intensity, distance, angle, penumbra, decay) {\n  THREE.Light.call(this, color, intensity);\n  this.type = 'SpotLight';\n  this.position.set(0, 1, 0);\n  this.updateMatrix();\n  this.target = new THREE.Object3D();\n  Object.defineProperty(this, 'power', {\n    get: function get() {\n      // intensity = power per solid angle.\n      // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      return this.intensity * Math.PI;\n    },\n    set: function set(power) {\n      // intensity = power per solid angle.\n      // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      this.intensity = power / Math.PI;\n    }\n  });\n  this.distance = distance !== undefined ? distance : 0;\n  this.angle = angle !== undefined ? angle : Math.PI / 3;\n  this.penumbra = penumbra !== undefined ? penumbra : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.shadow = new THREE.SpotLightShadow();\n};\n\nTHREE.SpotLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n  constructor: THREE.SpotLight,\n  copy: function copy(source) {\n    THREE.Light.prototype.copy.call(this, source);\n    this.distance = source.distance;\n    this.angle = source.angle;\n    this.penumbra = source.penumbra;\n    this.decay = source.decay;\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}); // File:src/lights/SpotLightShadow.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.SpotLightShadow = function () {\n  THREE.LightShadow.call(this, new THREE.PerspectiveCamera(50, 1, 0.5, 500));\n};\n\nTHREE.SpotLightShadow.prototype = Object.assign(Object.create(THREE.LightShadow.prototype), {\n  constructor: THREE.SpotLightShadow,\n  update: function update(light) {\n    var fov = THREE.Math.RAD2DEG * 2 * light.angle;\n    var aspect = this.mapSize.width / this.mapSize.height;\n    var far = light.distance || 500;\n    var camera = this.camera;\n\n    if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n      camera.fov = fov;\n      camera.aspect = aspect;\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n  }\n}); // File:src/loaders/AudioLoader.js\n\n/**\r\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n */\n\nTHREE.AudioLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.AudioLoader.prototype = {\n  constructor: THREE.AudioLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (buffer) {\n      var context = THREE.AudioContext;\n      context.decodeAudioData(buffer, function (audioBuffer) {\n        onLoad(audioBuffer);\n      });\n    }, onProgress, onError);\n  }\n}; // File:src/loaders/Cache.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Cache = {\n  enabled: false,\n  files: {},\n  add: function add(key, file) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n    this.files[key] = file;\n  },\n  get: function get(key) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n    return this.files[key];\n  },\n  remove: function remove(key) {\n    delete this.files[key];\n  },\n  clear: function clear() {\n    this.files = {};\n  }\n}; // File:src/loaders/Loader.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Loader = function () {\n  this.onLoadStart = function () {};\n\n  this.onLoadProgress = function () {};\n\n  this.onLoadComplete = function () {};\n};\n\nTHREE.Loader.prototype = {\n  constructor: THREE.Loader,\n  crossOrigin: undefined,\n  extractUrlBase: function extractUrlBase(url) {\n    var parts = url.split('/');\n    if (parts.length === 1) return './';\n    parts.pop();\n    return parts.join('/') + '/';\n  },\n  initMaterials: function initMaterials(materials, texturePath, crossOrigin) {\n    var array = [];\n\n    for (var i = 0; i < materials.length; ++i) {\n      array[i] = this.createMaterial(materials[i], texturePath, crossOrigin);\n    }\n\n    return array;\n  },\n  createMaterial: function () {\n    var color, textureLoader, materialLoader;\n    return function (m, texturePath, crossOrigin) {\n      if (color === undefined) color = new THREE.Color();\n      if (textureLoader === undefined) textureLoader = new THREE.TextureLoader();\n      if (materialLoader === undefined) materialLoader = new THREE.MaterialLoader(); // convert from old material format\n\n      var textures = {};\n\n      function loadTexture(path, repeat, offset, wrap, anisotropy) {\n        var fullPath = texturePath + path;\n        var loader = THREE.Loader.Handlers.get(fullPath);\n        var texture;\n\n        if (loader !== null) {\n          texture = loader.load(fullPath);\n        } else {\n          textureLoader.setCrossOrigin(crossOrigin);\n          texture = textureLoader.load(fullPath);\n        }\n\n        if (repeat !== undefined) {\n          texture.repeat.fromArray(repeat);\n          if (repeat[0] !== 1) texture.wrapS = THREE.RepeatWrapping;\n          if (repeat[1] !== 1) texture.wrapT = THREE.RepeatWrapping;\n        }\n\n        if (offset !== undefined) {\n          texture.offset.fromArray(offset);\n        }\n\n        if (wrap !== undefined) {\n          if (wrap[0] === 'repeat') texture.wrapS = THREE.RepeatWrapping;\n          if (wrap[0] === 'mirror') texture.wrapS = THREE.MirroredRepeatWrapping;\n          if (wrap[1] === 'repeat') texture.wrapT = THREE.RepeatWrapping;\n          if (wrap[1] === 'mirror') texture.wrapT = THREE.MirroredRepeatWrapping;\n        }\n\n        if (anisotropy !== undefined) {\n          texture.anisotropy = anisotropy;\n        }\n\n        var uuid = THREE.Math.generateUUID();\n        textures[uuid] = texture;\n        return uuid;\n      } //\n\n\n      var json = {\n        uuid: THREE.Math.generateUUID(),\n        type: 'MeshLambertMaterial'\n      };\n\n      for (var name in m) {\n        var value = m[name];\n\n        switch (name) {\n          case 'DbgColor':\n          case 'DbgIndex':\n          case 'opticalDensity':\n          case 'illumination':\n            break;\n\n          case 'DbgName':\n            json.name = value;\n            break;\n\n          case 'blending':\n            json.blending = THREE[value];\n            break;\n\n          case 'colorAmbient':\n          case 'mapAmbient':\n            console.warn('THREE.Loader.createMaterial:', name, 'is no longer supported.');\n            break;\n\n          case 'colorDiffuse':\n            json.color = color.fromArray(value).getHex();\n            break;\n\n          case 'colorSpecular':\n            json.specular = color.fromArray(value).getHex();\n            break;\n\n          case 'colorEmissive':\n            json.emissive = color.fromArray(value).getHex();\n            break;\n\n          case 'specularCoef':\n            json.shininess = value;\n            break;\n\n          case 'shading':\n            if (value.toLowerCase() === 'basic') json.type = 'MeshBasicMaterial';\n            if (value.toLowerCase() === 'phong') json.type = 'MeshPhongMaterial';\n            break;\n\n          case 'mapDiffuse':\n            json.map = loadTexture(value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n            break;\n\n          case 'mapDiffuseRepeat':\n          case 'mapDiffuseOffset':\n          case 'mapDiffuseWrap':\n          case 'mapDiffuseAnisotropy':\n            break;\n\n          case 'mapLight':\n            json.lightMap = loadTexture(value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n            break;\n\n          case 'mapLightRepeat':\n          case 'mapLightOffset':\n          case 'mapLightWrap':\n          case 'mapLightAnisotropy':\n            break;\n\n          case 'mapAO':\n            json.aoMap = loadTexture(value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy);\n            break;\n\n          case 'mapAORepeat':\n          case 'mapAOOffset':\n          case 'mapAOWrap':\n          case 'mapAOAnisotropy':\n            break;\n\n          case 'mapBump':\n            json.bumpMap = loadTexture(value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n            break;\n\n          case 'mapBumpScale':\n            json.bumpScale = value;\n            break;\n\n          case 'mapBumpRepeat':\n          case 'mapBumpOffset':\n          case 'mapBumpWrap':\n          case 'mapBumpAnisotropy':\n            break;\n\n          case 'mapNormal':\n            json.normalMap = loadTexture(value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n            break;\n\n          case 'mapNormalFactor':\n            json.normalScale = [value, value];\n            break;\n\n          case 'mapNormalRepeat':\n          case 'mapNormalOffset':\n          case 'mapNormalWrap':\n          case 'mapNormalAnisotropy':\n            break;\n\n          case 'mapSpecular':\n            json.specularMap = loadTexture(value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n            break;\n\n          case 'mapSpecularRepeat':\n          case 'mapSpecularOffset':\n          case 'mapSpecularWrap':\n          case 'mapSpecularAnisotropy':\n            break;\n\n          case 'mapAlpha':\n            json.alphaMap = loadTexture(value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n            break;\n\n          case 'mapAlphaRepeat':\n          case 'mapAlphaOffset':\n          case 'mapAlphaWrap':\n          case 'mapAlphaAnisotropy':\n            break;\n\n          case 'flipSided':\n            json.side = THREE.BackSide;\n            break;\n\n          case 'doubleSided':\n            json.side = THREE.DoubleSide;\n            break;\n\n          case 'transparency':\n            console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');\n            json.opacity = value;\n            break;\n\n          case 'depthTest':\n          case 'depthWrite':\n          case 'colorWrite':\n          case 'opacity':\n          case 'reflectivity':\n          case 'transparent':\n          case 'visible':\n          case 'wireframe':\n            json[name] = value;\n            break;\n\n          case 'vertexColors':\n            if (value === true) json.vertexColors = THREE.VertexColors;\n            if (value === 'face') json.vertexColors = THREE.FaceColors;\n            break;\n\n          default:\n            console.error('THREE.Loader.createMaterial: Unsupported', name, value);\n            break;\n        }\n      }\n\n      if (json.type === 'MeshBasicMaterial') delete json.emissive;\n      if (json.type !== 'MeshPhongMaterial') delete json.specular;\n      if (json.opacity < 1) json.transparent = true;\n      materialLoader.setTextures(textures);\n      return materialLoader.parse(json);\n    };\n  }()\n};\nTHREE.Loader.Handlers = {\n  handlers: [],\n  add: function add(regex, loader) {\n    this.handlers.push(regex, loader);\n  },\n  get: function get(file) {\n    var handlers = this.handlers;\n\n    for (var i = 0, l = handlers.length; i < l; i += 2) {\n      var regex = handlers[i];\n      var loader = handlers[i + 1];\n\n      if (regex.test(file)) {\n        return loader;\n      }\n    }\n\n    return null;\n  }\n}; // File:src/loaders/XHRLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.XHRLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.XHRLoader.prototype = {\n  constructor: THREE.XHRLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    if (this.path !== undefined) url = this.path + url;\n    var scope = this;\n    var cached = THREE.Cache.get(url);\n\n    if (cached !== undefined) {\n      if (onLoad) {\n        setTimeout(function () {\n          onLoad(cached);\n        }, 0);\n      }\n\n      return cached;\n    }\n\n    var request = new XMLHttpRequest();\n    request.overrideMimeType('text/plain');\n    request.open('GET', url, true);\n    request.addEventListener('load', function (event) {\n      var response = event.target.response;\n      THREE.Cache.add(url, response);\n\n      if (this.status === 200) {\n        if (onLoad) onLoad(response);\n        scope.manager.itemEnd(url);\n      } else if (this.status === 0) {\n        // Some browsers return HTTP Status 0 when using non-http protocol\n        // e.g. 'file://' or 'data://'. Handle as success.\n        console.warn('THREE.XHRLoader: HTTP Status 0 received.');\n        if (onLoad) onLoad(response);\n        scope.manager.itemEnd(url);\n      } else {\n        if (onError) onError(event);\n        scope.manager.itemError(url);\n      }\n    }, false);\n\n    if (onProgress !== undefined) {\n      request.addEventListener('progress', function (event) {\n        onProgress(event);\n      }, false);\n    }\n\n    request.addEventListener('error', function (event) {\n      if (onError) onError(event);\n      scope.manager.itemError(url);\n    }, false);\n    if (this.responseType !== undefined) request.responseType = this.responseType;\n    if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n    request.send(null);\n    scope.manager.itemStart(url);\n    return request;\n  },\n  setPath: function setPath(value) {\n    this.path = value;\n  },\n  setResponseType: function setResponseType(value) {\n    this.responseType = value;\n  },\n  setWithCredentials: function setWithCredentials(value) {\n    this.withCredentials = value;\n  }\n}; // File:src/loaders/FontLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.FontLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.FontLoader.prototype = {\n  constructor: THREE.FontLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.load(url, function (text) {\n      var json;\n\n      try {\n        json = JSON.parse(text);\n      } catch (e) {\n        console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n        json = JSON.parse(text.substring(65, text.length - 2));\n      }\n\n      var font = scope.parse(json);\n      if (onLoad) onLoad(font);\n    }, onProgress, onError);\n  },\n  parse: function parse(json) {\n    return new THREE.Font(json);\n  }\n}; // File:src/loaders/ImageLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.ImageLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.ImageLoader.prototype = {\n  constructor: THREE.ImageLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    if (this.path !== undefined) url = this.path + url;\n    var scope = this;\n    var cached = THREE.Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n\n      if (onLoad) {\n        setTimeout(function () {\n          onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n      } else {\n        scope.manager.itemEnd(url);\n      }\n\n      return cached;\n    }\n\n    var image = document.createElement('img');\n    image.addEventListener('load', function (event) {\n      THREE.Cache.add(url, this);\n      if (onLoad) onLoad(this);\n      scope.manager.itemEnd(url);\n    }, false);\n\n    if (onProgress !== undefined) {\n      image.addEventListener('progress', function (event) {\n        onProgress(event);\n      }, false);\n    }\n\n    image.addEventListener('error', function (event) {\n      if (onError) onError(event);\n      scope.manager.itemError(url);\n    }, false);\n    if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n    scope.manager.itemStart(url);\n    image.src = url;\n    return image;\n  },\n  setCrossOrigin: function setCrossOrigin(value) {\n    this.crossOrigin = value;\n  },\n  setPath: function setPath(value) {\n    this.path = value;\n  }\n}; // File:src/loaders/JSONLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.JSONLoader = function (manager) {\n  if (typeof manager === 'boolean') {\n    console.warn('THREE.JSONLoader: showStatus parameter has been removed from constructor.');\n    manager = undefined;\n  }\n\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  this.withCredentials = false;\n};\n\nTHREE.JSONLoader.prototype = {\n  constructor: THREE.JSONLoader,\n\n  // Deprecated\n  get statusDomElement() {\n    if (this._statusDomElement === undefined) {\n      this._statusDomElement = document.createElement('div');\n    }\n\n    console.warn('THREE.JSONLoader: .statusDomElement has been removed.');\n    return this._statusDomElement;\n  },\n\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var texturePath = this.texturePath && typeof this.texturePath === \"string\" ? this.texturePath : THREE.Loader.prototype.extractUrlBase(url);\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      var json = JSON.parse(text);\n      var metadata = json.metadata;\n\n      if (metadata !== undefined) {\n        var type = metadata.type;\n\n        if (type !== undefined) {\n          if (type.toLowerCase() === 'object') {\n            console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.');\n            return;\n          }\n\n          if (type.toLowerCase() === 'scene') {\n            console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.');\n            return;\n          }\n        }\n      }\n\n      var object = scope.parse(json, texturePath);\n      onLoad(object.geometry, object.materials);\n    }, onProgress, onError);\n  },\n  setTexturePath: function setTexturePath(value) {\n    this.texturePath = value;\n  },\n  parse: function parse(json, texturePath) {\n    var geometry = new THREE.Geometry(),\n        scale = json.scale !== undefined ? 1.0 / json.scale : 1.0;\n    parseModel(scale);\n    parseSkin();\n    parseMorphing(scale);\n    parseAnimations();\n    geometry.computeFaceNormals();\n    geometry.computeBoundingSphere();\n\n    function parseModel(scale) {\n      function isBitSet(value, position) {\n        return value & 1 << position;\n      }\n\n      var i,\n          j,\n          fi,\n          offset,\n          zLength,\n          colorIndex,\n          normalIndex,\n          uvIndex,\n          materialIndex,\n          type,\n          isQuad,\n          hasMaterial,\n          hasFaceVertexUv,\n          hasFaceNormal,\n          hasFaceVertexNormal,\n          hasFaceColor,\n          hasFaceVertexColor,\n          vertex,\n          face,\n          faceA,\n          faceB,\n          hex,\n          normal,\n          uvLayer,\n          uv,\n          u,\n          v,\n          faces = json.faces,\n          vertices = json.vertices,\n          normals = json.normals,\n          colors = json.colors,\n          nUvLayers = 0;\n\n      if (json.uvs !== undefined) {\n        // disregard empty arrays\n        for (i = 0; i < json.uvs.length; i++) {\n          if (json.uvs[i].length) nUvLayers++;\n        }\n\n        for (i = 0; i < nUvLayers; i++) {\n          geometry.faceVertexUvs[i] = [];\n        }\n      }\n\n      offset = 0;\n      zLength = vertices.length;\n\n      while (offset < zLength) {\n        vertex = new THREE.Vector3();\n        vertex.x = vertices[offset++] * scale;\n        vertex.y = vertices[offset++] * scale;\n        vertex.z = vertices[offset++] * scale;\n        geometry.vertices.push(vertex);\n      }\n\n      offset = 0;\n      zLength = faces.length;\n\n      while (offset < zLength) {\n        type = faces[offset++];\n        isQuad = isBitSet(type, 0);\n        hasMaterial = isBitSet(type, 1);\n        hasFaceVertexUv = isBitSet(type, 3);\n        hasFaceNormal = isBitSet(type, 4);\n        hasFaceVertexNormal = isBitSet(type, 5);\n        hasFaceColor = isBitSet(type, 6);\n        hasFaceVertexColor = isBitSet(type, 7); // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n        if (isQuad) {\n          faceA = new THREE.Face3();\n          faceA.a = faces[offset];\n          faceA.b = faces[offset + 1];\n          faceA.c = faces[offset + 3];\n          faceB = new THREE.Face3();\n          faceB.a = faces[offset + 1];\n          faceB.b = faces[offset + 2];\n          faceB.c = faces[offset + 3];\n          offset += 4;\n\n          if (hasMaterial) {\n            materialIndex = faces[offset++];\n            faceA.materialIndex = materialIndex;\n            faceB.materialIndex = materialIndex;\n          } // to get face <=> uv index correspondence\n\n\n          fi = geometry.faces.length;\n\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n              geometry.faceVertexUvs[i][fi + 1] = [];\n\n              for (j = 0; j < 4; j++) {\n                uvIndex = faces[offset++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new THREE.Vector2(u, v);\n                if (j !== 2) geometry.faceVertexUvs[i][fi].push(uv);\n                if (j !== 0) geometry.faceVertexUvs[i][fi + 1].push(uv);\n              }\n            }\n          }\n\n          if (hasFaceNormal) {\n            normalIndex = faces[offset++] * 3;\n            faceA.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n            faceB.normal.copy(faceA.normal);\n          }\n\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 4; i++) {\n              normalIndex = faces[offset++] * 3;\n              normal = new THREE.Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              if (i !== 2) faceA.vertexNormals.push(normal);\n              if (i !== 0) faceB.vertexNormals.push(normal);\n            }\n          }\n\n          if (hasFaceColor) {\n            colorIndex = faces[offset++];\n            hex = colors[colorIndex];\n            faceA.color.setHex(hex);\n            faceB.color.setHex(hex);\n          }\n\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 4; i++) {\n              colorIndex = faces[offset++];\n              hex = colors[colorIndex];\n              if (i !== 2) faceA.vertexColors.push(new THREE.Color(hex));\n              if (i !== 0) faceB.vertexColors.push(new THREE.Color(hex));\n            }\n          }\n\n          geometry.faces.push(faceA);\n          geometry.faces.push(faceB);\n        } else {\n          face = new THREE.Face3();\n          face.a = faces[offset++];\n          face.b = faces[offset++];\n          face.c = faces[offset++];\n\n          if (hasMaterial) {\n            materialIndex = faces[offset++];\n            face.materialIndex = materialIndex;\n          } // to get face <=> uv index correspondence\n\n\n          fi = geometry.faces.length;\n\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n\n              for (j = 0; j < 3; j++) {\n                uvIndex = faces[offset++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new THREE.Vector2(u, v);\n                geometry.faceVertexUvs[i][fi].push(uv);\n              }\n            }\n          }\n\n          if (hasFaceNormal) {\n            normalIndex = faces[offset++] * 3;\n            face.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n          }\n\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 3; i++) {\n              normalIndex = faces[offset++] * 3;\n              normal = new THREE.Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              face.vertexNormals.push(normal);\n            }\n          }\n\n          if (hasFaceColor) {\n            colorIndex = faces[offset++];\n            face.color.setHex(colors[colorIndex]);\n          }\n\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 3; i++) {\n              colorIndex = faces[offset++];\n              face.vertexColors.push(new THREE.Color(colors[colorIndex]));\n            }\n          }\n\n          geometry.faces.push(face);\n        }\n      }\n    }\n\n    function parseSkin() {\n      var influencesPerVertex = json.influencesPerVertex !== undefined ? json.influencesPerVertex : 2;\n\n      if (json.skinWeights) {\n        for (var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex) {\n          var x = json.skinWeights[i];\n          var y = influencesPerVertex > 1 ? json.skinWeights[i + 1] : 0;\n          var z = influencesPerVertex > 2 ? json.skinWeights[i + 2] : 0;\n          var w = influencesPerVertex > 3 ? json.skinWeights[i + 3] : 0;\n          geometry.skinWeights.push(new THREE.Vector4(x, y, z, w));\n        }\n      }\n\n      if (json.skinIndices) {\n        for (var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex) {\n          var a = json.skinIndices[i];\n          var b = influencesPerVertex > 1 ? json.skinIndices[i + 1] : 0;\n          var c = influencesPerVertex > 2 ? json.skinIndices[i + 2] : 0;\n          var d = influencesPerVertex > 3 ? json.skinIndices[i + 3] : 0;\n          geometry.skinIndices.push(new THREE.Vector4(a, b, c, d));\n        }\n      }\n\n      geometry.bones = json.bones;\n\n      if (geometry.bones && geometry.bones.length > 0 && (geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length)) {\n        console.warn('When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' + geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.');\n      }\n    }\n\n    function parseMorphing(scale) {\n      if (json.morphTargets !== undefined) {\n        for (var i = 0, l = json.morphTargets.length; i < l; i++) {\n          geometry.morphTargets[i] = {};\n          geometry.morphTargets[i].name = json.morphTargets[i].name;\n          geometry.morphTargets[i].vertices = [];\n          var dstVertices = geometry.morphTargets[i].vertices;\n          var srcVertices = json.morphTargets[i].vertices;\n\n          for (var v = 0, vl = srcVertices.length; v < vl; v += 3) {\n            var vertex = new THREE.Vector3();\n            vertex.x = srcVertices[v] * scale;\n            vertex.y = srcVertices[v + 1] * scale;\n            vertex.z = srcVertices[v + 2] * scale;\n            dstVertices.push(vertex);\n          }\n        }\n      }\n\n      if (json.morphColors !== undefined && json.morphColors.length > 0) {\n        console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');\n        var faces = geometry.faces;\n        var morphColors = json.morphColors[0].colors;\n\n        for (var i = 0, l = faces.length; i < l; i++) {\n          faces[i].color.fromArray(morphColors, i * 3);\n        }\n      }\n    }\n\n    function parseAnimations() {\n      var outputAnimations = []; // parse old style Bone/Hierarchy animations\n\n      var animations = [];\n\n      if (json.animation !== undefined) {\n        animations.push(json.animation);\n      }\n\n      if (json.animations !== undefined) {\n        if (json.animations.length) {\n          animations = animations.concat(json.animations);\n        } else {\n          animations.push(json.animations);\n        }\n      }\n\n      for (var i = 0; i < animations.length; i++) {\n        var clip = THREE.AnimationClip.parseAnimation(animations[i], geometry.bones);\n        if (clip) outputAnimations.push(clip);\n      } // parse implicit morph animations\n\n\n      if (geometry.morphTargets) {\n        // TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n        var morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences(geometry.morphTargets, 10);\n        outputAnimations = outputAnimations.concat(morphAnimationClips);\n      }\n\n      if (outputAnimations.length > 0) geometry.animations = outputAnimations;\n    }\n\n    if (json.materials === undefined || json.materials.length === 0) {\n      return {\n        geometry: geometry\n      };\n    } else {\n      var materials = THREE.Loader.prototype.initMaterials(json.materials, texturePath, this.crossOrigin);\n      return {\n        geometry: geometry,\n        materials: materials\n      };\n    }\n  }\n}; // File:src/loaders/LoadingManager.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.LoadingManager = function (onLoad, onProgress, onError) {\n  var scope = this;\n  var isLoading = false,\n      itemsLoaded = 0,\n      itemsTotal = 0;\n  this.onStart = undefined;\n  this.onLoad = onLoad;\n  this.onProgress = onProgress;\n  this.onError = onError;\n\n  this.itemStart = function (url) {\n    itemsTotal++;\n\n    if (isLoading === false) {\n      if (scope.onStart !== undefined) {\n        scope.onStart(url, itemsLoaded, itemsTotal);\n      }\n    }\n\n    isLoading = true;\n  };\n\n  this.itemEnd = function (url) {\n    itemsLoaded++;\n\n    if (scope.onProgress !== undefined) {\n      scope.onProgress(url, itemsLoaded, itemsTotal);\n    }\n\n    if (itemsLoaded === itemsTotal) {\n      isLoading = false;\n\n      if (scope.onLoad !== undefined) {\n        scope.onLoad();\n      }\n    }\n  };\n\n  this.itemError = function (url) {\n    if (scope.onError !== undefined) {\n      scope.onError(url);\n    }\n  };\n};\n\nTHREE.DefaultLoadingManager = new THREE.LoadingManager(); // File:src/loaders/BufferGeometryLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.BufferGeometryLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.BufferGeometryLoader.prototype = {\n  constructor: THREE.BufferGeometryLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  parse: function parse(json) {\n    var geometry = new THREE.BufferGeometry();\n    var index = json.data.index;\n    var TYPED_ARRAYS = {\n      'Int8Array': Int8Array,\n      'Uint8Array': Uint8Array,\n      'Uint8ClampedArray': Uint8ClampedArray,\n      'Int16Array': Int16Array,\n      'Uint16Array': Uint16Array,\n      'Int32Array': Int32Array,\n      'Uint32Array': Uint32Array,\n      'Float32Array': Float32Array,\n      'Float64Array': Float64Array\n    };\n\n    if (index !== undefined) {\n      var typedArray = new TYPED_ARRAYS[index.type](index.array);\n      geometry.setIndex(new THREE.BufferAttribute(typedArray, 1));\n    }\n\n    var attributes = json.data.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n      geometry.addAttribute(key, new THREE.BufferAttribute(typedArray, attribute.itemSize, attribute.normalized));\n    }\n\n    var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n    if (groups !== undefined) {\n      for (var i = 0, n = groups.length; i !== n; ++i) {\n        var group = groups[i];\n        geometry.addGroup(group.start, group.count, group.materialIndex);\n      }\n    }\n\n    var boundingSphere = json.data.boundingSphere;\n\n    if (boundingSphere !== undefined) {\n      var center = new THREE.Vector3();\n\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n\n      geometry.boundingSphere = new THREE.Sphere(center, boundingSphere.radius);\n    }\n\n    return geometry;\n  }\n}; // File:src/loaders/MaterialLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.MaterialLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  this.textures = {};\n};\n\nTHREE.MaterialLoader.prototype = {\n  constructor: THREE.MaterialLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  setTextures: function setTextures(value) {\n    this.textures = value;\n  },\n  getTexture: function getTexture(name) {\n    var textures = this.textures;\n\n    if (textures[name] === undefined) {\n      console.warn('THREE.MaterialLoader: Undefined texture', name);\n    }\n\n    return textures[name];\n  },\n  parse: function parse(json) {\n    var material = new THREE[json.type]();\n    if (json.uuid !== undefined) material.uuid = json.uuid;\n    if (json.name !== undefined) material.name = json.name;\n    if (json.color !== undefined) material.color.setHex(json.color);\n    if (json.roughness !== undefined) material.roughness = json.roughness;\n    if (json.metalness !== undefined) material.metalness = json.metalness;\n    if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined) material.specular.setHex(json.specular);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.uniforms !== undefined) material.uniforms = json.uniforms;\n    if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n    if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n    if (json.shading !== undefined) material.shading = json.shading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n    if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n    if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n    if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n    if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth; // for PointsMaterial\n\n    if (json.size !== undefined) material.size = json.size;\n    if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n    if (json.map !== undefined) material.map = this.getTexture(json.map);\n\n    if (json.alphaMap !== undefined) {\n      material.alphaMap = this.getTexture(json.alphaMap);\n      material.transparent = true;\n    }\n\n    if (json.bumpMap !== undefined) material.bumpMap = this.getTexture(json.bumpMap);\n    if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n    if (json.normalMap !== undefined) material.normalMap = this.getTexture(json.normalMap);\n\n    if (json.normalScale !== undefined) {\n      var normalScale = json.normalScale;\n\n      if (Array.isArray(normalScale) === false) {\n        // Blender exporter used to export a scalar. See #7459\n        normalScale = [normalScale, normalScale];\n      }\n\n      material.normalScale = new THREE.Vector2().fromArray(normalScale);\n    }\n\n    if (json.displacementMap !== undefined) material.displacementMap = this.getTexture(json.displacementMap);\n    if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n    if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n    if (json.roughnessMap !== undefined) material.roughnessMap = this.getTexture(json.roughnessMap);\n    if (json.metalnessMap !== undefined) material.metalnessMap = this.getTexture(json.metalnessMap);\n    if (json.emissiveMap !== undefined) material.emissiveMap = this.getTexture(json.emissiveMap);\n    if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n    if (json.specularMap !== undefined) material.specularMap = this.getTexture(json.specularMap);\n\n    if (json.envMap !== undefined) {\n      material.envMap = this.getTexture(json.envMap);\n      material.combine = THREE.MultiplyOperation;\n    }\n\n    if (json.reflectivity) material.reflectivity = json.reflectivity;\n    if (json.lightMap !== undefined) material.lightMap = this.getTexture(json.lightMap);\n    if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n    if (json.aoMap !== undefined) material.aoMap = this.getTexture(json.aoMap);\n    if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity; // MultiMaterial\n\n    if (json.materials !== undefined) {\n      for (var i = 0, l = json.materials.length; i < l; i++) {\n        material.materials.push(this.parse(json.materials[i]));\n      }\n    }\n\n    return material;\n  }\n}; // File:src/loaders/ObjectLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.ObjectLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  this.texturePath = '';\n};\n\nTHREE.ObjectLoader.prototype = {\n  constructor: THREE.ObjectLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    if (this.texturePath === '') {\n      this.texturePath = url.substring(0, url.lastIndexOf('/') + 1);\n    }\n\n    var scope = this;\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.load(url, function (text) {\n      scope.parse(JSON.parse(text), onLoad);\n    }, onProgress, onError);\n  },\n  setTexturePath: function setTexturePath(value) {\n    this.texturePath = value;\n  },\n  setCrossOrigin: function setCrossOrigin(value) {\n    this.crossOrigin = value;\n  },\n  parse: function parse(json, onLoad) {\n    var geometries = this.parseGeometries(json.geometries);\n    var images = this.parseImages(json.images, function () {\n      if (onLoad !== undefined) onLoad(object);\n    });\n    var textures = this.parseTextures(json.textures, images);\n    var materials = this.parseMaterials(json.materials, textures);\n    var object = this.parseObject(json.object, geometries, materials);\n\n    if (json.animations) {\n      object.animations = this.parseAnimations(json.animations);\n    }\n\n    if (json.images === undefined || json.images.length === 0) {\n      if (onLoad !== undefined) onLoad(object);\n    }\n\n    return object;\n  },\n  parseGeometries: function parseGeometries(json) {\n    var geometries = {};\n\n    if (json !== undefined) {\n      var geometryLoader = new THREE.JSONLoader();\n      var bufferGeometryLoader = new THREE.BufferGeometryLoader();\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var geometry;\n        var data = json[i];\n\n        switch (data.type) {\n          case 'PlaneGeometry':\n          case 'PlaneBufferGeometry':\n            geometry = new THREE[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n            break;\n\n          case 'BoxGeometry':\n          case 'BoxBufferGeometry':\n          case 'CubeGeometry':\n            // backwards compatible\n            geometry = new THREE[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n            break;\n\n          case 'CircleGeometry':\n          case 'CircleBufferGeometry':\n            geometry = new THREE[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'CylinderGeometry':\n          case 'CylinderBufferGeometry':\n            geometry = new THREE[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'ConeGeometry':\n          case 'ConeBufferGeometry':\n            geometry = new THREE[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'SphereGeometry':\n          case 'SphereBufferGeometry':\n            geometry = new THREE[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'DodecahedronGeometry':\n          case 'IcosahedronGeometry':\n          case 'OctahedronGeometry':\n          case 'TetrahedronGeometry':\n            geometry = new THREE[data.type](data.radius, data.detail);\n            break;\n\n          case 'RingGeometry':\n          case 'RingBufferGeometry':\n            geometry = new THREE[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'TorusGeometry':\n          case 'TorusBufferGeometry':\n            geometry = new THREE[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n            break;\n\n          case 'TorusKnotGeometry':\n          case 'TorusKnotBufferGeometry':\n            geometry = new THREE[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n            break;\n\n          case 'LatheGeometry':\n          case 'LatheBufferGeometry':\n            geometry = new THREE[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n            break;\n\n          case 'BufferGeometry':\n            geometry = bufferGeometryLoader.parse(data);\n            break;\n\n          case 'Geometry':\n            geometry = geometryLoader.parse(data.data, this.texturePath).geometry;\n            break;\n\n          default:\n            console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n            continue;\n        }\n\n        geometry.uuid = data.uuid;\n        if (data.name !== undefined) geometry.name = data.name;\n        geometries[data.uuid] = geometry;\n      }\n    }\n\n    return geometries;\n  },\n  parseMaterials: function parseMaterials(json, textures) {\n    var materials = {};\n\n    if (json !== undefined) {\n      var loader = new THREE.MaterialLoader();\n      loader.setTextures(textures);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var material = loader.parse(json[i]);\n        materials[material.uuid] = material;\n      }\n    }\n\n    return materials;\n  },\n  parseAnimations: function parseAnimations(json) {\n    var animations = [];\n\n    for (var i = 0; i < json.length; i++) {\n      var clip = THREE.AnimationClip.parse(json[i]);\n      animations.push(clip);\n    }\n\n    return animations;\n  },\n  parseImages: function parseImages(json, onLoad) {\n    var scope = this;\n    var images = {};\n\n    function loadImage(url) {\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      });\n    }\n\n    if (json !== undefined && json.length > 0) {\n      var manager = new THREE.LoadingManager(onLoad);\n      var loader = new THREE.ImageLoader(manager);\n      loader.setCrossOrigin(this.crossOrigin);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var image = json[i];\n        var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.texturePath + image.url;\n        images[image.uuid] = loadImage(path);\n      }\n    }\n\n    return images;\n  },\n  parseTextures: function parseTextures(json, images) {\n    function parseConstant(value) {\n      if (typeof value === 'number') return value;\n      console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n      return THREE[value];\n    }\n\n    var textures = {};\n\n    if (json !== undefined) {\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.image === undefined) {\n          console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n        }\n\n        if (images[data.image] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined image', data.image);\n        }\n\n        var texture = new THREE.Texture(images[data.image]);\n        texture.needsUpdate = true;\n        texture.uuid = data.uuid;\n        if (data.name !== undefined) texture.name = data.name;\n        if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping);\n        if (data.offset !== undefined) texture.offset = new THREE.Vector2(data.offset[0], data.offset[1]);\n        if (data.repeat !== undefined) texture.repeat = new THREE.Vector2(data.repeat[0], data.repeat[1]);\n        if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter);\n        if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter);\n        if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\n        if (Array.isArray(data.wrap)) {\n          texture.wrapS = parseConstant(data.wrap[0]);\n          texture.wrapT = parseConstant(data.wrap[1]);\n        }\n\n        textures[data.uuid] = texture;\n      }\n    }\n\n    return textures;\n  },\n  parseObject: function () {\n    var matrix = new THREE.Matrix4();\n    return function (data, geometries, materials) {\n      var object;\n\n      function getGeometry(name) {\n        if (geometries[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\n        }\n\n        return geometries[name];\n      }\n\n      function getMaterial(name) {\n        if (name === undefined) return undefined;\n\n        if (materials[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined material', name);\n        }\n\n        return materials[name];\n      }\n\n      switch (data.type) {\n        case 'Scene':\n          object = new THREE.Scene();\n          break;\n\n        case 'PerspectiveCamera':\n          object = new THREE.PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n          if (data.focus !== undefined) object.focus = data.focus;\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n          if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'OrthographicCamera':\n          object = new THREE.OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n          break;\n\n        case 'AmbientLight':\n          object = new THREE.AmbientLight(data.color, data.intensity);\n          break;\n\n        case 'DirectionalLight':\n          object = new THREE.DirectionalLight(data.color, data.intensity);\n          break;\n\n        case 'PointLight':\n          object = new THREE.PointLight(data.color, data.intensity, data.distance, data.decay);\n          break;\n\n        case 'SpotLight':\n          object = new THREE.SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n          break;\n\n        case 'HemisphereLight':\n          object = new THREE.HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n\n        case 'Mesh':\n          var geometry = getGeometry(data.geometry);\n          var material = getMaterial(data.material);\n\n          if (geometry.bones && geometry.bones.length > 0) {\n            object = new THREE.SkinnedMesh(geometry, material);\n          } else {\n            object = new THREE.Mesh(geometry, material);\n          }\n\n          break;\n\n        case 'LOD':\n          object = new THREE.LOD();\n          break;\n\n        case 'Line':\n          object = new THREE.Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n          break;\n\n        case 'PointCloud':\n        case 'Points':\n          object = new THREE.Points(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'Sprite':\n          object = new THREE.Sprite(getMaterial(data.material));\n          break;\n\n        case 'Group':\n          object = new THREE.Group();\n          break;\n\n        default:\n          object = new THREE.Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        matrix.fromArray(data.matrix);\n        matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.userData !== undefined) object.userData = data.userData;\n\n      if (data.children !== undefined) {\n        for (var child in data.children) {\n          object.add(this.parseObject(data.children[child], geometries, materials));\n        }\n      }\n\n      if (data.type === 'LOD') {\n        var levels = data.levels;\n\n        for (var l = 0; l < levels.length; l++) {\n          var level = levels[l];\n          var child = object.getObjectByProperty('uuid', level.object);\n\n          if (child !== undefined) {\n            object.addLevel(child, level.distance);\n          }\n        }\n      }\n\n      return object;\n    };\n  }()\n}; // File:src/loaders/TextureLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.TextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.TextureLoader.prototype = {\n  constructor: THREE.TextureLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var texture = new THREE.Texture();\n    var loader = new THREE.ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    loader.load(url, function (image) {\n      texture.image = image;\n      texture.needsUpdate = true;\n\n      if (onLoad !== undefined) {\n        onLoad(texture);\n      }\n    }, onProgress, onError);\n    return texture;\n  },\n  setCrossOrigin: function setCrossOrigin(value) {\n    this.crossOrigin = value;\n  },\n  setPath: function setPath(value) {\n    this.path = value;\n  }\n}; // File:src/loaders/CubeTextureLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.CubeTextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.CubeTextureLoader.prototype = {\n  constructor: THREE.CubeTextureLoader,\n  load: function load(urls, onLoad, onProgress, onError) {\n    var texture = new THREE.CubeTexture();\n    var loader = new THREE.ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    var loaded = 0;\n\n    function loadTexture(i) {\n      loader.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n\n    for (var i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n\n    return texture;\n  },\n  setCrossOrigin: function setCrossOrigin(value) {\n    this.crossOrigin = value;\n  },\n  setPath: function setPath(value) {\n    this.path = value;\n  }\n}; // File:src/loaders/BinaryTextureLoader.js\n\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\n\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager; // override in sub classes\n\n  this._parser = null;\n};\n\nTHREE.BinaryTextureLoader.prototype = {\n  constructor: THREE.BinaryTextureLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var texture = new THREE.DataTexture();\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (buffer) {\n      var texData = scope._parser(buffer);\n\n      if (!texData) return;\n\n      if (undefined !== texData.image) {\n        texture.image = texData.image;\n      } else if (undefined !== texData.data) {\n        texture.image.width = texData.width;\n        texture.image.height = texData.height;\n        texture.image.data = texData.data;\n      }\n\n      texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\n      texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\n      texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\n      texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\n      texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n      if (undefined !== texData.format) {\n        texture.format = texData.format;\n      }\n\n      if (undefined !== texData.type) {\n        texture.type = texData.type;\n      }\n\n      if (undefined !== texData.mipmaps) {\n        texture.mipmaps = texData.mipmaps;\n      }\n\n      if (1 === texData.mipmapCount) {\n        texture.minFilter = THREE.LinearFilter;\n      }\n\n      texture.needsUpdate = true;\n      if (onLoad) onLoad(texture, texData);\n    }, onProgress, onError);\n    return texture;\n  }\n}; // File:src/loaders/CompressedTextureLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\n\nTHREE.CompressedTextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager; // override in sub classes\n\n  this._parser = null;\n};\n\nTHREE.CompressedTextureLoader.prototype = {\n  constructor: THREE.CompressedTextureLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var images = [];\n    var texture = new THREE.CompressedTexture();\n    texture.image = images;\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n\n    function loadTexture(i) {\n      loader.load(url[i], function (buffer) {\n        var texDatas = scope._parser(buffer, true);\n\n        images[i] = {\n          width: texDatas.width,\n          height: texDatas.height,\n          format: texDatas.format,\n          mipmaps: texDatas.mipmaps\n        };\n        loaded += 1;\n\n        if (loaded === 6) {\n          if (texDatas.mipmapCount === 1) texture.minFilter = THREE.LinearFilter;\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, onProgress, onError);\n    }\n\n    if (Array.isArray(url)) {\n      var loaded = 0;\n\n      for (var i = 0, il = url.length; i < il; ++i) {\n        loadTexture(i);\n      }\n    } else {\n      // compressed cubemap texture stored in a single DDS file\n      loader.load(url, function (buffer) {\n        var texDatas = scope._parser(buffer, true);\n\n        if (texDatas.isCubemap) {\n          var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n          for (var f = 0; f < faces; f++) {\n            images[f] = {\n              mipmaps: []\n            };\n\n            for (var i = 0; i < texDatas.mipmapCount; i++) {\n              images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n              images[f].format = texDatas.format;\n              images[f].width = texDatas.width;\n              images[f].height = texDatas.height;\n            }\n          }\n        } else {\n          texture.image.width = texDatas.width;\n          texture.image.height = texDatas.height;\n          texture.mipmaps = texDatas.mipmaps;\n        }\n\n        if (texDatas.mipmapCount === 1) {\n          texture.minFilter = THREE.LinearFilter;\n        }\n\n        texture.format = texDatas.format;\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture);\n      }, onProgress, onError);\n    }\n\n    return texture;\n  },\n  setPath: function setPath(value) {\n    this.path = value;\n  }\n}; // File:src/materials/Material.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Material = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.MaterialIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Material';\n  this.fog = true;\n  this.lights = true;\n  this.blending = THREE.NormalBlending;\n  this.side = THREE.FrontSide;\n  this.shading = THREE.SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\n  this.vertexColors = THREE.NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n  this.opacity = 1;\n  this.transparent = false;\n  this.blendSrc = THREE.SrcAlphaFactor;\n  this.blendDst = THREE.OneMinusSrcAlphaFactor;\n  this.blendEquation = THREE.AddEquation;\n  this.blendSrcAlpha = null;\n  this.blendDstAlpha = null;\n  this.blendEquationAlpha = null;\n  this.depthFunc = THREE.LessEqualDepth;\n  this.depthTest = true;\n  this.depthWrite = true;\n  this.clippingPlanes = null;\n  this.clipShadows = false;\n  this.colorWrite = true;\n  this.precision = null; // override the renderer's default precision for this material\n\n  this.polygonOffset = false;\n  this.polygonOffsetFactor = 0;\n  this.polygonOffsetUnits = 0;\n  this.alphaTest = 0;\n  this.premultipliedAlpha = false;\n  this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n  this.visible = true;\n  this._needsUpdate = true;\n};\n\nTHREE.Material.prototype = {\n  constructor: THREE.Material,\n\n  get needsUpdate() {\n    return this._needsUpdate;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.update();\n    this._needsUpdate = value;\n  },\n\n  setValues: function setValues(values) {\n    if (values === undefined) return;\n\n    for (var key in values) {\n      var newValue = values[key];\n\n      if (newValue === undefined) {\n        console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n        continue;\n      }\n\n      var currentValue = this[key];\n\n      if (currentValue === undefined) {\n        console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n        continue;\n      }\n\n      if (currentValue instanceof THREE.Color) {\n        currentValue.set(newValue);\n      } else if (currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3) {\n        currentValue.copy(newValue);\n      } else if (key === 'overdraw') {\n        // ensure overdraw is backwards-compatible with legacy boolean type\n        this[key] = Number(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  },\n  toJSON: function toJSON(meta) {\n    var isRoot = meta === undefined;\n\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    }; // standard Material serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color instanceof THREE.Color) data.color = this.color.getHex();\n    if (this.roughness !== 0.5) data.roughness = this.roughness;\n    if (this.metalness !== 0.5) data.metalness = this.metalness;\n    if (this.emissive instanceof THREE.Color) data.emissive = this.emissive.getHex();\n    if (this.specular instanceof THREE.Color) data.specular = this.specular.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.map instanceof THREE.Texture) data.map = this.map.toJSON(meta).uuid;\n    if (this.alphaMap instanceof THREE.Texture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n    if (this.lightMap instanceof THREE.Texture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n    if (this.bumpMap instanceof THREE.Texture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap instanceof THREE.Texture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalScale = this.normalScale.toArray();\n    }\n\n    if (this.displacementMap instanceof THREE.Texture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.roughnessMap instanceof THREE.Texture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap instanceof THREE.Texture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap instanceof THREE.Texture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap instanceof THREE.Texture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n    if (this.envMap instanceof THREE.Texture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      data.reflectivity = this.reflectivity; // Scale behind envMap\n    }\n\n    if (this.size !== undefined) data.size = this.size;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== THREE.NormalBlending) data.blending = this.blending;\n    if (this.shading !== THREE.SmoothShading) data.shading = this.shading;\n    if (this.side !== THREE.FrontSide) data.side = this.side;\n    if (this.vertexColors !== THREE.NoColors) data.vertexColors = this.vertexColors;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth; // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n\n    if (isRoot) {\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n\n    return data;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(source) {\n    this.name = source.name;\n    this.fog = source.fog;\n    this.lights = source.lights;\n    this.blending = source.blending;\n    this.side = source.side;\n    this.vertexColors = source.vertexColors;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.alphaTest = source.alphaTest;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.overdraw = source.overdraw;\n    this.visible = source.visible;\n    this.clipShadows = source.clipShadows;\n    var srcPlanes = source.clippingPlanes,\n        dstPlanes = null;\n\n    if (srcPlanes !== null) {\n      var n = srcPlanes.length;\n      dstPlanes = new Array(n);\n\n      for (var i = 0; i !== n; ++i) {\n        dstPlanes[i] = srcPlanes[i].clone();\n      }\n    }\n\n    this.clippingPlanes = dstPlanes;\n    return this;\n  },\n  update: function update() {\n    this.dispatchEvent({\n      type: 'update'\n    });\n  },\n  dispose: function dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nObject.assign(THREE.Material.prototype, THREE.EventDispatcher.prototype);\nTHREE.MaterialIdCount = 0; // File:src/materials/LineBasicMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\"\r\n * }\r\n */\n\nTHREE.LineBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineBasicMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.linecap = 'round';\n  this.linejoin = 'round';\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\n\nTHREE.LineBasicMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.linecap = source.linecap;\n  this.linejoin = source.linejoin;\n  return this;\n}; // File:src/materials/LineDashedMaterial.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>\r\n * }\r\n */\n\n\nTHREE.LineDashedMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineDashedMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.scale = 1;\n  this.dashSize = 3;\n  this.gapSize = 1;\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\n\nTHREE.LineDashedMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.scale = source.scale;\n  this.dashSize = source.dashSize;\n  this.gapSize = source.gapSize;\n  return this;\n}; // File:src/materials/MeshBasicMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshBasicMaterial';\n  this.color = new THREE.Color(0xffffff); // emissive\n\n  this.map = null;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\n\nTHREE.MeshBasicMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  return this;\n}; // File:src/materials/MeshDepthMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / https://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\n\n\nTHREE.MeshDepthMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshDepthMaterial';\n  this.depthPacking = THREE.BasicDepthPacking;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.map = null;\n  this.alphaMap = null;\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false;\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\n\nTHREE.MeshDepthMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.depthPacking = source.depthPacking;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.map = source.map;\n  this.alphaMap = source.alphaMap;\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n}; // File:src/materials/MeshLambertMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshLambertMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshLambertMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\n\nTHREE.MeshLambertMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshNormalMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\n\n\nTHREE.MeshNormalMaterial = function (parameters) {\n  THREE.Material.call(this, parameters);\n  this.type = 'MeshNormalMaterial';\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false;\n  this.lights = false;\n  this.morphTargets = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\n\nTHREE.MeshNormalMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n}; // File:src/materials/MeshPhongMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshPhongMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshPhongMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.specular = new THREE.Color(0x111111);\n  this.shininess = 30;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\n\nTHREE.MeshPhongMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.specular.copy(source.specular);\n  this.shininess = source.shininess;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshStandardMaterial.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  roughness: <float>,\r\n *  metalness: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  roughnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  metalnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n *  envMapIntensity: <float>\r\n *\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshStandardMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.defines = {\n    'STANDARD': ''\n  };\n  this.type = 'MeshStandardMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.roughness = 0.5;\n  this.metalness = 0.5;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.roughnessMap = null;\n  this.metalnessMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.envMapIntensity = 1.0;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshStandardMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\n\nTHREE.MeshStandardMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.defines = {\n    'STANDARD': ''\n  };\n  this.color.copy(source.color);\n  this.roughness = source.roughness;\n  this.metalness = source.metalness;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.roughnessMap = source.roughnessMap;\n  this.metalnessMap = source.metalnessMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.envMapIntensity = source.envMapIntensity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshPhysicalMaterial.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *  reflectivity: <float>\r\n * }\r\n */\n\n\nTHREE.MeshPhysicalMaterial = function (parameters) {\n  THREE.MeshStandardMaterial.call(this);\n  this.defines = {\n    'PHYSICAL': ''\n  };\n  this.type = 'MeshPhysicalMaterial';\n  this.reflectivity = 0.5; // maps to F0 = 0.04\n\n  this.setValues(parameters);\n};\n\nTHREE.MeshPhysicalMaterial.prototype = Object.create(THREE.MeshStandardMaterial.prototype);\nTHREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial;\n\nTHREE.MeshPhysicalMaterial.prototype.copy = function (source) {\n  THREE.MeshStandardMaterial.prototype.copy.call(this, source);\n  this.defines = {\n    'PHYSICAL': ''\n  };\n  this.reflectivity = source.reflectivity;\n  return this;\n}; // File:src/materials/MultiMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.MultiMaterial = function (materials) {\n  this.uuid = THREE.Math.generateUUID();\n  this.type = 'MultiMaterial';\n  this.materials = materials instanceof Array ? materials : [];\n  this.visible = true;\n};\n\nTHREE.MultiMaterial.prototype = {\n  constructor: THREE.MultiMaterial,\n  toJSON: function toJSON(meta) {\n    var output = {\n      metadata: {\n        version: 4.2,\n        type: 'material',\n        generator: 'MaterialExporter'\n      },\n      uuid: this.uuid,\n      type: this.type,\n      materials: []\n    };\n    var materials = this.materials;\n\n    for (var i = 0, l = materials.length; i < l; i++) {\n      var material = materials[i].toJSON(meta);\n      delete material.metadata;\n      output.materials.push(material);\n    }\n\n    output.visible = this.visible;\n    return output;\n  },\n  clone: function clone() {\n    var material = new this.constructor();\n\n    for (var i = 0; i < this.materials.length; i++) {\n      material.materials.push(this.materials[i].clone());\n    }\n\n    material.visible = this.visible;\n    return material;\n  }\n}; // File:src/materials/PointsMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>\r\n * }\r\n */\n\nTHREE.PointsMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'PointsMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.map = null;\n  this.size = 1;\n  this.sizeAttenuation = true;\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.PointsMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\n\nTHREE.PointsMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.size = source.size;\n  this.sizeAttenuation = source.sizeAttenuation;\n  return this;\n}; // File:src/materials/ShaderMaterial.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"1f\", value: 1.0 }, \"parameter2\": { type: \"1i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\n\n\nTHREE.ShaderMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'ShaderMaterial';\n  this.defines = {};\n  this.uniforms = {};\n  this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n  this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n  this.linewidth = 1;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false; // set to use scene fog\n\n  this.lights = false; // set to use scene lights\n\n  this.clipping = false; // set to use user-defined clipping planes\n\n  this.skinning = false; // set to use skinning attribute streams\n\n  this.morphTargets = false; // set to use morph targets\n\n  this.morphNormals = false; // set to use morph normals\n\n  this.extensions = {\n    derivatives: false,\n    // set to use derivatives\n    fragDepth: false,\n    // set to use fragment depth values\n    drawBuffers: false,\n    // set to use draw buffers\n    shaderTextureLOD: false // set to use shader texture LOD\n\n  }; // When rendered geometry doesn't include these attributes but the material does,\n  // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n  this.defaultAttributeValues = {\n    'color': [1, 1, 1],\n    'uv': [0, 0],\n    'uv2': [0, 0]\n  };\n  this.index0AttributeName = undefined;\n\n  if (parameters !== undefined) {\n    if (parameters.attributes !== undefined) {\n      console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n    }\n\n    this.setValues(parameters);\n  }\n};\n\nTHREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\n\nTHREE.ShaderMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.fragmentShader = source.fragmentShader;\n  this.vertexShader = source.vertexShader;\n  this.uniforms = THREE.UniformsUtils.clone(source.uniforms);\n  this.defines = source.defines;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.lights = source.lights;\n  this.clipping = source.clipping;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  this.extensions = source.extensions;\n  return this;\n};\n\nTHREE.ShaderMaterial.prototype.toJSON = function (meta) {\n  var data = THREE.Material.prototype.toJSON.call(this, meta);\n  data.uniforms = this.uniforms;\n  data.vertexShader = this.vertexShader;\n  data.fragmentShader = this.fragmentShader;\n  return data;\n}; // File:src/materials/RawShaderMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.RawShaderMaterial = function (parameters) {\n  THREE.ShaderMaterial.call(this, parameters);\n  this.type = 'RawShaderMaterial';\n};\n\nTHREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial; // File:src/materials/SpriteMaterial.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2()\r\n * }\r\n */\n\nTHREE.SpriteMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'SpriteMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.map = null;\n  this.rotation = 0;\n  this.fog = false;\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\n\nTHREE.SpriteMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.rotation = source.rotation;\n  return this;\n}; // File:src/materials/ShadowMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.ShadowMaterial = function () {\n  THREE.ShaderMaterial.call(this, {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"lights\"], {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['shadow_vert'],\n    fragmentShader: THREE.ShaderChunk['shadow_frag']\n  });\n  this.lights = true;\n  this.transparent = true;\n  Object.defineProperties(this, {\n    opacity: {\n      enumerable: true,\n      get: function get() {\n        return this.uniforms.opacity.value;\n      },\n      set: function set(value) {\n        this.uniforms.opacity.value = value;\n      }\n    }\n  });\n};\n\nTHREE.ShadowMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\nTHREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial; // File:src/textures/Texture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\n\nTHREE.Texture = function (image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n  Object.defineProperty(this, 'id', {\n    value: THREE.TextureIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.sourceFile = '';\n  this.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n  this.mipmaps = [];\n  this.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n  this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n  this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n  this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n  this.format = format !== undefined ? format : THREE.RGBAFormat;\n  this.type = type !== undefined ? type : THREE.UnsignedByteType;\n  this.offset = new THREE.Vector2(0, 0);\n  this.repeat = new THREE.Vector2(1, 1);\n  this.generateMipmaps = true;\n  this.premultiplyAlpha = false;\n  this.flipY = true;\n  this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n  // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n  //\n  // Also changing the encoding after already used by a Material will not automatically make the Material\n  // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n  this.encoding = encoding !== undefined ? encoding : THREE.LinearEncoding;\n  this.version = 0;\n  this.onUpdate = null;\n};\n\nTHREE.Texture.DEFAULT_IMAGE = undefined;\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\nTHREE.Texture.prototype = {\n  constructor: THREE.Texture,\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(source) {\n    this.image = source.image;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.encoding = source.encoding;\n    return this;\n  },\n  toJSON: function toJSON(meta) {\n    if (meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n\n    function getDataURL(image) {\n      var canvas;\n\n      if (image.toDataURL !== undefined) {\n        canvas = image;\n      } else {\n        canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        canvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height);\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n\n    var output = {\n      metadata: {\n        version: 4.4,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      mapping: this.mapping,\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      wrap: [this.wrapS, this.wrapT],\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy\n    };\n\n    if (this.image !== undefined) {\n      // TODO: Move to THREE.Image\n      var image = this.image;\n\n      if (image.uuid === undefined) {\n        image.uuid = THREE.Math.generateUUID(); // UGH\n      }\n\n      if (meta.images[image.uuid] === undefined) {\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: getDataURL(image)\n        };\n      }\n\n      output.image = image.uuid;\n    }\n\n    meta.textures[this.uuid] = output;\n    return output;\n  },\n  dispose: function dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  },\n  transformUv: function transformUv(uv) {\n    if (this.mapping !== THREE.UVMapping) return;\n    uv.multiply(this.repeat);\n    uv.add(this.offset);\n\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case THREE.RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n\n        case THREE.ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n\n        case THREE.MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n\n          break;\n      }\n    }\n\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case THREE.RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n\n        case THREE.ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n\n        case THREE.MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n\n          break;\n      }\n    }\n\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n  }\n};\nObject.assign(THREE.Texture.prototype, THREE.EventDispatcher.prototype);\nTHREE.TextureIdCount = 0; // File:src/textures/DepthTexture.js\n\n/**\r\n * @author Matt DesLauriers / @mattdesl\r\n */\n\nTHREE.DepthTexture = function (width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, THREE.DepthFormat, type, anisotropy);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.type = type !== undefined ? type : THREE.UnsignedShortType;\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n  this.flipY = false;\n  this.generateMipmaps = false;\n};\n\nTHREE.DepthTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.DepthTexture.prototype.constructor = THREE.DepthTexture; // File:src/textures/CanvasTexture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.CanvasTexture = function (canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  THREE.Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.needsUpdate = true;\n};\n\nTHREE.CanvasTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture; // File:src/textures/CubeTexture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.CubeTexture = function (images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n  images = images !== undefined ? images : [];\n  mapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\n  THREE.Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.flipY = false;\n};\n\nTHREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\nObject.defineProperty(THREE.CubeTexture.prototype, 'images', {\n  get: function get() {\n    return this.image;\n  },\n  set: function set(value) {\n    this.image = value;\n  }\n}); // File:src/textures/CompressedTexture.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.CompressedTexture = function (mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.mipmaps = mipmaps; // no flipping for cube textures\n  // (also flipping doesn't work for compressed textures )\n\n  this.flipY = false; // can't generate mipmaps for compressed textures\n  // mips must be embedded in DDS files\n\n  this.generateMipmaps = false;\n};\n\nTHREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture; // File:src/textures/DataTexture.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.DataTexture = function (data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.image = {\n    data: data,\n    width: width,\n    height: height\n  };\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n  this.flipY = false;\n  this.generateMipmaps = false;\n};\n\nTHREE.DataTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture; // File:src/textures/VideoTexture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.VideoTexture = function (video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  THREE.Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.generateMipmaps = false;\n  var scope = this;\n\n  function update() {\n    requestAnimationFrame(update);\n\n    if (video.readyState >= video.HAVE_CURRENT_DATA) {\n      scope.needsUpdate = true;\n    }\n  }\n\n  update();\n};\n\nTHREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture; // File:src/objects/Group.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Group = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Group';\n};\n\nTHREE.Group.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Group\n}); // File:src/objects/Points.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Points = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Points';\n  this.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n  this.material = material !== undefined ? material : new THREE.PointsMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nTHREE.Points.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Points,\n  raycast: function () {\n    var inverseMatrix = new THREE.Matrix4();\n    var ray = new THREE.Ray();\n    var sphere = new THREE.Sphere();\n    return function raycast(raycaster, intersects) {\n      var object = this;\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld;\n      var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      var localThresholdSq = localThreshold * localThreshold;\n      var position = new THREE.Vector3();\n\n      function testPoint(point, index) {\n        var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n        if (rayPointDistanceSq < localThresholdSq) {\n          var intersectPoint = ray.closestPointToPoint(point);\n          intersectPoint.applyMatrix4(matrixWorld);\n          var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n          if (distance < raycaster.near || distance > raycaster.far) return;\n          intersects.push({\n            distance: distance,\n            distanceToRay: Math.sqrt(rayPointDistanceSq),\n            point: intersectPoint.clone(),\n            index: index,\n            face: null,\n            object: object\n          });\n        }\n      }\n\n      if (geometry instanceof THREE.BufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, il = indices.length; i < il; i++) {\n            var a = indices[i];\n            position.fromArray(positions, a * 3);\n            testPoint(position, a);\n          }\n        } else {\n          for (var i = 0, l = positions.length / 3; i < l; i++) {\n            position.fromArray(positions, i * 3);\n            testPoint(position, i);\n          }\n        }\n      } else {\n        var vertices = geometry.vertices;\n\n        for (var i = 0, l = vertices.length; i < l; i++) {\n          testPoint(vertices[i], i);\n        }\n      }\n    };\n  }(),\n  clone: function clone() {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n}); // File:src/objects/Line.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Line = function (geometry, material, mode) {\n  if (mode === 1) {\n    console.warn('THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.');\n    return new THREE.LineSegments(geometry, material);\n  }\n\n  THREE.Object3D.call(this);\n  this.type = 'Line';\n  this.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n  this.material = material !== undefined ? material : new THREE.LineBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nTHREE.Line.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Line,\n  raycast: function () {\n    var inverseMatrix = new THREE.Matrix4();\n    var ray = new THREE.Ray();\n    var sphere = new THREE.Sphere();\n    return function raycast(raycaster, intersects) {\n      var precision = raycaster.linePrecision;\n      var precisionSq = precision * precision;\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      var vStart = new THREE.Vector3();\n      var vEnd = new THREE.Vector3();\n      var interSegment = new THREE.Vector3();\n      var interRay = new THREE.Vector3();\n      var step = this instanceof THREE.LineSegments ? 2 : 1;\n\n      if (geometry instanceof THREE.BufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, l = indices.length - 1; i < l; i += step) {\n            var a = indices[i];\n            var b = indices[i + 1];\n            vStart.fromArray(positions, a * 3);\n            vEnd.fromArray(positions, b * 3);\n            var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        } else {\n          for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n            vStart.fromArray(positions, 3 * i);\n            vEnd.fromArray(positions, 3 * i + 3);\n            var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      } else if (geometry instanceof THREE.Geometry) {\n        var vertices = geometry.vertices;\n        var nbVertices = vertices.length;\n\n        for (var i = 0; i < nbVertices - 1; i += step) {\n          var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n    };\n  }(),\n  clone: function clone() {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n}); // File:src/objects/LineSegments.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.LineSegments = function (geometry, material) {\n  THREE.Line.call(this, geometry, material);\n  this.type = 'LineSegments';\n};\n\nTHREE.LineSegments.prototype = Object.assign(Object.create(THREE.Line.prototype), {\n  constructor: THREE.LineSegments\n}); // File:src/objects/Mesh.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\n\nTHREE.Mesh = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Mesh';\n  this.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n  this.material = material !== undefined ? material : new THREE.MeshBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n  this.drawMode = THREE.TrianglesDrawMode;\n  this.updateMorphTargets();\n};\n\nTHREE.Mesh.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Mesh,\n  setDrawMode: function setDrawMode(value) {\n    this.drawMode = value;\n  },\n  updateMorphTargets: function updateMorphTargets() {\n    if (this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0) {\n      this.morphTargetBase = -1;\n      this.morphTargetInfluences = [];\n      this.morphTargetDictionary = {};\n\n      for (var m = 0, ml = this.geometry.morphTargets.length; m < ml; m++) {\n        this.morphTargetInfluences.push(0);\n        this.morphTargetDictionary[this.geometry.morphTargets[m].name] = m;\n      }\n    }\n  },\n  getMorphTargetIndexByName: function getMorphTargetIndexByName(name) {\n    if (this.morphTargetDictionary[name] !== undefined) {\n      return this.morphTargetDictionary[name];\n    }\n\n    console.warn('THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.');\n    return 0;\n  },\n  raycast: function () {\n    var inverseMatrix = new THREE.Matrix4();\n    var ray = new THREE.Ray();\n    var sphere = new THREE.Sphere();\n    var vA = new THREE.Vector3();\n    var vB = new THREE.Vector3();\n    var vC = new THREE.Vector3();\n    var tempA = new THREE.Vector3();\n    var tempB = new THREE.Vector3();\n    var tempC = new THREE.Vector3();\n    var uvA = new THREE.Vector2();\n    var uvB = new THREE.Vector2();\n    var uvC = new THREE.Vector2();\n    var barycoord = new THREE.Vector3();\n    var intersectionPoint = new THREE.Vector3();\n    var intersectionPointWorld = new THREE.Vector3();\n\n    function uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n      THREE.Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n      uv1.multiplyScalar(barycoord.x);\n      uv2.multiplyScalar(barycoord.y);\n      uv3.multiplyScalar(barycoord.z);\n      uv1.add(uv2).add(uv3);\n      return uv1.clone();\n    }\n\n    function checkIntersection(object, raycaster, ray, pA, pB, pC, point) {\n      var intersect;\n      var material = object.material;\n\n      if (material.side === THREE.BackSide) {\n        intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n      } else {\n        intersect = ray.intersectTriangle(pA, pB, pC, material.side !== THREE.DoubleSide, point);\n      }\n\n      if (intersect === null) return null;\n      intersectionPointWorld.copy(point);\n      intersectionPointWorld.applyMatrix4(object.matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n      if (distance < raycaster.near || distance > raycaster.far) return null;\n      return {\n        distance: distance,\n        point: intersectionPointWorld.clone(),\n        object: object\n      };\n    }\n\n    function checkBufferGeometryIntersection(object, raycaster, ray, positions, uvs, a, b, c) {\n      vA.fromArray(positions, a * 3);\n      vB.fromArray(positions, b * 3);\n      vC.fromArray(positions, c * 3);\n      var intersection = checkIntersection(object, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n      if (intersection) {\n        if (uvs) {\n          uvA.fromArray(uvs, a * 2);\n          uvB.fromArray(uvs, b * 2);\n          uvC.fromArray(uvs, c * 2);\n          intersection.uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n        }\n\n        intersection.face = new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC));\n        intersection.faceIndex = a;\n      }\n\n      return intersection;\n    }\n\n    return function raycast(raycaster, intersects) {\n      var geometry = this.geometry;\n      var material = this.material;\n      var matrixWorld = this.matrixWorld;\n      if (material === undefined) return; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n      if (geometry.boundingBox !== null) {\n        if (ray.intersectsBox(geometry.boundingBox) === false) return;\n      }\n\n      var uvs, intersection;\n\n      if (geometry instanceof THREE.BufferGeometry) {\n        var a, b, c;\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (attributes.uv !== undefined) {\n          uvs = attributes.uv.array;\n        }\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, l = indices.length; i < l; i += 3) {\n            a = indices[i];\n            b = indices[i + 1];\n            c = indices[i + 2];\n            intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n\n              intersects.push(intersection);\n            }\n          }\n        } else {\n          for (var i = 0, l = positions.length; i < l; i += 9) {\n            a = i / 3;\n            b = a + 1;\n            c = a + 2;\n            intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n\n            if (intersection) {\n              intersection.index = a; // triangle number in positions buffer semantics\n\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else if (geometry instanceof THREE.Geometry) {\n        var fvA, fvB, fvC;\n        var isFaceMaterial = material instanceof THREE.MultiMaterial;\n        var materials = isFaceMaterial === true ? material.materials : null;\n        var vertices = geometry.vertices;\n        var faces = geometry.faces;\n        var faceVertexUvs = geometry.faceVertexUvs[0];\n        if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n\n        for (var f = 0, fl = faces.length; f < fl; f++) {\n          var face = faces[f];\n          var faceMaterial = isFaceMaterial === true ? materials[face.materialIndex] : material;\n          if (faceMaterial === undefined) continue;\n          fvA = vertices[face.a];\n          fvB = vertices[face.b];\n          fvC = vertices[face.c];\n\n          if (faceMaterial.morphTargets === true) {\n            var morphTargets = geometry.morphTargets;\n            var morphInfluences = this.morphTargetInfluences;\n            vA.set(0, 0, 0);\n            vB.set(0, 0, 0);\n            vC.set(0, 0, 0);\n\n            for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n              var influence = morphInfluences[t];\n              if (influence === 0) continue;\n              var targets = morphTargets[t].vertices;\n              vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n              vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n              vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n            }\n\n            vA.add(fvA);\n            vB.add(fvB);\n            vC.add(fvC);\n            fvA = vA;\n            fvB = vB;\n            fvC = vC;\n          }\n\n          intersection = checkIntersection(this, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n\n          if (intersection) {\n            if (uvs) {\n              var uvs_f = uvs[f];\n              uvA.copy(uvs_f[0]);\n              uvB.copy(uvs_f[1]);\n              uvC.copy(uvs_f[2]);\n              intersection.uv = uvIntersection(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC);\n            }\n\n            intersection.face = face;\n            intersection.faceIndex = f;\n            intersects.push(intersection);\n          }\n        }\n      }\n    };\n  }(),\n  clone: function clone() {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n}); // File:src/objects/Bone.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\n\nTHREE.Bone = function (skin) {\n  THREE.Object3D.call(this);\n  this.type = 'Bone';\n  this.skin = skin;\n};\n\nTHREE.Bone.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Bone,\n  copy: function copy(source) {\n    THREE.Object3D.prototype.copy.call(this, source);\n    this.skin = source.skin;\n    return this;\n  }\n}); // File:src/objects/Skeleton.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\n\nTHREE.Skeleton = function (bones, boneInverses, useVertexTexture) {\n  this.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n  this.identityMatrix = new THREE.Matrix4(); // copy the bone array\n\n  bones = bones || [];\n  this.bones = bones.slice(0); // create a bone texture or an array of floats\n\n  if (this.useVertexTexture) {\n    // layout (1 matrix = 4 pixels)\n    //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n    //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n    //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n    //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n    //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n    var size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n    size = THREE.Math.nextPowerOfTwo(Math.ceil(size));\n    size = Math.max(size, 4);\n    this.boneTextureWidth = size;\n    this.boneTextureHeight = size;\n    this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4); // 4 floats per RGBA pixel\n\n    this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType);\n  } else {\n    this.boneMatrices = new Float32Array(16 * this.bones.length);\n  } // use the supplied bone inverses or calculate the inverses\n\n\n  if (boneInverses === undefined) {\n    this.calculateInverses();\n  } else {\n    if (this.bones.length === boneInverses.length) {\n      this.boneInverses = boneInverses.slice(0);\n    } else {\n      console.warn('THREE.Skeleton bonInverses is the wrong length.');\n      this.boneInverses = [];\n\n      for (var b = 0, bl = this.bones.length; b < bl; b++) {\n        this.boneInverses.push(new THREE.Matrix4());\n      }\n    }\n  }\n};\n\nObject.assign(THREE.Skeleton.prototype, {\n  calculateInverses: function calculateInverses() {\n    this.boneInverses = [];\n\n    for (var b = 0, bl = this.bones.length; b < bl; b++) {\n      var inverse = new THREE.Matrix4();\n\n      if (this.bones[b]) {\n        inverse.getInverse(this.bones[b].matrixWorld);\n      }\n\n      this.boneInverses.push(inverse);\n    }\n  },\n  pose: function pose() {\n    var bone; // recover the bind-time world matrices\n\n    for (var b = 0, bl = this.bones.length; b < bl; b++) {\n      bone = this.bones[b];\n\n      if (bone) {\n        bone.matrixWorld.getInverse(this.boneInverses[b]);\n      }\n    } // compute the local matrices, positions, rotations and scales\n\n\n    for (var b = 0, bl = this.bones.length; b < bl; b++) {\n      bone = this.bones[b];\n\n      if (bone) {\n        if (bone.parent) {\n          bone.matrix.getInverse(bone.parent.matrixWorld);\n          bone.matrix.multiply(bone.matrixWorld);\n        } else {\n          bone.matrix.copy(bone.matrixWorld);\n        }\n\n        bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n      }\n    }\n  },\n  update: function () {\n    var offsetMatrix = new THREE.Matrix4();\n    return function update() {\n      // flatten bone matrices to array\n      for (var b = 0, bl = this.bones.length; b < bl; b++) {\n        // compute the offset between the current and the original transform\n        var matrix = this.bones[b] ? this.bones[b].matrixWorld : this.identityMatrix;\n        offsetMatrix.multiplyMatrices(matrix, this.boneInverses[b]);\n        offsetMatrix.toArray(this.boneMatrices, b * 16);\n      }\n\n      if (this.useVertexTexture) {\n        this.boneTexture.needsUpdate = true;\n      }\n    };\n  }(),\n  clone: function clone() {\n    return new THREE.Skeleton(this.bones, this.boneInverses, this.useVertexTexture);\n  }\n}); // File:src/objects/SkinnedMesh.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\n\nTHREE.SkinnedMesh = function (geometry, material, useVertexTexture) {\n  THREE.Mesh.call(this, geometry, material);\n  this.type = 'SkinnedMesh';\n  this.bindMode = \"attached\";\n  this.bindMatrix = new THREE.Matrix4();\n  this.bindMatrixInverse = new THREE.Matrix4(); // init bones\n  // TODO: remove bone creation as there is no reason (other than\n  // convenience) for THREE.SkinnedMesh to do this.\n\n  var bones = [];\n\n  if (this.geometry && this.geometry.bones !== undefined) {\n    var bone, gbone;\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n      bone = new THREE.Bone(this);\n      bones.push(bone);\n      bone.name = gbone.name;\n      bone.position.fromArray(gbone.pos);\n      bone.quaternion.fromArray(gbone.rotq);\n      if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n    }\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n\n      if (gbone.parent !== -1 && gbone.parent !== null && bones[gbone.parent] !== undefined) {\n        bones[gbone.parent].add(bones[b]);\n      } else {\n        this.add(bones[b]);\n      }\n    }\n  }\n\n  this.normalizeSkinWeights();\n  this.updateMatrixWorld(true);\n  this.bind(new THREE.Skeleton(bones, undefined, useVertexTexture), this.matrixWorld);\n};\n\nTHREE.SkinnedMesh.prototype = Object.assign(Object.create(THREE.Mesh.prototype), {\n  constructor: THREE.SkinnedMesh,\n  bind: function bind(skeleton, bindMatrix) {\n    this.skeleton = skeleton;\n\n    if (bindMatrix === undefined) {\n      this.updateMatrixWorld(true);\n      this.skeleton.calculateInverses();\n      bindMatrix = this.matrixWorld;\n    }\n\n    this.bindMatrix.copy(bindMatrix);\n    this.bindMatrixInverse.getInverse(bindMatrix);\n  },\n  pose: function pose() {\n    this.skeleton.pose();\n  },\n  normalizeSkinWeights: function normalizeSkinWeights() {\n    if (this.geometry instanceof THREE.Geometry) {\n      for (var i = 0; i < this.geometry.skinWeights.length; i++) {\n        var sw = this.geometry.skinWeights[i];\n        var scale = 1.0 / sw.lengthManhattan();\n\n        if (scale !== Infinity) {\n          sw.multiplyScalar(scale);\n        } else {\n          sw.set(1, 0, 0, 0); // do something reasonable\n        }\n      }\n    } else if (this.geometry instanceof THREE.BufferGeometry) {\n      var vec = new THREE.Vector4();\n      var skinWeight = this.geometry.attributes.skinWeight;\n\n      for (var i = 0; i < skinWeight.count; i++) {\n        vec.x = skinWeight.getX(i);\n        vec.y = skinWeight.getY(i);\n        vec.z = skinWeight.getZ(i);\n        vec.w = skinWeight.getW(i);\n        var scale = 1.0 / vec.lengthManhattan();\n\n        if (scale !== Infinity) {\n          vec.multiplyScalar(scale);\n        } else {\n          vec.set(1, 0, 0, 0); // do something reasonable\n        }\n\n        skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n      }\n    }\n  },\n  updateMatrixWorld: function updateMatrixWorld(force) {\n    THREE.Mesh.prototype.updateMatrixWorld.call(this, true);\n\n    if (this.bindMode === \"attached\") {\n      this.bindMatrixInverse.getInverse(this.matrixWorld);\n    } else if (this.bindMode === \"detached\") {\n      this.bindMatrixInverse.getInverse(this.bindMatrix);\n    } else {\n      console.warn('THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode);\n    }\n  },\n  clone: function clone() {\n    return new this.constructor(this.geometry, this.material, this.useVertexTexture).copy(this);\n  }\n}); // File:src/objects/LOD.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.LOD = function () {\n  THREE.Object3D.call(this);\n  this.type = 'LOD';\n  Object.defineProperties(this, {\n    levels: {\n      enumerable: true,\n      value: []\n    }\n  });\n};\n\nTHREE.LOD.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.LOD,\n  copy: function copy(source) {\n    THREE.Object3D.prototype.copy.call(this, source, false);\n    var levels = source.levels;\n\n    for (var i = 0, l = levels.length; i < l; i++) {\n      var level = levels[i];\n      this.addLevel(level.object.clone(), level.distance);\n    }\n\n    return this;\n  },\n  addLevel: function addLevel(object, distance) {\n    if (distance === undefined) distance = 0;\n    distance = Math.abs(distance);\n    var levels = this.levels;\n\n    for (var l = 0; l < levels.length; l++) {\n      if (distance < levels[l].distance) {\n        break;\n      }\n    }\n\n    levels.splice(l, 0, {\n      distance: distance,\n      object: object\n    });\n    this.add(object);\n  },\n  getObjectForDistance: function getObjectForDistance(distance) {\n    var levels = this.levels;\n\n    for (var i = 1, l = levels.length; i < l; i++) {\n      if (distance < levels[i].distance) {\n        break;\n      }\n    }\n\n    return levels[i - 1].object;\n  },\n  raycast: function () {\n    var matrixPosition = new THREE.Vector3();\n    return function raycast(raycaster, intersects) {\n      matrixPosition.setFromMatrixPosition(this.matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(matrixPosition);\n      this.getObjectForDistance(distance).raycast(raycaster, intersects);\n    };\n  }(),\n  update: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    return function update(camera) {\n      var levels = this.levels;\n\n      if (levels.length > 1) {\n        v1.setFromMatrixPosition(camera.matrixWorld);\n        v2.setFromMatrixPosition(this.matrixWorld);\n        var distance = v1.distanceTo(v2);\n        levels[0].object.visible = true;\n\n        for (var i = 1, l = levels.length; i < l; i++) {\n          if (distance >= levels[i].distance) {\n            levels[i - 1].object.visible = false;\n            levels[i].object.visible = true;\n          } else {\n            break;\n          }\n        }\n\n        for (; i < l; i++) {\n          levels[i].object.visible = false;\n        }\n      }\n    };\n  }(),\n  toJSON: function toJSON(meta) {\n    var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n    data.object.levels = [];\n    var levels = this.levels;\n\n    for (var i = 0, l = levels.length; i < l; i++) {\n      var level = levels[i];\n      data.object.levels.push({\n        object: level.object.uuid,\n        distance: level.distance\n      });\n    }\n\n    return data;\n  }\n}); // File:src/objects/Sprite.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Sprite = function (material) {\n  THREE.Object3D.call(this);\n  this.type = 'Sprite';\n  this.material = material !== undefined ? material : new THREE.SpriteMaterial();\n};\n\nTHREE.Sprite.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Sprite,\n  raycast: function () {\n    var matrixPosition = new THREE.Vector3();\n    return function raycast(raycaster, intersects) {\n      matrixPosition.setFromMatrixPosition(this.matrixWorld);\n      var distanceSq = raycaster.ray.distanceSqToPoint(matrixPosition);\n      var guessSizeSq = this.scale.x * this.scale.y / 4;\n\n      if (distanceSq > guessSizeSq) {\n        return;\n      }\n\n      intersects.push({\n        distance: Math.sqrt(distanceSq),\n        point: this.position,\n        face: null,\n        object: this\n      });\n    };\n  }(),\n  clone: function clone() {\n    return new this.constructor(this.material).copy(this);\n  }\n}); // File:src/objects/LensFlare.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.LensFlare = function (texture, size, distance, blending, color) {\n  THREE.Object3D.call(this);\n  this.lensFlares = [];\n  this.positionScreen = new THREE.Vector3();\n  this.customUpdateCallback = undefined;\n\n  if (texture !== undefined) {\n    this.add(texture, size, distance, blending, color);\n  }\n};\n\nTHREE.LensFlare.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.LensFlare,\n  copy: function copy(source) {\n    THREE.Object3D.prototype.copy.call(this, source);\n    this.positionScreen.copy(source.positionScreen);\n    this.customUpdateCallback = source.customUpdateCallback;\n\n    for (var i = 0, l = source.lensFlares.length; i < l; i++) {\n      this.lensFlares.push(source.lensFlares[i]);\n    }\n\n    return this;\n  },\n  add: function add(texture, size, distance, blending, color, opacity) {\n    if (size === undefined) size = -1;\n    if (distance === undefined) distance = 0;\n    if (opacity === undefined) opacity = 1;\n    if (color === undefined) color = new THREE.Color(0xffffff);\n    if (blending === undefined) blending = THREE.NormalBlending;\n    distance = Math.min(distance, Math.max(0, distance));\n    this.lensFlares.push({\n      texture: texture,\n      // THREE.Texture\n      size: size,\n      // size in pixels (-1 = use texture.width)\n      distance: distance,\n      // distance (0-1) from light source (0=at light source)\n      x: 0,\n      y: 0,\n      z: 0,\n      // screen position (-1 => 1) z = 0 is in front z = 1 is back\n      scale: 1,\n      // scale\n      rotation: 0,\n      // rotation\n      opacity: opacity,\n      // opacity\n      color: color,\n      // color\n      blending: blending // blending\n\n    });\n  },\n\n  /*\r\n   * Update lens flares update positions on all flares based on the screen position\r\n   * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n   */\n  updateLensFlares: function updateLensFlares() {\n    var f,\n        fl = this.lensFlares.length;\n    var flare;\n    var vecX = -this.positionScreen.x * 2;\n    var vecY = -this.positionScreen.y * 2;\n\n    for (f = 0; f < fl; f++) {\n      flare = this.lensFlares[f];\n      flare.x = this.positionScreen.x + vecX * flare.distance;\n      flare.y = this.positionScreen.y + vecY * flare.distance;\n      flare.wantedRotation = flare.x * Math.PI * 0.25;\n      flare.rotation += (flare.wantedRotation - flare.rotation) * 0.25;\n    }\n  }\n}); // File:src/scenes/Scene.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Scene = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Scene';\n  this.fog = null;\n  this.overrideMaterial = null;\n  this.autoUpdate = true; // checked by the renderer\n};\n\nTHREE.Scene.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Scene.prototype.constructor = THREE.Scene;\n\nTHREE.Scene.prototype.copy = function (source, recursive) {\n  THREE.Object3D.prototype.copy.call(this, source, recursive);\n  if (source.fog !== null) this.fog = source.fog.clone();\n  if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n  this.autoUpdate = source.autoUpdate;\n  this.matrixAutoUpdate = source.matrixAutoUpdate;\n  return this;\n}; // File:src/scenes/Fog.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.Fog = function (color, near, far) {\n  this.name = '';\n  this.color = new THREE.Color(color);\n  this.near = near !== undefined ? near : 1;\n  this.far = far !== undefined ? far : 1000;\n};\n\nTHREE.Fog.prototype.clone = function () {\n  return new THREE.Fog(this.color.getHex(), this.near, this.far);\n}; // File:src/scenes/FogExp2.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.FogExp2 = function (color, density) {\n  this.name = '';\n  this.color = new THREE.Color(color);\n  this.density = density !== undefined ? density : 0.00025;\n};\n\nTHREE.FogExp2.prototype.clone = function () {\n  return new THREE.FogExp2(this.color.getHex(), this.density);\n}; // File:src/renderers/shaders/ShaderChunk.js\n\n\nTHREE.ShaderChunk = {}; // File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\nTHREE.ShaderChunk['alphatest_fragment'] = \"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\n\nTHREE.ShaderChunk['aomap_fragment'] = \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\n\nTHREE.ShaderChunk['aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\n\nTHREE.ShaderChunk['begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\"; // File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\n\nTHREE.ShaderChunk['beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\"; // File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\n\nTHREE.ShaderChunk['bsdfs'] = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\t\t}\\n\t\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl\n\nTHREE.ShaderChunk['clipping_planes_fragment'] = \"#if NUM_CLIPPING_PLANES > 0\\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\t\tvec4 plane = clippingPlanes[ i ];\\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl\n\nTHREE.ShaderChunk['clipping_planes_pars_fragment'] = \"#if NUM_CLIPPING_PLANES > 0\\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\t\tvarying vec3 vViewPosition;\\n\t#endif\\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl\n\nTHREE.ShaderChunk['clipping_planes_pars_vertex'] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvarying vec3 vViewPosition;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl\n\nTHREE.ShaderChunk['clipping_planes_vertex'] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\nTHREE.ShaderChunk['color_fragment'] = \"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\nTHREE.ShaderChunk['color_pars_fragment'] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\nTHREE.ShaderChunk['color_pars_vertex'] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\nTHREE.ShaderChunk['color_vertex'] = \"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/common.glsl\n\nTHREE.ShaderChunk['common'] = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\n\nTHREE.ShaderChunk['cube_uv_reflection_fragment'] = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\tvec3 absDirection = abs(direction);\\n\tint face = -1;\\n\tif( absDirection.x > absDirection.z ) {\\n\t\tif(absDirection.x > absDirection.y )\\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\telse {\\n\t\tif(absDirection.z > absDirection.y )\\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\tfloat dxRoughness = dFdx(roughness);\\n\tfloat dyRoughness = dFdy(roughness);\\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\tfloat mipLevel = 0.5 * log2(d);\\n\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\tbool bRes = mipLevel == 0.0;\\n\tscale =  bRes && (scale < a) ? a : scale;\\n\tvec3 r;\\n\tvec2 offset;\\n\tint face = getFaceFromDirection(direction);\\n\tfloat rcpPowScale = 1.0 / powScale;\\n\tif( face == 0) {\\n\t\tr = vec3(direction.x, -direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 1) {\\n\t\tr = vec3(direction.y, direction.x, direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 2) {\\n\t\tr = vec3(direction.z, direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 3) {\\n\t\tr = vec3(direction.x, direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse if( face == 4) {\\n\t\tr = vec3(direction.y, direction.x, -direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse {\\n\t\tr = vec3(direction.z, -direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\tr = normalize(r);\\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\tvec2 base = offset + vec2( texelOffset );\\n\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\tfloat r1 = floor(roughnessVal);\\n\tfloat r2 = r1 + 1.0;\\n\tfloat t = fract(roughnessVal);\\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\tfloat s = mipInfo.y;\\n\tfloat level0 = mipInfo.x;\\n\tfloat level1 = level0 + 1.0;\\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\tvec4 result = mix(color10, color20, t);\\n\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\nTHREE.ShaderChunk['defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\"; // File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\n\nTHREE.ShaderChunk['displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\n\nTHREE.ShaderChunk['emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\n\nTHREE.ShaderChunk['emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\n\nTHREE.ShaderChunk['encodings_pars_fragment'] = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\n\nTHREE.ShaderChunk['encodings_fragment'] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\nTHREE.ShaderChunk['envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor = envMapTexelToLinear( envColor );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['envmap_pars_fragment'] = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\t\tvarying vec3 vWorldPosition;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['envmap_pars_vertex'] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvarying vec3 vWorldPosition;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t\tuniform float refractionRatio;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\nTHREE.ShaderChunk['envmap_vertex'] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvWorldPosition = worldPosition.xyz;\\n\t#else\\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\nTHREE.ShaderChunk['fog_fragment'] = \"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\nTHREE.ShaderChunk['fog_pars_fragment'] = \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\n\nTHREE.ShaderChunk['lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\n\nTHREE.ShaderChunk['lights_lambert_vertex'] = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\n\nTHREE.ShaderChunk['lights_pars'] = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\tdirectLight.visible = true;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\t\t\tdirectLight.color = pointLight.color;\\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tirradiance *= PI;\\n\t\t#endif\\n\t\treturn irradiance;\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\t\t#else\\n\t\t\tvec4 envMapColor = vec4( 0.0 );\\n\t\t#endif\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#endif\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\n\nTHREE.ShaderChunk['lights_phong_fragment'] = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\n\nTHREE.ShaderChunk['lights_phong_pars_fragment'] = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl\n\nTHREE.ShaderChunk['lights_physical_fragment'] = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\tmaterial.specularColor = mix( vec3( 0.16 * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl\n\nTHREE.ShaderChunk['lights_physical_pars_fragment'] = \"struct PhysicalMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n\t#ifndef STANDARD\\n\t#endif\\n};\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_template.glsl\n\nTHREE.ShaderChunk['lights_template'] = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\nTHREE.ShaderChunk['map_fragment'] = \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\nTHREE.ShaderChunk['map_pars_fragment'] = \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\n\nTHREE.ShaderChunk['map_particle_fragment'] = \"#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\n\nTHREE.ShaderChunk['map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\n\nTHREE.ShaderChunk['metalnessmap_fragment'] = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['metalnessmap_pars_fragment'] = \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\nTHREE.ShaderChunk['morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\n\nTHREE.ShaderChunk['normal_fragment'] = \"#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal );\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/packing.glsl\n\nTHREE.ShaderChunk['packing'] = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthoDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat OrthoDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\n\nTHREE.ShaderChunk['premultiplied_alpha_fragment'] = \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\n\nTHREE.ShaderChunk['project_vertex'] = \"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\"; // File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\n\nTHREE.ShaderChunk['roughnessmap_fragment'] = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['roughnessmap_pars_fragment'] = \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\n\nTHREE.ShaderChunk['shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\n\nTHREE.ShaderChunk['shadowmask_pars_fragment'] = \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\nTHREE.ShaderChunk['skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\nTHREE.ShaderChunk['skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\nTHREE.ShaderChunk['skinning_vertex'] = \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\nTHREE.ShaderChunk['skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_fragment'] = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\n\nTHREE.ShaderChunk['tonemapping_fragment'] = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\n\nTHREE.ShaderChunk['tonemapping_pars_fragment'] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\n\nTHREE.ShaderChunk['uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\n\nTHREE.ShaderChunk['uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\n\nTHREE.ShaderChunk['uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\n\nTHREE.ShaderChunk['uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\n\nTHREE.ShaderChunk['uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\n\nTHREE.ShaderChunk['uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\nTHREE.ShaderChunk['worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/UniformsUtils.js\n\n/**\r\n * Uniform Utilities\r\n */\n\nTHREE.UniformsUtils = {\n  merge: function merge(uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = this.clone(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  },\n  clone: function clone(uniforms_src) {\n    var uniforms_dst = {};\n\n    for (var u in uniforms_src) {\n      uniforms_dst[u] = {};\n\n      for (var p in uniforms_src[u]) {\n        var parameter_src = uniforms_src[u][p];\n\n        if (parameter_src instanceof THREE.Color || parameter_src instanceof THREE.Vector2 || parameter_src instanceof THREE.Vector3 || parameter_src instanceof THREE.Vector4 || parameter_src instanceof THREE.Matrix3 || parameter_src instanceof THREE.Matrix4 || parameter_src instanceof THREE.Texture) {\n          uniforms_dst[u][p] = parameter_src.clone();\n        } else if (Array.isArray(parameter_src)) {\n          uniforms_dst[u][p] = parameter_src.slice();\n        } else {\n          uniforms_dst[u][p] = parameter_src;\n        }\n      }\n    }\n\n    return uniforms_dst;\n  }\n}; // File:src/renderers/shaders/UniformsLib.js\n\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\n\nTHREE.UniformsLib = {\n  common: {\n    \"diffuse\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"1f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    },\n    \"specularMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"alphaMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"envMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"flipEnvMap\": {\n      type: \"1f\",\n      value: -1\n    },\n    \"reflectivity\": {\n      type: \"1f\",\n      value: 1.0\n    },\n    \"refractionRatio\": {\n      type: \"1f\",\n      value: 0.98\n    }\n  },\n  aomap: {\n    \"aoMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"aoMapIntensity\": {\n      type: \"1f\",\n      value: 1\n    }\n  },\n  lightmap: {\n    \"lightMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"lightMapIntensity\": {\n      type: \"1f\",\n      value: 1\n    }\n  },\n  emissivemap: {\n    \"emissiveMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  bumpmap: {\n    \"bumpMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"bumpScale\": {\n      type: \"1f\",\n      value: 1\n    }\n  },\n  normalmap: {\n    \"normalMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"normalScale\": {\n      type: \"v2\",\n      value: new THREE.Vector2(1, 1)\n    }\n  },\n  displacementmap: {\n    \"displacementMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"displacementScale\": {\n      type: \"1f\",\n      value: 1\n    },\n    \"displacementBias\": {\n      type: \"1f\",\n      value: 0\n    }\n  },\n  roughnessmap: {\n    \"roughnessMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  metalnessmap: {\n    \"metalnessMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  fog: {\n    \"fogDensity\": {\n      type: \"1f\",\n      value: 0.00025\n    },\n    \"fogNear\": {\n      type: \"1f\",\n      value: 1\n    },\n    \"fogFar\": {\n      type: \"1f\",\n      value: 2000\n    },\n    \"fogColor\": {\n      type: \"c\",\n      value: new THREE.Color(0xffffff)\n    }\n  },\n  lights: {\n    \"ambientLightColor\": {\n      type: \"3fv\",\n      value: []\n    },\n    \"directionalLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"color\": {\n          type: \"c\"\n        },\n        \"shadow\": {\n          type: \"1i\"\n        },\n        \"shadowBias\": {\n          type: \"1f\"\n        },\n        \"shadowRadius\": {\n          type: \"1f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"directionalShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"directionalShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"spotLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"color\": {\n          type: \"c\"\n        },\n        \"position\": {\n          type: \"v3\"\n        },\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"distance\": {\n          type: \"1f\"\n        },\n        \"coneCos\": {\n          type: \"1f\"\n        },\n        \"penumbraCos\": {\n          type: \"1f\"\n        },\n        \"decay\": {\n          type: \"1f\"\n        },\n        \"shadow\": {\n          type: \"1i\"\n        },\n        \"shadowBias\": {\n          type: \"1f\"\n        },\n        \"shadowRadius\": {\n          type: \"1f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"spotShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"spotShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"pointLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"color\": {\n          type: \"c\"\n        },\n        \"position\": {\n          type: \"v3\"\n        },\n        \"decay\": {\n          type: \"1f\"\n        },\n        \"distance\": {\n          type: \"1f\"\n        },\n        \"shadow\": {\n          type: \"1i\"\n        },\n        \"shadowBias\": {\n          type: \"1f\"\n        },\n        \"shadowRadius\": {\n          type: \"1f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"pointShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"pointShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"hemisphereLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"skyColor\": {\n          type: \"c\"\n        },\n        \"groundColor\": {\n          type: \"c\"\n        }\n      }\n    }\n  },\n  points: {\n    \"diffuse\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"1f\",\n      value: 1.0\n    },\n    \"size\": {\n      type: \"1f\",\n      value: 1.0\n    },\n    \"scale\": {\n      type: \"1f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    }\n  }\n}; // File:src/renderers/shaders/ShaderLib/cube_frag.glsl\n\nTHREE.ShaderChunk['cube_frag'] = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\t#include <logdepthbuf_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/cube_vert.glsl\n\nTHREE.ShaderChunk['cube_vert'] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/depth_frag.glsl\n\nTHREE.ShaderChunk['depth_frag'] = \"#if DEPTH_PACKING == 3200\\n\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#if DEPTH_PACKING == 3200\\n\t\tdiffuseColor.a = opacity;\\n\t#endif\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#if DEPTH_PACKING == 3200\\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\t#elif DEPTH_PACKING == 3201\\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\t#endif\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/depth_vert.glsl\n\nTHREE.ShaderChunk['depth_vert'] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\n\nTHREE.ShaderChunk['distanceRGBA_frag'] = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\n\nTHREE.ShaderChunk['distanceRGBA_vert'] = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvWorldPosition = worldPosition;\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\n\nTHREE.ShaderChunk['equirect_frag'] = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 direction = normalize( vWorldPosition );\\n\tvec2 sampleUV;\\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\t#include <logdepthbuf_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\n\nTHREE.ShaderChunk['equirect_vert'] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\n\nTHREE.ShaderChunk['linedashed_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\n\nTHREE.ShaderChunk['linedashed_vert'] = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\n\nTHREE.ShaderChunk['meshbasic_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight;\\n\treflectedLight.directDiffuse = vec3( 0.0 );\\n\treflectedLight.directSpecular = vec3( 0.0 );\\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\n\nTHREE.ShaderChunk['meshbasic_vert'] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_ENVMAP\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <envmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\n\nTHREE.ShaderChunk['meshlambert_frag'] = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\n\nTHREE.ShaderChunk['meshlambert_vert'] = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\n\nTHREE.ShaderChunk['meshphong_frag'] = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\n\nTHREE.ShaderChunk['meshphong_vert'] = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphysical_frag.glsl\n\nTHREE.ShaderChunk['meshphysical_frag'] = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_physical_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphysical_vert.glsl\n\nTHREE.ShaderChunk['meshphysical_vert'] = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/normal_frag.glsl\n\nTHREE.ShaderChunk['normal_frag'] = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\t#include <logdepthbuf_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/normal_vert.glsl\n\nTHREE.ShaderChunk['normal_vert'] = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvNormal = normalize( normalMatrix * normal );\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/points_frag.glsl\n\nTHREE.ShaderChunk['points_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/points_vert.glsl\n\nTHREE.ShaderChunk['points_vert'] = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/shadow_frag.glsl\n\nTHREE.ShaderChunk['shadow_frag'] = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/shadow_vert.glsl\n\nTHREE.ShaderChunk['shadow_vert'] = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib.js\n\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\n\nTHREE.ShaderLib = {\n  'basic': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['fog']]),\n    vertexShader: THREE.ShaderChunk['meshbasic_vert'],\n    fragmentShader: THREE.ShaderChunk['meshbasic_frag']\n  },\n  'lambert': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['lightmap'], THREE.UniformsLib['emissivemap'], THREE.UniformsLib['fog'], THREE.UniformsLib['lights'], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshlambert_vert'],\n    fragmentShader: THREE.ShaderChunk['meshlambert_frag']\n  },\n  'phong': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['lightmap'], THREE.UniformsLib['emissivemap'], THREE.UniformsLib['bumpmap'], THREE.UniformsLib['normalmap'], THREE.UniformsLib['displacementmap'], THREE.UniformsLib['fog'], THREE.UniformsLib['lights'], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"specular\": {\n        type: \"c\",\n        value: new THREE.Color(0x111111)\n      },\n      \"shininess\": {\n        type: \"1f\",\n        value: 30\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshphong_vert'],\n    fragmentShader: THREE.ShaderChunk['meshphong_frag']\n  },\n  'standard': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['lightmap'], THREE.UniformsLib['emissivemap'], THREE.UniformsLib['bumpmap'], THREE.UniformsLib['normalmap'], THREE.UniformsLib['displacementmap'], THREE.UniformsLib['roughnessmap'], THREE.UniformsLib['metalnessmap'], THREE.UniformsLib['fog'], THREE.UniformsLib['lights'], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"roughness\": {\n        type: \"1f\",\n        value: 0.5\n      },\n      \"metalness\": {\n        type: \"1f\",\n        value: 0\n      },\n      \"envMapIntensity\": {\n        type: \"1f\",\n        value: 1\n      } // temporary\n\n    }]),\n    vertexShader: THREE.ShaderChunk['meshphysical_vert'],\n    fragmentShader: THREE.ShaderChunk['meshphysical_frag']\n  },\n  'points': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['points'], THREE.UniformsLib['fog']]),\n    vertexShader: THREE.ShaderChunk['points_vert'],\n    fragmentShader: THREE.ShaderChunk['points_frag']\n  },\n  'dashed': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['fog'], {\n      \"scale\": {\n        type: \"1f\",\n        value: 1\n      },\n      \"dashSize\": {\n        type: \"1f\",\n        value: 1\n      },\n      \"totalSize\": {\n        type: \"1f\",\n        value: 2\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['linedashed_vert'],\n    fragmentShader: THREE.ShaderChunk['linedashed_frag']\n  },\n  'depth': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['displacementmap']]),\n    vertexShader: THREE.ShaderChunk['depth_vert'],\n    fragmentShader: THREE.ShaderChunk['depth_frag']\n  },\n  'normal': {\n    uniforms: {\n      \"opacity\": {\n        type: \"1f\",\n        value: 1.0\n      }\n    },\n    vertexShader: THREE.ShaderChunk['normal_vert'],\n    fragmentShader: THREE.ShaderChunk['normal_frag']\n  },\n\n  /* -------------------------------------------------------------------------\r\n  //\tCube map shader\r\n   ------------------------------------------------------------------------- */\n  'cube': {\n    uniforms: {\n      \"tCube\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"1f\",\n        value: -1\n      }\n    },\n    vertexShader: THREE.ShaderChunk['cube_vert'],\n    fragmentShader: THREE.ShaderChunk['cube_frag']\n  },\n\n  /* -------------------------------------------------------------------------\r\n  //\tCube map shader\r\n   ------------------------------------------------------------------------- */\n  'equirect': {\n    uniforms: {\n      \"tEquirect\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"1f\",\n        value: -1\n      }\n    },\n    vertexShader: THREE.ShaderChunk['equirect_vert'],\n    fragmentShader: THREE.ShaderChunk['equirect_frag']\n  },\n  'distanceRGBA': {\n    uniforms: {\n      \"lightPos\": {\n        type: \"v3\",\n        value: new THREE.Vector3()\n      }\n    },\n    vertexShader: THREE.ShaderChunk['distanceRGBA_vert'],\n    fragmentShader: THREE.ShaderChunk['distanceRGBA_frag']\n  }\n};\nTHREE.ShaderLib['physical'] = {\n  uniforms: THREE.UniformsUtils.merge([THREE.ShaderLib['standard'].uniforms, {// future\n  }]),\n  vertexShader: THREE.ShaderChunk['meshphysical_vert'],\n  fragmentShader: THREE.ShaderChunk['meshphysical_frag']\n}; // File:src/renderers/WebGLRenderer.js\n\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n * @author tschw\r\n */\n\nTHREE.WebGLRenderer = function (parameters) {\n  console.log('THREE.WebGLRenderer', THREE.REVISION);\n  parameters = parameters || {};\n\n  var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement('canvas'),\n      _context = parameters.context !== undefined ? parameters.context : null,\n      _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n      _depth = parameters.depth !== undefined ? parameters.depth : true,\n      _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n      _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n      _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n      _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n  var lights = [];\n  var opaqueObjects = [];\n  var opaqueObjectsLastIndex = -1;\n  var transparentObjects = [];\n  var transparentObjectsLastIndex = -1;\n  var morphInfluences = new Float32Array(8);\n  var sprites = [];\n  var lensFlares = []; // public properties\n\n  this.domElement = _canvas;\n  this.context = null; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // user-defined clipping\n\n  this.clippingPlanes = [];\n  this.localClippingEnabled = false; // physically based shading\n\n  this.gammaFactor = 2.0; // for backwards compatibility\n\n  this.gammaInput = false;\n  this.gammaOutput = false; // physical lights\n\n  this.physicallyCorrectLights = false; // tone mapping\n\n  this.toneMapping = THREE.LinearToneMapping;\n  this.toneMappingExposure = 1.0;\n  this.toneMappingWhitePoint = 1.0; // morphs\n\n  this.maxMorphTargets = 8;\n  this.maxMorphNormals = 4; // flags\n\n  this.autoScaleCubemaps = true; // internal properties\n\n  var _this = this,\n      // internal state cache\n  _currentProgram = null,\n      _currentRenderTarget = null,\n      _currentFramebuffer = null,\n      _currentMaterialId = -1,\n      _currentGeometryProgram = '',\n      _currentCamera = null,\n      _currentScissor = new THREE.Vector4(),\n      _currentScissorTest = null,\n      _currentViewport = new THREE.Vector4(),\n      //\n  _usedTextureUnits = 0,\n      //\n  _clearColor = new THREE.Color(0x000000),\n      _clearAlpha = 0,\n      _width = _canvas.width,\n      _height = _canvas.height,\n      _pixelRatio = 1,\n      _scissor = new THREE.Vector4(0, 0, _width, _height),\n      _scissorTest = false,\n      _viewport = new THREE.Vector4(0, 0, _width, _height),\n      // frustum\n  _frustum = new THREE.Frustum(),\n      // clipping\n  _clipping = new THREE.WebGLClipping(),\n      _clippingEnabled = false,\n      _localClippingEnabled = false,\n      _sphere = new THREE.Sphere(),\n      // camera matrices cache\n  _projScreenMatrix = new THREE.Matrix4(),\n      _vector3 = new THREE.Vector3(),\n      // light arrays cache\n  _lights = {\n    hash: '',\n    ambient: [0, 0, 0],\n    directional: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotShadowMap: [],\n    spotShadowMatrix: [],\n    point: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: [],\n    shadows: []\n  },\n      // info\n  _infoMemory = {\n    geometries: 0,\n    textures: 0\n  },\n      _infoRender = {\n    calls: 0,\n    vertices: 0,\n    faces: 0,\n    points: 0\n  };\n\n  this.info = {\n    render: _infoRender,\n    memory: _infoMemory,\n    programs: null\n  }; // initialize\n\n  var _gl;\n\n  try {\n    var attributes = {\n      alpha: _alpha,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer\n    };\n    _gl = _context || _canvas.getContext('webgl', attributes) || _canvas.getContext('experimental-webgl', attributes);\n\n    if (_gl === null) {\n      if (_canvas.getContext('webgl') !== null) {\n        throw 'Error creating WebGL context with your selected attributes.';\n      } else {\n        throw 'Error creating WebGL context.';\n      }\n    } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n    if (_gl.getShaderPrecisionFormat === undefined) {\n      _gl.getShaderPrecisionFormat = function () {\n        return {\n          'rangeMin': 1,\n          'rangeMax': 1,\n          'precision': 1\n        };\n      };\n    }\n\n    _canvas.addEventListener('webglcontextlost', onContextLost, false);\n  } catch (error) {\n    console.error('THREE.WebGLRenderer: ' + error);\n  }\n\n  var _isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext;\n\n  var extensions = new THREE.WebGLExtensions(_gl);\n  extensions.get('WEBGL_depth_texture');\n  extensions.get('OES_texture_float');\n  extensions.get('OES_texture_float_linear');\n  extensions.get('OES_texture_half_float');\n  extensions.get('OES_texture_half_float_linear');\n  extensions.get('OES_standard_derivatives');\n  extensions.get('ANGLE_instanced_arrays');\n\n  if (extensions.get('OES_element_index_uint')) {\n    THREE.BufferGeometry.MaxIndex = 4294967296;\n  }\n\n  var capabilities = new THREE.WebGLCapabilities(_gl, extensions, parameters);\n  var state = new THREE.WebGLState(_gl, extensions, paramThreeToGL);\n  var properties = new THREE.WebGLProperties();\n  var objects = new THREE.WebGLObjects(_gl, properties, this.info);\n  var programCache = new THREE.WebGLPrograms(this, capabilities);\n  var lightCache = new THREE.WebGLLights();\n  this.info.programs = programCache.programs;\n  var bufferRenderer = new THREE.WebGLBufferRenderer(_gl, extensions, _infoRender);\n  var indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer(_gl, extensions, _infoRender); //\n\n  function getTargetPixelRatio() {\n    return _currentRenderTarget === null ? _pixelRatio : 1;\n  }\n\n  function glClearColor(r, g, b, a) {\n    if (_premultipliedAlpha === true) {\n      r *= a;\n      g *= a;\n      b *= a;\n    }\n\n    state.clearColor(r, g, b, a);\n  }\n\n  function setDefaultGLState() {\n    state.init();\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  }\n\n  function resetGLState() {\n    _currentProgram = null;\n    _currentCamera = null;\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    state.reset();\n  }\n\n  setDefaultGLState();\n  this.context = _gl;\n  this.capabilities = capabilities;\n  this.extensions = extensions;\n  this.properties = properties;\n  this.state = state; // shadow map\n\n  var shadowMap = new THREE.WebGLShadowMap(this, _lights, objects);\n  this.shadowMap = shadowMap; // Plugins\n\n  var spritePlugin = new THREE.SpritePlugin(this, sprites);\n  var lensFlarePlugin = new THREE.LensFlarePlugin(this, lensFlares); // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    extensions.get('WEBGL_lose_context').loseContext();\n  };\n\n  this.getMaxAnisotropy = function () {\n    var value;\n    return function getMaxAnisotropy() {\n      if (value !== undefined) return value;\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        value = _gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        value = 0;\n      }\n\n      return value;\n    };\n  }();\n\n  this.getPrecision = function () {\n    return capabilities.precision;\n  };\n\n  this.getPixelRatio = function () {\n    return _pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value === undefined) return;\n    _pixelRatio = value;\n    this.setSize(_viewport.z, _viewport.w, false);\n  };\n\n  this.getSize = function () {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    _width = width;\n    _height = height;\n    _canvas.width = width * _pixelRatio;\n    _canvas.height = height * _pixelRatio;\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    state.viewport(_viewport.set(x, y, width, height));\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    state.scissor(_scissor.set(x, y, width, height));\n  };\n\n  this.setScissorTest = function (_boolean) {\n    state.setScissorTest(_scissorTest = _boolean);\n  }; // Clearing\n\n\n  this.getClearColor = function () {\n    return _clearColor;\n  };\n\n  this.setClearColor = function (color, alpha) {\n    _clearColor.set(color);\n\n    _clearAlpha = alpha !== undefined ? alpha : 1;\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.getClearAlpha = function () {\n    return _clearAlpha;\n  };\n\n  this.setClearAlpha = function (alpha) {\n    _clearAlpha = alpha;\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.clear = function (color, depth, stencil) {\n    var bits = 0;\n    if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    this.clear(true, false, false);\n  };\n\n  this.clearDepth = function () {\n    this.clear(false, true, false);\n  };\n\n  this.clearStencil = function () {\n    this.clear(false, false, true);\n  };\n\n  this.clearTarget = function (renderTarget, color, depth, stencil) {\n    this.setRenderTarget(renderTarget);\n    this.clear(color, depth, stencil);\n  }; // Reset\n\n\n  this.resetGLState = resetGLState;\n\n  this.dispose = function () {\n    _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n  }; // Events\n\n\n  function onContextLost(event) {\n    event.preventDefault();\n    resetGLState();\n    setDefaultGLState();\n    properties.clear();\n  }\n\n  function onTextureDispose(event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    deallocateTexture(texture);\n    _infoMemory.textures--;\n  }\n\n  function onRenderTargetDispose(event) {\n    var renderTarget = event.target;\n    renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n    deallocateRenderTarget(renderTarget);\n    _infoMemory.textures--;\n  }\n\n  function onMaterialDispose(event) {\n    var material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  } // Buffer deallocation\n\n\n  function deallocateTexture(texture) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image && textureProperties.__image__webglTextureCube) {\n      // cube texture\n      _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n    } else {\n      // 2D texture\n      if (textureProperties.__webglInit === undefined) return;\n\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    } // remove all webgl properties\n\n\n    properties[\"delete\"](texture);\n  }\n\n  function deallocateRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    if (!renderTarget) return;\n\n    if (textureProperties.__webglTexture !== undefined) {\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    }\n\n    if (renderTarget.depthTexture) {\n      renderTarget.depthTexture.dispose();\n    }\n\n    if (renderTarget instanceof THREE.WebGLRenderTargetCube) {\n      for (var i = 0; i < 6; i++) {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n      if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n    }\n\n    properties[\"delete\"](renderTarget.texture);\n    properties[\"delete\"](renderTarget);\n  }\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReference(material);\n    properties[\"delete\"](material);\n  }\n\n  function releaseMaterialProgramReference(material) {\n    var programInfo = properties.get(material).program;\n    material.program = undefined;\n\n    if (programInfo !== undefined) {\n      programCache.releaseProgram(programInfo);\n    }\n  } // Buffer rendering\n\n\n  this.renderBufferImmediate = function (object, program, material) {\n    state.initAttributes();\n    var buffers = properties.get(object);\n    if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n    if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n    if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n    if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n    var attributes = program.getAttributes();\n\n    if (object.hasPositions) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.position);\n\n      _gl.vertexAttribPointer(attributes.position, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasNormals) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n      if (material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.type !== 'MeshPhysicalMaterial' && material.shading === THREE.FlatShading) {\n        for (var i = 0, l = object.count * 3; i < l; i += 9) {\n          var array = object.normalArray;\n          var nx = (array[i + 0] + array[i + 3] + array[i + 6]) / 3;\n          var ny = (array[i + 1] + array[i + 4] + array[i + 7]) / 3;\n          var nz = (array[i + 2] + array[i + 5] + array[i + 8]) / 3;\n          array[i + 0] = nx;\n          array[i + 1] = ny;\n          array[i + 2] = nz;\n          array[i + 3] = nx;\n          array[i + 4] = ny;\n          array[i + 5] = nz;\n          array[i + 6] = nx;\n          array[i + 7] = ny;\n          array[i + 8] = nz;\n        }\n      }\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.normal);\n\n      _gl.vertexAttribPointer(attributes.normal, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasUvs && material.map) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.uv);\n\n      _gl.vertexAttribPointer(attributes.uv, 2, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasColors && material.vertexColors !== THREE.NoColors) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.color);\n\n      _gl.vertexAttribPointer(attributes.color, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    state.disableUnusedAttributes();\n\n    _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n    object.count = 0;\n  };\n\n  this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n    setMaterial(material);\n    var program = setProgram(camera, fog, material, object);\n    var updateBuffers = false;\n    var geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n    if (geometryProgram !== _currentGeometryProgram) {\n      _currentGeometryProgram = geometryProgram;\n      updateBuffers = true;\n    } // morph targets\n\n\n    var morphTargetInfluences = object.morphTargetInfluences;\n\n    if (morphTargetInfluences !== undefined) {\n      var activeInfluences = [];\n\n      for (var i = 0, l = morphTargetInfluences.length; i < l; i++) {\n        var influence = morphTargetInfluences[i];\n        activeInfluences.push([influence, i]);\n      }\n\n      activeInfluences.sort(absNumericalSort);\n\n      if (activeInfluences.length > 8) {\n        activeInfluences.length = 8;\n      }\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var i = 0, l = activeInfluences.length; i < l; i++) {\n        var influence = activeInfluences[i];\n        morphInfluences[i] = influence[0];\n\n        if (influence[0] !== 0) {\n          var index = influence[1];\n          if (material.morphTargets === true && morphAttributes.position) geometry.addAttribute('morphTarget' + i, morphAttributes.position[index]);\n          if (material.morphNormals === true && morphAttributes.normal) geometry.addAttribute('morphNormal' + i, morphAttributes.normal[index]);\n        } else {\n          if (material.morphTargets === true) geometry.removeAttribute('morphTarget' + i);\n          if (material.morphNormals === true) geometry.removeAttribute('morphNormal' + i);\n        }\n      }\n\n      program.getUniforms().setValue(_gl, 'morphTargetInfluences', morphInfluences);\n      updateBuffers = true;\n    } //\n\n\n    var index = geometry.index;\n    var position = geometry.attributes.position;\n\n    if (material.wireframe === true) {\n      index = objects.getWireframeAttribute(geometry);\n    }\n\n    var renderer;\n\n    if (index !== null) {\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(index);\n    } else {\n      renderer = bufferRenderer;\n    }\n\n    if (updateBuffers) {\n      setupVertexAttributes(material, program, geometry);\n\n      if (index !== null) {\n        _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer(index));\n      }\n    } //\n\n\n    var dataStart = 0;\n    var dataCount = Infinity;\n\n    if (index !== null) {\n      dataCount = index.count;\n    } else if (position !== undefined) {\n      dataCount = position.count;\n    }\n\n    var rangeStart = geometry.drawRange.start;\n    var rangeCount = geometry.drawRange.count;\n    var groupStart = group !== null ? group.start : 0;\n    var groupCount = group !== null ? group.count : Infinity;\n    var drawStart = Math.max(dataStart, rangeStart, groupStart);\n    var drawEnd = Math.min(dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n    var drawCount = Math.max(0, drawEnd - drawStart + 1); //\n\n    if (object instanceof THREE.Mesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n        renderer.setMode(_gl.LINES);\n      } else {\n        switch (object.drawMode) {\n          case THREE.TrianglesDrawMode:\n            renderer.setMode(_gl.TRIANGLES);\n            break;\n\n          case THREE.TriangleStripDrawMode:\n            renderer.setMode(_gl.TRIANGLE_STRIP);\n            break;\n\n          case THREE.TriangleFanDrawMode:\n            renderer.setMode(_gl.TRIANGLE_FAN);\n            break;\n        }\n      }\n    } else if (object instanceof THREE.Line) {\n      var lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n      if (object instanceof THREE.LineSegments) {\n        renderer.setMode(_gl.LINES);\n      } else {\n        renderer.setMode(_gl.LINE_STRIP);\n      }\n    } else if (object instanceof THREE.Points) {\n      renderer.setMode(_gl.POINTS);\n    }\n\n    if (geometry instanceof THREE.InstancedBufferGeometry) {\n      if (geometry.maxInstancedCount > 0) {\n        renderer.renderInstances(geometry, drawStart, drawCount);\n      }\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  };\n\n  function setupVertexAttributes(material, program, geometry, startIndex) {\n    var extension;\n\n    if (geometry instanceof THREE.InstancedBufferGeometry) {\n      extension = extensions.get('ANGLE_instanced_arrays');\n\n      if (extension === null) {\n        console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n    }\n\n    if (startIndex === undefined) startIndex = 0;\n    state.initAttributes();\n    var geometryAttributes = geometry.attributes;\n    var programAttributes = program.getAttributes();\n    var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    for (var name in programAttributes) {\n      var programAttribute = programAttributes[name];\n\n      if (programAttribute >= 0) {\n        var geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute !== undefined) {\n          var type = _gl.FLOAT;\n          var array = geometryAttribute.array;\n          var normalized = geometryAttribute.normalized;\n\n          if (array instanceof Float32Array) {\n            type = _gl.FLOAT;\n          } else if (array instanceof Float64Array) {\n            console.warn(\"Unsupported data buffer format: Float64Array\");\n          } else if (array instanceof Uint16Array) {\n            type = _gl.UNSIGNED_SHORT;\n          } else if (array instanceof Int16Array) {\n            type = _gl.SHORT;\n          } else if (array instanceof Uint32Array) {\n            type = _gl.UNSIGNED_INT;\n          } else if (array instanceof Int32Array) {\n            type = _gl.INT;\n          } else if (array instanceof Int8Array) {\n            type = _gl.BYTE;\n          } else if (array instanceof Uint8Array) {\n            type = _gl.UNSIGNED_BYTE;\n          }\n\n          var size = geometryAttribute.itemSize;\n          var buffer = objects.getAttributeBuffer(geometryAttribute);\n\n          if (geometryAttribute instanceof THREE.InterleavedBufferAttribute) {\n            var data = geometryAttribute.data;\n            var stride = data.stride;\n            var offset = geometryAttribute.offset;\n\n            if (data instanceof THREE.InstancedInterleavedBuffer) {\n              state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute, extension);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, (startIndex * stride + offset) * data.array.BYTES_PER_ELEMENT);\n          } else {\n            if (geometryAttribute instanceof THREE.InstancedBufferAttribute) {\n              state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute, extension);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT);\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          var value = materialDefaultAttributeValues[name];\n\n          if (value !== undefined) {\n            switch (value.length) {\n              case 2:\n                _gl.vertexAttrib2fv(programAttribute, value);\n\n                break;\n\n              case 3:\n                _gl.vertexAttrib3fv(programAttribute, value);\n\n                break;\n\n              case 4:\n                _gl.vertexAttrib4fv(programAttribute, value);\n\n                break;\n\n              default:\n                _gl.vertexAttrib1fv(programAttribute, value);\n\n            }\n          }\n        }\n      }\n    }\n\n    state.disableUnusedAttributes();\n  } // Sorting\n\n\n  function absNumericalSort(a, b) {\n    return Math.abs(b[0]) - Math.abs(a[0]);\n  }\n\n  function painterSortStable(a, b) {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    }\n\n    if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  } // Rendering\n\n\n  this.render = function (scene, camera, renderTarget, forceClear) {\n    if (camera instanceof THREE.Camera === false) {\n      console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n      return;\n    }\n\n    var fog = scene.fog; // reset caching for this frame\n\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    _currentCamera = null; // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromMatrix(_projScreenMatrix);\n\n    lights.length = 0;\n    opaqueObjectsLastIndex = -1;\n    transparentObjectsLastIndex = -1;\n    sprites.length = 0;\n    lensFlares.length = 0;\n    _localClippingEnabled = this.localClippingEnabled;\n    _clippingEnabled = _clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n    projectObject(scene, camera);\n    opaqueObjects.length = opaqueObjectsLastIndex + 1;\n    transparentObjects.length = transparentObjectsLastIndex + 1;\n\n    if (_this.sortObjects === true) {\n      opaqueObjects.sort(painterSortStable);\n      transparentObjects.sort(reversePainterSortStable);\n    } //\n\n\n    if (_clippingEnabled) _clipping.beginShadows();\n    setupShadows(lights);\n    shadowMap.render(scene, camera);\n    setupLights(lights, camera);\n    if (_clippingEnabled) _clipping.endShadows(); //\n\n    _infoRender.calls = 0;\n    _infoRender.vertices = 0;\n    _infoRender.faces = 0;\n    _infoRender.points = 0;\n\n    if (renderTarget === undefined) {\n      renderTarget = null;\n    }\n\n    this.setRenderTarget(renderTarget);\n\n    if (this.autoClear || forceClear) {\n      this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);\n    } //\n\n\n    if (scene.overrideMaterial) {\n      var overrideMaterial = scene.overrideMaterial;\n      renderObjects(opaqueObjects, camera, fog, overrideMaterial);\n      renderObjects(transparentObjects, camera, fog, overrideMaterial);\n    } else {\n      // opaque pass (front-to-back order)\n      state.setBlending(THREE.NoBlending);\n      renderObjects(opaqueObjects, camera, fog); // transparent pass (back-to-front order)\n\n      renderObjects(transparentObjects, camera, fog);\n    } // custom render plugins (post pass)\n\n\n    spritePlugin.render(scene, camera);\n    lensFlarePlugin.render(scene, camera, _currentViewport); // Generate mipmap if we're using any kind of mipmap filtering\n\n    if (renderTarget) {\n      var texture = renderTarget.texture;\n\n      if (texture.generateMipmaps && isPowerOfTwo(renderTarget) && texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) {\n        updateRenderTargetMipmap(renderTarget);\n      }\n    } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n    state.setDepthTest(true);\n    state.setDepthWrite(true);\n    state.setColorWrite(true); // _gl.finish();\n  };\n\n  function pushRenderItem(object, geometry, material, z, group) {\n    var array, index; // allocate the next position in the appropriate array\n\n    if (material.transparent) {\n      array = transparentObjects;\n      index = ++transparentObjectsLastIndex;\n    } else {\n      array = opaqueObjects;\n      index = ++opaqueObjectsLastIndex;\n    } // recycle existing render item or grow the array\n\n\n    var renderItem = array[index];\n\n    if (renderItem !== undefined) {\n      renderItem.id = object.id;\n      renderItem.object = object;\n      renderItem.geometry = geometry;\n      renderItem.material = material;\n      renderItem.z = _vector3.z;\n      renderItem.group = group;\n    } else {\n      renderItem = {\n        id: object.id,\n        object: object,\n        geometry: geometry,\n        material: material,\n        z: _vector3.z,\n        group: group\n      }; // assert( index === array.length );\n\n      array.push(renderItem);\n    }\n  } // TODO Duplicated code (Frustum)\n\n\n  function isObjectViewable(object) {\n    var geometry = object.geometry;\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n    _sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n    return isSphereViewable(_sphere);\n  }\n\n  function isSpriteViewable(sprite) {\n    _sphere.center.set(0, 0, 0);\n\n    _sphere.radius = 0.7071067811865476;\n\n    _sphere.applyMatrix4(sprite.matrixWorld);\n\n    return isSphereViewable(_sphere);\n  }\n\n  function isSphereViewable(sphere) {\n    if (!_frustum.intersectsSphere(sphere)) return false;\n    var numPlanes = _clipping.numPlanes;\n    if (numPlanes === 0) return true;\n    var planes = _this.clippingPlanes,\n        center = sphere.center,\n        negRad = -sphere.radius,\n        i = 0;\n\n    do {\n      // out when deeper than radius in the negative halfspace\n      if (planes[i].distanceToPoint(center) < negRad) return false;\n    } while (++i !== numPlanes);\n\n    return true;\n  }\n\n  function projectObject(object, camera) {\n    if (object.visible === false) return;\n\n    if (object.layers.test(camera.layers)) {\n      if (object instanceof THREE.Light) {\n        lights.push(object);\n      } else if (object instanceof THREE.Sprite) {\n        if (object.frustumCulled === false || isSpriteViewable(object) === true) {\n          sprites.push(object);\n        }\n      } else if (object instanceof THREE.LensFlare) {\n        lensFlares.push(object);\n      } else if (object instanceof THREE.ImmediateRenderObject) {\n        if (_this.sortObjects === true) {\n          _vector3.setFromMatrixPosition(object.matrixWorld);\n\n          _vector3.applyProjection(_projScreenMatrix);\n        }\n\n        pushRenderItem(object, null, object.material, _vector3.z, null);\n      } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points) {\n        if (object instanceof THREE.SkinnedMesh) {\n          object.skeleton.update();\n        }\n\n        if (object.frustumCulled === false || isObjectViewable(object) === true) {\n          var material = object.material;\n\n          if (material.visible === true) {\n            if (_this.sortObjects === true) {\n              _vector3.setFromMatrixPosition(object.matrixWorld);\n\n              _vector3.applyProjection(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n\n            if (material instanceof THREE.MultiMaterial) {\n              var groups = geometry.groups;\n              var materials = material.materials;\n\n              for (var i = 0, l = groups.length; i < l; i++) {\n                var group = groups[i];\n                var groupMaterial = materials[group.materialIndex];\n\n                if (groupMaterial.visible === true) {\n                  pushRenderItem(object, geometry, groupMaterial, _vector3.z, group);\n                }\n              }\n            } else {\n              pushRenderItem(object, geometry, material, _vector3.z, null);\n            }\n          }\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera);\n    }\n  }\n\n  function renderObjects(renderList, camera, fog, overrideMaterial) {\n    for (var i = 0, l = renderList.length; i < l; i++) {\n      var renderItem = renderList[i];\n      var object = renderItem.object;\n      var geometry = renderItem.geometry;\n      var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n      var group = renderItem.group;\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n      if (object instanceof THREE.ImmediateRenderObject) {\n        setMaterial(material);\n        var program = setProgram(camera, fog, material, object);\n        _currentGeometryProgram = '';\n        object.render(function (object) {\n          _this.renderBufferImmediate(object, program, material);\n        });\n      } else {\n        _this.renderBufferDirect(camera, fog, geometry, material, object, group);\n      }\n    }\n  }\n\n  function initMaterial(material, fog, object) {\n    var materialProperties = properties.get(material);\n    var parameters = programCache.getParameters(material, _lights, fog, _clipping.numPlanes, object);\n    var code = programCache.getProgramCode(material, parameters);\n    var program = materialProperties.program;\n    var programChange = true;\n\n    if (program === undefined) {\n      // new material\n      material.addEventListener('dispose', onMaterialDispose);\n    } else if (program.code !== code) {\n      // changed glsl or parameters\n      releaseMaterialProgramReference(material);\n    } else if (parameters.shaderID !== undefined) {\n      // same glsl and uniform list\n      return;\n    } else {\n      // only rebuild uniform list\n      programChange = false;\n    }\n\n    if (programChange) {\n      if (parameters.shaderID) {\n        var shader = THREE.ShaderLib[parameters.shaderID];\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: THREE.UniformsUtils.clone(shader.uniforms),\n          vertexShader: shader.vertexShader,\n          fragmentShader: shader.fragmentShader\n        };\n      } else {\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: material.uniforms,\n          vertexShader: material.vertexShader,\n          fragmentShader: material.fragmentShader\n        };\n      }\n\n      material.__webglShader = materialProperties.__webglShader;\n      program = programCache.acquireProgram(material, parameters, code);\n      materialProperties.program = program;\n      material.program = program;\n    }\n\n    var attributes = program.getAttributes();\n\n    if (material.morphTargets) {\n      material.numSupportedMorphTargets = 0;\n\n      for (var i = 0; i < _this.maxMorphTargets; i++) {\n        if (attributes['morphTarget' + i] >= 0) {\n          material.numSupportedMorphTargets++;\n        }\n      }\n    }\n\n    if (material.morphNormals) {\n      material.numSupportedMorphNormals = 0;\n\n      for (var i = 0; i < _this.maxMorphNormals; i++) {\n        if (attributes['morphNormal' + i] >= 0) {\n          material.numSupportedMorphNormals++;\n        }\n      }\n    }\n\n    var uniforms = materialProperties.__webglShader.uniforms;\n\n    if (!(material instanceof THREE.ShaderMaterial) && !(material instanceof THREE.RawShaderMaterial) || material.clipping === true) {\n      materialProperties.numClippingPlanes = _clipping.numPlanes;\n      uniforms.clippingPlanes = _clipping.uniform;\n    }\n\n    if (material.lights) {\n      // store the light setup it was created for\n      materialProperties.lightsHash = _lights.hash; // wire up the material to this renderer's lighting state\n\n      uniforms.ambientLightColor.value = _lights.ambient;\n      uniforms.directionalLights.value = _lights.directional;\n      uniforms.spotLights.value = _lights.spot;\n      uniforms.pointLights.value = _lights.point;\n      uniforms.hemisphereLights.value = _lights.hemi;\n      uniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = _lights.spotShadowMap;\n      uniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n      uniforms.pointShadowMap.value = _lights.pointShadowMap;\n      uniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n    }\n\n    var progUniforms = materialProperties.program.getUniforms(),\n        uniformsList = THREE.WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n    materialProperties.uniformsList = uniformsList;\n    materialProperties.dynamicUniforms = THREE.WebGLUniforms.splitDynamic(uniformsList, uniforms);\n  }\n\n  function setMaterial(material) {\n    if (material.side !== THREE.DoubleSide) state.enable(_gl.CULL_FACE);else state.disable(_gl.CULL_FACE);\n    state.setFlipSided(material.side === THREE.BackSide);\n\n    if (material.transparent === true) {\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n    } else {\n      state.setBlending(THREE.NoBlending);\n    }\n\n    state.setDepthFunc(material.depthFunc);\n    state.setDepthTest(material.depthTest);\n    state.setDepthWrite(material.depthWrite);\n    state.setColorWrite(material.colorWrite);\n    state.setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n  }\n\n  function setProgram(camera, fog, material, object) {\n    _usedTextureUnits = 0;\n    var materialProperties = properties.get(material);\n\n    if (_clippingEnabled) {\n      if (_localClippingEnabled || camera !== _currentCamera) {\n        var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n        // object instead of the material, once it becomes feasible\n        // (#8465, #8379)\n\n        _clipping.setState(material.clippingPlanes, material.clipShadows, camera, materialProperties, useCache);\n      }\n\n      if (materialProperties.numClippingPlanes !== undefined && materialProperties.numClippingPlanes !== _clipping.numPlanes) {\n        material.needsUpdate = true;\n      }\n    }\n\n    if (materialProperties.program === undefined) {\n      material.needsUpdate = true;\n    }\n\n    if (materialProperties.lightsHash !== undefined && materialProperties.lightsHash !== _lights.hash) {\n      material.needsUpdate = true;\n    }\n\n    if (material.needsUpdate) {\n      initMaterial(material, fog, object);\n      material.needsUpdate = false;\n    }\n\n    var refreshProgram = false;\n    var refreshMaterial = false;\n    var refreshLights = false;\n    var program = materialProperties.program,\n        p_uniforms = program.getUniforms(),\n        m_uniforms = materialProperties.__webglShader.uniforms;\n\n    if (program.id !== _currentProgram) {\n      _gl.useProgram(program.program);\n\n      _currentProgram = program.id;\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || camera !== _currentCamera) {\n      p_uniforms.set(_gl, camera, 'projectionMatrix');\n\n      if (capabilities.logarithmicDepthBuffer) {\n        p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      }\n\n      if (camera !== _currentCamera) {\n        _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n\n        refreshMaterial = true; // set to true on material change\n\n        refreshLights = true; // remains set until update done\n      } // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n\n      if (material instanceof THREE.ShaderMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshStandardMaterial || material.envMap) {\n        var uCamPos = p_uniforms.map.cameraPosition;\n\n        if (uCamPos !== undefined) {\n          uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n        }\n      }\n\n      if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshStandardMaterial || material instanceof THREE.ShaderMaterial || material.skinning) {\n        p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n      }\n\n      p_uniforms.set(_gl, _this, 'toneMappingExposure');\n      p_uniforms.set(_gl, _this, 'toneMappingWhitePoint');\n    } // skinning uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone texture must go before other textures\n    // not sure why, but otherwise weird things happen\n\n\n    if (material.skinning) {\n      p_uniforms.setOptional(_gl, object, 'bindMatrix');\n      p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n      var skeleton = object.skeleton;\n\n      if (skeleton) {\n        if (capabilities.floatVertexTextures && skeleton.useVertexTexture) {\n          p_uniforms.set(_gl, skeleton, 'boneTexture');\n          p_uniforms.set(_gl, skeleton, 'boneTextureWidth');\n          p_uniforms.set(_gl, skeleton, 'boneTextureHeight');\n        } else {\n          p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n        }\n      }\n    }\n\n    if (refreshMaterial) {\n      if (material.lights) {\n        // the current material requires lighting info\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      } // refresh uniforms common to several materials\n\n\n      if (fog && material.fog) {\n        refreshUniformsFog(m_uniforms, fog);\n      }\n\n      if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshStandardMaterial || material instanceof THREE.MeshDepthMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n      } // refresh single material specific uniforms\n\n\n      if (material instanceof THREE.LineBasicMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n      } else if (material instanceof THREE.LineDashedMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n        refreshUniformsDash(m_uniforms, material);\n      } else if (material instanceof THREE.PointsMaterial) {\n        refreshUniformsPoints(m_uniforms, material);\n      } else if (material instanceof THREE.MeshLambertMaterial) {\n        refreshUniformsLambert(m_uniforms, material);\n      } else if (material instanceof THREE.MeshPhongMaterial) {\n        refreshUniformsPhong(m_uniforms, material);\n      } else if (material instanceof THREE.MeshPhysicalMaterial) {\n        refreshUniformsPhysical(m_uniforms, material);\n      } else if (material instanceof THREE.MeshStandardMaterial) {\n        refreshUniformsStandard(m_uniforms, material);\n      } else if (material instanceof THREE.MeshDepthMaterial) {\n        if (material.displacementMap) {\n          m_uniforms.displacementMap.value = material.displacementMap;\n          m_uniforms.displacementScale.value = material.displacementScale;\n          m_uniforms.displacementBias.value = material.displacementBias;\n        }\n      } else if (material instanceof THREE.MeshNormalMaterial) {\n        m_uniforms.opacity.value = material.opacity;\n      }\n\n      THREE.WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n    } // common matrices\n\n\n    p_uniforms.set(_gl, object, 'modelViewMatrix');\n    p_uniforms.set(_gl, object, 'normalMatrix');\n    p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld); // dynamic uniforms\n\n    var dynUniforms = materialProperties.dynamicUniforms;\n\n    if (dynUniforms !== null) {\n      THREE.WebGLUniforms.evalDynamic(dynUniforms, m_uniforms, object, camera);\n      THREE.WebGLUniforms.upload(_gl, dynUniforms, m_uniforms, _this);\n    }\n\n    return program;\n  } // Uniforms (refresh uniforms objects)\n\n\n  function refreshUniformsCommon(uniforms, material) {\n    uniforms.opacity.value = material.opacity;\n    uniforms.diffuse.value = material.color;\n\n    if (material.emissive) {\n      uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n    }\n\n    uniforms.map.value = material.map;\n    uniforms.specularMap.value = material.specularMap;\n    uniforms.alphaMap.value = material.alphaMap;\n\n    if (material.aoMap) {\n      uniforms.aoMap.value = material.aoMap;\n      uniforms.aoMapIntensity.value = material.aoMapIntensity;\n    } // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. normal map\n    // 4. bump map\n    // 5. alpha map\n    // 6. emissive map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.displacementMap) {\n      uvScaleMap = material.displacementMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.roughnessMap) {\n      uvScaleMap = material.roughnessMap;\n    } else if (material.metalnessMap) {\n      uvScaleMap = material.metalnessMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    } else if (material.emissiveMap) {\n      uvScaleMap = material.emissiveMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      // backwards compatibility\n      if (uvScaleMap instanceof THREE.WebGLRenderTarget) {\n        uvScaleMap = uvScaleMap.texture;\n      }\n\n      var offset = uvScaleMap.offset;\n      var repeat = uvScaleMap.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n\n    uniforms.envMap.value = material.envMap; // don't flip CubeTexture envMaps, flip everything else:\n    //  WebGLRenderTargetCube will be flipped for backwards compatibility\n    //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n    // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n    uniforms.flipEnvMap.value = !(material.envMap instanceof THREE.CubeTexture) ? 1 : -1;\n    uniforms.reflectivity.value = material.reflectivity;\n    uniforms.refractionRatio.value = material.refractionRatio;\n  }\n\n  function refreshUniformsLine(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n  }\n\n  function refreshUniformsDash(uniforms, material) {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n\n  function refreshUniformsPoints(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size * _pixelRatio;\n    uniforms.scale.value = _canvas.clientHeight * 0.5;\n    uniforms.map.value = material.map;\n\n    if (material.map !== null) {\n      var offset = material.map.offset;\n      var repeat = material.map.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n  }\n\n  function refreshUniformsFog(uniforms, fog) {\n    uniforms.fogColor.value = fog.color;\n\n    if (fog instanceof THREE.Fog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog instanceof THREE.FogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n\n  function refreshUniformsLambert(uniforms, material) {\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n  }\n\n  function refreshUniformsPhong(uniforms, material) {\n    uniforms.specular.value = material.specular;\n    uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsStandard(uniforms, material) {\n    uniforms.roughness.value = material.roughness;\n    uniforms.metalness.value = material.metalness;\n\n    if (material.roughnessMap) {\n      uniforms.roughnessMap.value = material.roughnessMap;\n    }\n\n    if (material.metalnessMap) {\n      uniforms.metalnessMap.value = material.metalnessMap;\n    }\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    if (material.envMap) {\n      //uniforms.envMap.value = material.envMap; // part of uniforms common\n      uniforms.envMapIntensity.value = material.envMapIntensity;\n    }\n  }\n\n  function refreshUniformsPhysical(uniforms, material) {\n    refreshUniformsStandard(uniforms, material);\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  } // Lighting\n\n\n  function setupShadows(lights) {\n    var lightShadowsLength = 0;\n\n    for (var i = 0, l = lights.length; i < l; i++) {\n      var light = lights[i];\n\n      if (light.castShadow) {\n        _lights.shadows[lightShadowsLength++] = light;\n      }\n    }\n\n    _lights.shadows.length = lightShadowsLength;\n  }\n\n  function setupLights(lights, camera) {\n    var l,\n        ll,\n        light,\n        r = 0,\n        g = 0,\n        b = 0,\n        color,\n        intensity,\n        distance,\n        shadowMap,\n        viewMatrix = camera.matrixWorldInverse,\n        directionalLength = 0,\n        pointLength = 0,\n        spotLength = 0,\n        hemiLength = 0;\n\n    for (l = 0, ll = lights.length; l < ll; l++) {\n      light = lights[l];\n      color = light.color;\n      intensity = light.intensity;\n      distance = light.distance;\n      shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n      if (light instanceof THREE.AmbientLight) {\n        r += color.r * intensity;\n        g += color.g * intensity;\n        b += color.b * intensity;\n      } else if (light instanceof THREE.DirectionalLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        uniforms.direction.sub(_vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n        }\n\n        _lights.directionalShadowMap[directionalLength] = shadowMap;\n        _lights.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n        _lights.directional[directionalLength++] = uniforms;\n      } else if (light instanceof THREE.SpotLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(color).multiplyScalar(intensity);\n        uniforms.distance = distance;\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        uniforms.direction.sub(_vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.coneCos = Math.cos(light.angle);\n        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n        }\n\n        _lights.spotShadowMap[spotLength] = shadowMap;\n        _lights.spotShadowMatrix[spotLength] = light.shadow.matrix;\n        _lights.spot[spotLength++] = uniforms;\n      } else if (light instanceof THREE.PointLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.distance = light.distance;\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n        }\n\n        _lights.pointShadowMap[pointLength] = shadowMap;\n\n        if (_lights.pointShadowMatrix[pointLength] === undefined) {\n          _lights.pointShadowMatrix[pointLength] = new THREE.Matrix4();\n        } // for point lights we set the shadow matrix to be a translation-only matrix\n        // equal to inverse of the light's position\n\n\n        _vector3.setFromMatrixPosition(light.matrixWorld).negate();\n\n        _lights.pointShadowMatrix[pointLength].identity().setPosition(_vector3);\n\n        _lights.point[pointLength++] = uniforms;\n      } else if (light instanceof THREE.HemisphereLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.direction.normalize();\n        uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n        uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n        _lights.hemi[hemiLength++] = uniforms;\n      }\n    }\n\n    _lights.ambient[0] = r;\n    _lights.ambient[1] = g;\n    _lights.ambient[2] = b;\n    _lights.directional.length = directionalLength;\n    _lights.spot.length = spotLength;\n    _lights.point.length = pointLength;\n    _lights.hemi.length = hemiLength;\n    _lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\n  } // GL state setting\n\n\n  this.setFaceCulling = function (cullFace, frontFaceDirection) {\n    state.setCullFace(cullFace);\n    state.setFlipSided(frontFaceDirection === THREE.FrontFaceDirectionCW);\n  }; // Textures\n\n\n  function allocTextureUnit() {\n    var textureUnit = _usedTextureUnits;\n\n    if (textureUnit >= capabilities.maxTextures) {\n      console.warn('WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures);\n    }\n\n    _usedTextureUnits += 1;\n    return textureUnit;\n  }\n\n  function setTextureParameters(textureType, texture, isPowerOfTwoImage) {\n    var extension;\n\n    if (isPowerOfTwoImage) {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL(texture.wrapS));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL(texture.wrapT));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL(texture.minFilter));\n    } else {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n      if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture);\n      }\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n      if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture);\n      }\n    }\n\n    extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension) {\n      if (texture.type === THREE.FloatType && extensions.get('OES_texture_float_linear') === null) return;\n      if (texture.type === THREE.HalfFloatType && extensions.get('OES_texture_half_float_linear') === null) return;\n\n      if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, _this.getMaxAnisotropy()));\n\n        properties.get(texture).__currentAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n\n  function uploadTexture(textureProperties, texture, slot) {\n    if (textureProperties.__webglInit === undefined) {\n      textureProperties.__webglInit = true;\n      texture.addEventListener('dispose', onTextureDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      _infoMemory.textures++;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n    var image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n\n    if (textureNeedsPowerOfTwo(texture) && isPowerOfTwo(image) === false) {\n      image = makePowerOfTwo(image);\n    }\n\n    var isPowerOfTwoImage = isPowerOfTwo(image),\n        glFormat = paramThreeToGL(texture.format),\n        glType = paramThreeToGL(texture.type);\n    setTextureParameters(_gl.TEXTURE_2D, texture, isPowerOfTwoImage);\n    var mipmap,\n        mipmaps = texture.mipmaps;\n\n    if (texture instanceof THREE.DepthTexture) {\n      // populate depth texture with dummy data\n      var internalFormat = _gl.DEPTH_COMPONENT;\n\n      if (texture.type === THREE.FloatType) {\n        if (!_isWebGL2) throw new Error('Float Depth Texture only supported in WebGL2.0');\n        internalFormat = _gl.DEPTH_COMPONENT32F;\n      } else if (_isWebGL2) {\n        // WebGL 2.0 requires signed internalformat for glTexImage2D\n        internalFormat = _gl.DEPTH_COMPONENT16;\n      }\n\n      state.texImage2D(_gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null);\n    } else if (texture instanceof THREE.DataTexture) {\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n      }\n    } else if (texture instanceof THREE.CompressedTexture) {\n      for (var i = 0, il = mipmaps.length; i < il; i++) {\n        mipmap = mipmaps[i];\n\n        if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n          if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n            state.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n          } else {\n            console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\");\n          }\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n      }\n    } else {\n      // regular Texture (image, video, canvas)\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image);\n      }\n    }\n\n    if (texture.generateMipmaps && isPowerOfTwoImage) _gl.generateMipmap(_gl.TEXTURE_2D);\n    textureProperties.__version = texture.version;\n    if (texture.onUpdate) texture.onUpdate(texture);\n  }\n\n  function setTexture2D(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      var image = texture.image;\n\n      if (image === undefined) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined', texture);\n        return;\n      }\n\n      if (image.complete === false) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture);\n        return;\n      }\n\n      uploadTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n  }\n\n  function clampToMaxSize(image, maxSize) {\n    if (image.width > maxSize || image.height > maxSize) {\n      // Warning: Scaling through the canvas will only work with images that use\n      // premultiplied alpha.\n      var scale = maxSize / Math.max(image.width, image.height);\n      var canvas = document.createElement('canvas');\n      canvas.width = Math.floor(image.width * scale);\n      canvas.height = Math.floor(image.height * scale);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n      console.warn('THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function isPowerOfTwo(image) {\n    return THREE.Math.isPowerOfTwo(image.width) && THREE.Math.isPowerOfTwo(image.height);\n  }\n\n  function textureNeedsPowerOfTwo(texture) {\n    if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) return true;\n    if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) return true;\n    return false;\n  }\n\n  function makePowerOfTwo(image) {\n    if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n      var canvas = document.createElement('canvas');\n      canvas.width = THREE.Math.nearestPowerOfTwo(image.width);\n      canvas.height = THREE.Math.nearestPowerOfTwo(image.height);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n      console.warn('THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function setTextureCube(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image.length === 6) {\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        if (!textureProperties.__image__webglTextureCube) {\n          texture.addEventListener('dispose', onTextureDispose);\n          textureProperties.__image__webglTextureCube = _gl.createTexture();\n          _infoMemory.textures++;\n        }\n\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n        var isCompressed = texture instanceof THREE.CompressedTexture;\n        var isDataTexture = texture.image[0] instanceof THREE.DataTexture;\n        var cubeImage = [];\n\n        for (var i = 0; i < 6; i++) {\n          if (_this.autoScaleCubemaps && !isCompressed && !isDataTexture) {\n            cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n          } else {\n            cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n          }\n        }\n\n        var image = cubeImage[0],\n            isPowerOfTwoImage = isPowerOfTwo(image),\n            glFormat = paramThreeToGL(texture.format),\n            glType = paramThreeToGL(texture.type);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage);\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed) {\n            if (isDataTexture) {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n            } else {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n            }\n          } else {\n            var mipmap,\n                mipmaps = cubeImage[i].mipmaps;\n\n            for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n              mipmap = mipmaps[j];\n\n              if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n                if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                  state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                } else {\n                  console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\");\n                }\n              } else {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n        }\n\n        if (texture.generateMipmaps && isPowerOfTwoImage) {\n          _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n\n        textureProperties.__version = texture.version;\n        if (texture.onUpdate) texture.onUpdate(texture);\n      } else {\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n      }\n    }\n  }\n\n  function setTextureCubeDynamic(texture, slot) {\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(texture).__webglTexture);\n  }\n\n  this.allocTextureUnit = allocTextureUnit; //this.setTexture2D = setTexture2D;\n\n  this.setTexture2D = function () {\n    var warned = false; // backwards compatibility: peel texture.texture\n\n    return function (texture, slot) {\n      if (texture instanceof THREE.WebGLRenderTarget) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\");\n          warned = true;\n        }\n\n        texture = texture.texture;\n      }\n\n      setTexture2D(texture, slot);\n    };\n  }();\n\n  this.setTexture = function () {\n    var warned = false;\n    return function (texture, slot) {\n      if (!warned) {\n        console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\");\n        warned = true;\n      }\n\n      _this.setTexture2D(texture, slot);\n    };\n  }();\n\n  this.setTextureCube = function () {\n    var warned = false;\n    return function (texture, slot) {\n      // backwards compatibility: peel texture.texture\n      if (texture instanceof THREE.WebGLRenderTargetCube) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");\n          warned = true;\n        }\n\n        texture = texture.texture;\n      } // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n      // TODO: unify these code paths\n\n\n      if (texture instanceof THREE.CubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n        // CompressedTexture can have Array in image :/\n        // this function alone should take care of cube textures\n        setTextureCube(texture, slot);\n      } else {\n        // assumed: texture property of THREE.WebGLRenderTargetCube\n        setTextureCubeDynamic(texture, slot);\n      }\n    };\n  }(); // Render targets\n  // Setup storage for target texture and bind it to correct framebuffer\n\n\n  function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n    var glFormat = paramThreeToGL(renderTarget.texture.format);\n    var glType = paramThreeToGL(renderTarget.texture.type);\n    state.texImage2D(textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n  function setupRenderBufferStorage(renderbuffer, renderTarget) {\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else {\n      // FIXME: We don't support !depth !stencil\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n    }\n\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n  } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n  function setupDepthTexture(framebuffer, renderTarget) {\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n    if (isCube) throw new Error('Depth Texture with cube render targets is not supported!');\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    if (!(renderTarget.depthTexture instanceof THREE.DepthTexture)) {\n      throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n    } // upload an empty depth texture with framebuffer size\n\n\n    if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n      renderTarget.depthTexture.image.width = renderTarget.width;\n      renderTarget.depthTexture.image.height = renderTarget.height;\n      renderTarget.depthTexture.needsUpdate = true;\n    }\n\n    _this.setTexture2D(renderTarget.depthTexture, 0);\n\n    var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n  } // Setup GL resources for a non-texture depth buffer\n\n\n  function setupDepthRenderbuffer(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n\n    if (renderTarget.depthTexture) {\n      if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n      setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n    } else {\n      if (isCube) {\n        renderTargetProperties.__webglDepthbuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\n          renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n        }\n      } else {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n        renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n        setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n      }\n    }\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Set up GL resources for the render target\n\n\n  function setupRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    renderTarget.addEventListener('dispose', onRenderTargetDispose);\n    textureProperties.__webglTexture = _gl.createTexture();\n    _infoMemory.textures++;\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n    var isTargetPowerOfTwo = THREE.Math.isPowerOfTwo(renderTarget.width) && THREE.Math.isPowerOfTwo(renderTarget.height); // Setup framebuffer\n\n    if (isCube) {\n      renderTargetProperties.__webglFramebuffer = [];\n\n      for (var i = 0; i < 6; i++) {\n        renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n      }\n    } else {\n      renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n    } // Setup color buffer\n\n\n    if (isCube) {\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo);\n\n      for (var i = 0; i < 6; i++) {\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n      }\n\n      if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    } else {\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo);\n      setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n      if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_2D);\n      state.bindTexture(_gl.TEXTURE_2D, null);\n    } // Setup depth and stencil buffers\n\n\n    if (renderTarget.depthBuffer) {\n      setupDepthRenderbuffer(renderTarget);\n    }\n  }\n\n  this.getCurrentRenderTarget = function () {\n    return _currentRenderTarget;\n  };\n\n  this.setRenderTarget = function (renderTarget) {\n    _currentRenderTarget = renderTarget;\n\n    if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n      setupRenderTarget(renderTarget);\n    }\n\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n    var framebuffer;\n\n    if (renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n\n      if (isCube) {\n        framebuffer = renderTargetProperties.__webglFramebuffer[renderTarget.activeCubeFace];\n      } else {\n        framebuffer = renderTargetProperties.__webglFramebuffer;\n      }\n\n      _currentScissor.copy(renderTarget.scissor);\n\n      _currentScissorTest = renderTarget.scissorTest;\n\n      _currentViewport.copy(renderTarget.viewport);\n    } else {\n      framebuffer = null;\n\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);\n\n      _currentScissorTest = _scissorTest;\n\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);\n    }\n\n    if (_currentFramebuffer !== framebuffer) {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _currentFramebuffer = framebuffer;\n    }\n\n    state.scissor(_currentScissor);\n    state.setScissorTest(_currentScissorTest);\n    state.viewport(_currentViewport);\n\n    if (isCube) {\n      var textureProperties = properties.get(renderTarget.texture);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n    }\n  };\n\n  this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n    if (renderTarget instanceof THREE.WebGLRenderTarget === false) {\n      console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n      return;\n    }\n\n    var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n    if (framebuffer) {\n      var restore = false;\n\n      if (framebuffer !== _currentFramebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n        restore = true;\n      }\n\n      try {\n        var texture = renderTarget.texture;\n\n        if (texture.format !== THREE.RGBAFormat && paramThreeToGL(texture.format) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n          return;\n        }\n\n        if (texture.type !== THREE.UnsignedByteType && paramThreeToGL(texture.type) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && !(texture.type === THREE.FloatType && extensions.get('WEBGL_color_buffer_float')) && !(texture.type === THREE.HalfFloatType && extensions.get('EXT_color_buffer_half_float'))) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n          return;\n        }\n\n        if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n          // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n          if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n            _gl.readPixels(x, y, width, height, paramThreeToGL(texture.format), paramThreeToGL(texture.type), buffer);\n          }\n        } else {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n        }\n      } finally {\n        if (restore) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, _currentFramebuffer);\n        }\n      }\n    }\n  };\n\n  function updateRenderTargetMipmap(renderTarget) {\n    var target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n    var texture = properties.get(renderTarget.texture).__webglTexture;\n\n    state.bindTexture(target, texture);\n\n    _gl.generateMipmap(target);\n\n    state.bindTexture(target, null);\n  } // Fallback filters for non-power-of-2 textures\n\n\n  function filterFallback(f) {\n    if (f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter) {\n      return _gl.NEAREST;\n    }\n\n    return _gl.LINEAR;\n  } // Map three.js constants to WebGL constants\n\n\n  function paramThreeToGL(p) {\n    var extension;\n    if (p === THREE.RepeatWrapping) return _gl.REPEAT;\n    if (p === THREE.ClampToEdgeWrapping) return _gl.CLAMP_TO_EDGE;\n    if (p === THREE.MirroredRepeatWrapping) return _gl.MIRRORED_REPEAT;\n    if (p === THREE.NearestFilter) return _gl.NEAREST;\n    if (p === THREE.NearestMipMapNearestFilter) return _gl.NEAREST_MIPMAP_NEAREST;\n    if (p === THREE.NearestMipMapLinearFilter) return _gl.NEAREST_MIPMAP_LINEAR;\n    if (p === THREE.LinearFilter) return _gl.LINEAR;\n    if (p === THREE.LinearMipMapNearestFilter) return _gl.LINEAR_MIPMAP_NEAREST;\n    if (p === THREE.LinearMipMapLinearFilter) return _gl.LINEAR_MIPMAP_LINEAR;\n    if (p === THREE.UnsignedByteType) return _gl.UNSIGNED_BYTE;\n    if (p === THREE.UnsignedShort4444Type) return _gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === THREE.UnsignedShort5551Type) return _gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === THREE.UnsignedShort565Type) return _gl.UNSIGNED_SHORT_5_6_5;\n    if (p === THREE.ByteType) return _gl.BYTE;\n    if (p === THREE.ShortType) return _gl.SHORT;\n    if (p === THREE.UnsignedShortType) return _gl.UNSIGNED_SHORT;\n    if (p === THREE.IntType) return _gl.INT;\n    if (p === THREE.UnsignedIntType) return _gl.UNSIGNED_INT;\n    if (p === THREE.FloatType) return _gl.FLOAT;\n    extension = extensions.get('OES_texture_half_float');\n\n    if (extension !== null) {\n      if (p === THREE.HalfFloatType) return extension.HALF_FLOAT_OES;\n    }\n\n    if (p === THREE.AlphaFormat) return _gl.ALPHA;\n    if (p === THREE.RGBFormat) return _gl.RGB;\n    if (p === THREE.RGBAFormat) return _gl.RGBA;\n    if (p === THREE.LuminanceFormat) return _gl.LUMINANCE;\n    if (p === THREE.LuminanceAlphaFormat) return _gl.LUMINANCE_ALPHA;\n    if (p === THREE.DepthFormat) return _gl.DEPTH_COMPONENT;\n    if (p === THREE.AddEquation) return _gl.FUNC_ADD;\n    if (p === THREE.SubtractEquation) return _gl.FUNC_SUBTRACT;\n    if (p === THREE.ReverseSubtractEquation) return _gl.FUNC_REVERSE_SUBTRACT;\n    if (p === THREE.ZeroFactor) return _gl.ZERO;\n    if (p === THREE.OneFactor) return _gl.ONE;\n    if (p === THREE.SrcColorFactor) return _gl.SRC_COLOR;\n    if (p === THREE.OneMinusSrcColorFactor) return _gl.ONE_MINUS_SRC_COLOR;\n    if (p === THREE.SrcAlphaFactor) return _gl.SRC_ALPHA;\n    if (p === THREE.OneMinusSrcAlphaFactor) return _gl.ONE_MINUS_SRC_ALPHA;\n    if (p === THREE.DstAlphaFactor) return _gl.DST_ALPHA;\n    if (p === THREE.OneMinusDstAlphaFactor) return _gl.ONE_MINUS_DST_ALPHA;\n    if (p === THREE.DstColorFactor) return _gl.DST_COLOR;\n    if (p === THREE.OneMinusDstColorFactor) return _gl.ONE_MINUS_DST_COLOR;\n    if (p === THREE.SrcAlphaSaturateFactor) return _gl.SRC_ALPHA_SATURATE;\n    extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n      if (p === THREE.RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n    }\n\n    extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n    }\n\n    extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_ETC1_Format) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n    }\n\n    extension = extensions.get('EXT_blend_minmax');\n\n    if (extension !== null) {\n      if (p === THREE.MinEquation) return extension.MIN_EXT;\n      if (p === THREE.MaxEquation) return extension.MAX_EXT;\n    }\n\n    return 0;\n  }\n}; // File:src/renderers/WebGLRenderTarget.js\n\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author Marius Kintel / https://github.com/kintel\r\n */\n\n/*\r\n In options, we can specify:\r\n * Texture parameters for an auto-generated target texture\r\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n*/\n\n\nTHREE.WebGLRenderTarget = function (width, height, options) {\n  this.uuid = THREE.Math.generateUUID();\n  this.width = width;\n  this.height = height;\n  this.scissor = new THREE.Vector4(0, 0, width, height);\n  this.scissorTest = false;\n  this.viewport = new THREE.Vector4(0, 0, width, height);\n  options = options || {};\n  if (options.minFilter === undefined) options.minFilter = THREE.LinearFilter;\n  this.texture = new THREE.Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n  this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n  this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n  this.depthTexture = null;\n};\n\nObject.assign(THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {\n  setSize: function setSize(width, height) {\n    if (this.width !== width || this.height !== height) {\n      this.width = width;\n      this.height = height;\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.viewport.copy(source.viewport);\n    this.texture = source.texture.clone();\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.depthTexture = source.depthTexture;\n    return this;\n  },\n  dispose: function dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n}); // File:src/renderers/WebGLRenderTargetCube.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\n\nTHREE.WebGLRenderTargetCube = function (width, height, options) {\n  THREE.WebGLRenderTarget.call(this, width, height, options);\n  this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n  this.activeMipMapLevel = 0;\n};\n\nTHREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype);\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube; // File:src/renderers/webgl/WebGLBufferRenderer.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\nTHREE.WebGLBufferRenderer = function (_gl, extensions, _infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  function render(start, count) {\n    _gl.drawArrays(mode, start, count);\n\n    _infoRender.calls++;\n    _infoRender.vertices += count;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n  }\n\n  function renderInstances(geometry) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n\n    var position = geometry.attributes.position;\n    var count = 0;\n\n    if (position instanceof THREE.InterleavedBufferAttribute) {\n      count = position.data.count;\n      extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n    } else {\n      count = position.count;\n      extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n    }\n\n    _infoRender.calls++;\n    _infoRender.vertices += count * geometry.maxInstancedCount;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n  }\n\n  this.setMode = setMode;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}; // File:src/renderers/webgl/WebGLClipping.js\n\n\nTHREE.WebGLClipping = function () {\n  var scope = this,\n      globalState = null,\n      numGlobalPlanes = 0,\n      localClippingEnabled = false,\n      renderingShadows = false,\n      plane = new THREE.Plane(),\n      viewNormalMatrix = new THREE.Matrix3(),\n      uniform = {\n    value: null,\n    needsUpdate: false\n  };\n  this.uniform = uniform;\n  this.numPlanes = 0;\n\n  this.init = function (planes, enableLocalClipping, camera) {\n    var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n    // run another frame in order to reset the state:\n    numGlobalPlanes !== 0 || localClippingEnabled;\n    localClippingEnabled = enableLocalClipping;\n    globalState = projectPlanes(planes, camera, 0);\n    numGlobalPlanes = planes.length;\n    return enabled;\n  };\n\n  this.beginShadows = function () {\n    renderingShadows = true;\n    projectPlanes(null);\n  };\n\n  this.endShadows = function () {\n    renderingShadows = false;\n    resetGlobalState();\n  };\n\n  this.setState = function (planes, clipShadows, camera, cache, fromCache) {\n    if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n      // there's no local clipping\n      if (renderingShadows) {\n        // there's no global clipping\n        projectPlanes(null);\n      } else {\n        resetGlobalState();\n      }\n    } else {\n      var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n          lGlobal = nGlobal * 4,\n          dstArray = cache.clippingState || null;\n      uniform.value = dstArray; // ensure unique state\n\n      dstArray = projectPlanes(planes, camera, lGlobal, fromCache);\n\n      for (var i = 0; i !== lGlobal; ++i) {\n        dstArray[i] = globalState[i];\n      }\n\n      cache.clippingState = dstArray;\n      this.numPlanes += nGlobal;\n    }\n  };\n\n  function resetGlobalState() {\n    if (uniform.value !== globalState) {\n      uniform.value = globalState;\n      uniform.needsUpdate = numGlobalPlanes > 0;\n    }\n\n    scope.numPlanes = numGlobalPlanes;\n  }\n\n  function projectPlanes(planes, camera, dstOffset, skipTransform) {\n    var nPlanes = planes !== null ? planes.length : 0,\n        dstArray = null;\n\n    if (nPlanes !== 0) {\n      dstArray = uniform.value;\n\n      if (skipTransform !== true || dstArray === null) {\n        var flatSize = dstOffset + nPlanes * 4,\n            viewMatrix = camera.matrixWorldInverse;\n        viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n        if (dstArray === null || dstArray.length < flatSize) {\n          dstArray = new Float32Array(flatSize);\n        }\n\n        for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n          plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n          plane.normal.toArray(dstArray, i4);\n          dstArray[i4 + 3] = plane.constant;\n        }\n      }\n\n      uniform.value = dstArray;\n      uniform.needsUpdate = true;\n    }\n\n    scope.numPlanes = nPlanes;\n    return dstArray;\n  }\n}; // File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLIndexedBufferRenderer = function (_gl, extensions, _infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  var type, size;\n\n  function setIndex(index) {\n    if (index.array instanceof Uint32Array && extensions.get('OES_element_index_uint')) {\n      type = _gl.UNSIGNED_INT;\n      size = 4;\n    } else {\n      type = _gl.UNSIGNED_SHORT;\n      size = 2;\n    }\n  }\n\n  function render(start, count) {\n    _gl.drawElements(mode, count, type, start * size);\n\n    _infoRender.calls++;\n    _infoRender.vertices += count;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n  }\n\n  function renderInstances(geometry, start, count) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n\n    extension.drawElementsInstancedANGLE(mode, count, type, start * size, geometry.maxInstancedCount);\n    _infoRender.calls++;\n    _infoRender.vertices += count * geometry.maxInstancedCount;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n  }\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}; // File:src/renderers/webgl/WebGLExtensions.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLExtensions = function (gl) {\n  var extensions = {};\n\n  this.get = function (name) {\n    if (extensions[name] !== undefined) {\n      return extensions[name];\n    }\n\n    var extension;\n\n    switch (name) {\n      case 'WEBGL_depth_texture':\n        extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n        break;\n\n      case 'EXT_texture_filter_anisotropic':\n        extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n        break;\n\n      case 'WEBGL_compressed_texture_s3tc':\n        extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n        break;\n\n      case 'WEBGL_compressed_texture_pvrtc':\n        extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n        break;\n\n      case 'WEBGL_compressed_texture_etc1':\n        extension = gl.getExtension('WEBGL_compressed_texture_etc1');\n        break;\n\n      default:\n        extension = gl.getExtension(name);\n    }\n\n    if (extension === null) {\n      console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n    }\n\n    extensions[name] = extension;\n    return extension;\n  };\n}; // File:src/renderers/webgl/WebGLCapabilities.js\n\n\nTHREE.WebGLCapabilities = function (gl, extensions, parameters) {\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n\n      precision = 'mediump';\n    }\n\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n\n    return 'lowp';\n  }\n\n  this.getMaxPrecision = getMaxPrecision;\n  this.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n  this.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\n  this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  this.maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n  this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  this.maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n  this.maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  this.maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n  this.maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n  this.maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n  this.vertexTextures = this.maxVertexTextures > 0;\n  this.floatFragmentTextures = !!extensions.get('OES_texture_float');\n  this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n\n  var _maxPrecision = getMaxPrecision(this.precision);\n\n  if (_maxPrecision !== this.precision) {\n    console.warn('THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.');\n    this.precision = _maxPrecision;\n  }\n\n  if (this.logarithmicDepthBuffer) {\n    this.logarithmicDepthBuffer = !!extensions.get('EXT_frag_depth');\n  }\n}; // File:src/renderers/webgl/WebGLGeometries.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLGeometries = function (gl, properties, info) {\n  var geometries = {};\n\n  function get(object) {\n    var geometry = object.geometry;\n\n    if (geometries[geometry.id] !== undefined) {\n      return geometries[geometry.id];\n    }\n\n    geometry.addEventListener('dispose', onGeometryDispose);\n    var buffergeometry;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      buffergeometry = geometry;\n    } else if (geometry instanceof THREE.Geometry) {\n      if (geometry._bufferGeometry === undefined) {\n        geometry._bufferGeometry = new THREE.BufferGeometry().setFromObject(object);\n      }\n\n      buffergeometry = geometry._bufferGeometry;\n    }\n\n    geometries[geometry.id] = buffergeometry;\n    info.memory.geometries++;\n    return buffergeometry;\n  }\n\n  function onGeometryDispose(event) {\n    var geometry = event.target;\n    var buffergeometry = geometries[geometry.id];\n\n    if (buffergeometry.index !== null) {\n      deleteAttribute(buffergeometry.index);\n    }\n\n    deleteAttributes(buffergeometry.attributes);\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    delete geometries[geometry.id]; // TODO\n\n    var property = properties.get(geometry);\n\n    if (property.wireframe) {\n      deleteAttribute(property.wireframe);\n    }\n\n    properties[\"delete\"](geometry);\n    var bufferproperty = properties.get(buffergeometry);\n\n    if (bufferproperty.wireframe) {\n      deleteAttribute(bufferproperty.wireframe);\n    }\n\n    properties[\"delete\"](buffergeometry); //\n\n    info.memory.geometries--;\n  }\n\n  function getAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      return properties.get(attribute.data).__webglBuffer;\n    }\n\n    return properties.get(attribute).__webglBuffer;\n  }\n\n  function deleteAttribute(attribute) {\n    var buffer = getAttributeBuffer(attribute);\n\n    if (buffer !== undefined) {\n      gl.deleteBuffer(buffer);\n      removeAttributeBuffer(attribute);\n    }\n  }\n\n  function deleteAttributes(attributes) {\n    for (var name in attributes) {\n      deleteAttribute(attributes[name]);\n    }\n  }\n\n  function removeAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      properties[\"delete\"](attribute.data);\n    } else {\n      properties[\"delete\"](attribute);\n    }\n  }\n\n  this.get = get;\n}; // File:src/renderers/webgl/WebGLLights.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLLights = function () {\n  var lights = {};\n\n  this.get = function (light) {\n    if (lights[light.id] !== undefined) {\n      return lights[light.id];\n    }\n\n    var uniforms;\n\n    switch (light.type) {\n      case 'DirectionalLight':\n        uniforms = {\n          direction: new THREE.Vector3(),\n          color: new THREE.Color(),\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'SpotLight':\n        uniforms = {\n          position: new THREE.Vector3(),\n          direction: new THREE.Vector3(),\n          color: new THREE.Color(),\n          distance: 0,\n          coneCos: 0,\n          penumbraCos: 0,\n          decay: 0,\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'PointLight':\n        uniforms = {\n          position: new THREE.Vector3(),\n          color: new THREE.Color(),\n          distance: 0,\n          decay: 0,\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'HemisphereLight':\n        uniforms = {\n          direction: new THREE.Vector3(),\n          skyColor: new THREE.Color(),\n          groundColor: new THREE.Color()\n        };\n        break;\n    }\n\n    lights[light.id] = uniforms;\n    return uniforms;\n  };\n}; // File:src/renderers/webgl/WebGLObjects.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLObjects = function (gl, properties, info) {\n  var geometries = new THREE.WebGLGeometries(gl, properties, info); //\n\n  function update(object) {\n    // TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n    var geometry = geometries.get(object);\n\n    if (object.geometry instanceof THREE.Geometry) {\n      geometry.updateFromObject(object);\n    }\n\n    var index = geometry.index;\n    var attributes = geometry.attributes;\n\n    if (index !== null) {\n      updateAttribute(index, gl.ELEMENT_ARRAY_BUFFER);\n    }\n\n    for (var name in attributes) {\n      updateAttribute(attributes[name], gl.ARRAY_BUFFER);\n    } // morph targets\n\n\n    var morphAttributes = geometry.morphAttributes;\n\n    for (var name in morphAttributes) {\n      var array = morphAttributes[name];\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        updateAttribute(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n\n    return geometry;\n  }\n\n  function updateAttribute(attribute, bufferType) {\n    var data = attribute instanceof THREE.InterleavedBufferAttribute ? attribute.data : attribute;\n    var attributeProperties = properties.get(data);\n\n    if (attributeProperties.__webglBuffer === undefined) {\n      createBuffer(attributeProperties, data, bufferType);\n    } else if (attributeProperties.version !== data.version) {\n      updateBuffer(attributeProperties, data, bufferType);\n    }\n  }\n\n  function createBuffer(attributeProperties, data, bufferType) {\n    attributeProperties.__webglBuffer = gl.createBuffer();\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n    var usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(bufferType, data.array, usage);\n    attributeProperties.version = data.version;\n  }\n\n  function updateBuffer(attributeProperties, data, bufferType) {\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n\n    if (data.dynamic === false || data.updateRange.count === -1) {\n      // Not using update ranges\n      gl.bufferSubData(bufferType, 0, data.array);\n    } else if (data.updateRange.count === 0) {\n      console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');\n    } else {\n      gl.bufferSubData(bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT, data.array.subarray(data.updateRange.offset, data.updateRange.offset + data.updateRange.count));\n      data.updateRange.count = 0; // reset range\n    }\n\n    attributeProperties.version = data.version;\n  }\n\n  function getAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      return properties.get(attribute.data).__webglBuffer;\n    }\n\n    return properties.get(attribute).__webglBuffer;\n  }\n\n  function getWireframeAttribute(geometry) {\n    var property = properties.get(geometry);\n\n    if (property.wireframe !== undefined) {\n      return property.wireframe;\n    }\n\n    var indices = [];\n    var index = geometry.index;\n    var attributes = geometry.attributes;\n    var position = attributes.position; // console.time( 'wireframe' );\n\n    if (index !== null) {\n      var edges = {};\n      var array = index.array;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var a = array[i + 0];\n        var b = array[i + 1];\n        var c = array[i + 2];\n        if (checkEdge(edges, a, b)) indices.push(a, b);\n        if (checkEdge(edges, b, c)) indices.push(b, c);\n        if (checkEdge(edges, c, a)) indices.push(c, a);\n      }\n    } else {\n      var array = attributes.position.array;\n\n      for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        var a = i + 0;\n        var b = i + 1;\n        var c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    } // console.timeEnd( 'wireframe' );\n\n\n    var TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n    var attribute = new THREE.BufferAttribute(new TypeArray(indices), 1);\n    updateAttribute(attribute, gl.ELEMENT_ARRAY_BUFFER);\n    property.wireframe = attribute;\n    return attribute;\n  }\n\n  function checkEdge(edges, a, b) {\n    if (a > b) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var list = edges[a];\n\n    if (list === undefined) {\n      edges[a] = [b];\n      return true;\n    } else if (list.indexOf(b) === -1) {\n      list.push(b);\n      return true;\n    }\n\n    return false;\n  }\n\n  this.getAttributeBuffer = getAttributeBuffer;\n  this.getWireframeAttribute = getWireframeAttribute;\n  this.update = update;\n}; // File:src/renderers/webgl/WebGLProgram.js\n\n\nTHREE.WebGLProgram = function () {\n  var programIdCount = 0;\n\n  function getEncodingComponents(encoding) {\n    switch (encoding) {\n      case THREE.LinearEncoding:\n        return ['Linear', '( value )'];\n\n      case THREE.sRGBEncoding:\n        return ['sRGB', '( value )'];\n\n      case THREE.RGBEEncoding:\n        return ['RGBE', '( value )'];\n\n      case THREE.RGBM7Encoding:\n        return ['RGBM', '( value, 7.0 )'];\n\n      case THREE.RGBM16Encoding:\n        return ['RGBM', '( value, 16.0 )'];\n\n      case THREE.RGBDEncoding:\n        return ['RGBD', '( value, 256.0 )'];\n\n      case THREE.GammaEncoding:\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n      default:\n        throw new Error('unsupported encoding: ' + encoding);\n    }\n  }\n\n  function getTexelDecodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[0] + \"ToLinear\" + components[1] + \"; }\";\n  }\n\n  function getTexelEncodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[0] + components[1] + \"; }\";\n  }\n\n  function getToneMappingFunction(functionName, toneMapping) {\n    var toneMappingName;\n\n    switch (toneMapping) {\n      case THREE.LinearToneMapping:\n        toneMappingName = \"Linear\";\n        break;\n\n      case THREE.ReinhardToneMapping:\n        toneMappingName = \"Reinhard\";\n        break;\n\n      case THREE.Uncharted2ToneMapping:\n        toneMappingName = \"Uncharted2\";\n        break;\n\n      case THREE.CineonToneMapping:\n        toneMappingName = \"OptimizedCineon\";\n        break;\n\n      default:\n        throw new Error('unsupported toneMapping: ' + toneMapping);\n    }\n\n    return \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n  }\n\n  function generateExtensions(extensions, parameters, rendererExtensions) {\n    extensions = extensions || {};\n    var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n    return chunks.filter(filterEmptyLine).join('\\n');\n  }\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var value = defines[name];\n      if (value === false) continue;\n      chunks.push('#define ' + name + ' ' + value);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchAttributeLocations(gl, program, identifiers) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveAttrib(program, i);\n      var name = info.name; // console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n      attributes[name] = gl.getAttribLocation(program, name);\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  function replaceLightNums(string, parameters) {\n    return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n  }\n\n  function parseIncludes(string) {\n    var pattern = /#include +<([\\w\\d.]+)>/g;\n\n    function replace(match, include) {\n      var replace = THREE.ShaderChunk[include];\n\n      if (replace === undefined) {\n        throw new Error('Can not resolve #include <' + include + '>');\n      }\n\n      return parseIncludes(replace);\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  function unrollLoops(string) {\n    var pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n    function replace(match, start, end, snippet) {\n      var unroll = '';\n\n      for (var i = parseInt(start); i < parseInt(end); i++) {\n        unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n      }\n\n      return unroll;\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  return function WebGLProgram(renderer, code, material, parameters) {\n    var gl = renderer.context;\n    var extensions = material.extensions;\n    var defines = material.defines;\n    var vertexShader = material.__webglShader.vertexShader;\n    var fragmentShader = material.__webglShader.fragmentShader;\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === THREE.PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === THREE.PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    }\n\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n    if (parameters.envMap) {\n      switch (material.envMap.mapping) {\n        case THREE.CubeReflectionMapping:\n        case THREE.CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case THREE.CubeUVReflectionMapping:\n        case THREE.CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n\n        case THREE.EquirectangularReflectionMapping:\n        case THREE.EquirectangularRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n\n        case THREE.SphericalReflectionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n\n      switch (material.envMap.mapping) {\n        case THREE.CubeRefractionMapping:\n        case THREE.EquirectangularRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n\n      switch (material.combine) {\n        case THREE.MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case THREE.MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case THREE.AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n    //\n\n    var customExtensions = generateExtensions(extensions, parameters, renderer.extensions);\n    var customDefines = generateDefines(defines); //\n\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n\n    if (material instanceof THREE.RawShaderMaterial) {\n      prefixVertex = '';\n      prefixFragment = '';\n    } else {\n      prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes, parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes, parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '', parameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && renderer.extensions.get('EXT_shader_texture_lod') ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', parameters.toneMapping !== THREE.NoToneMapping ? \"#define TONE_MAPPING\" : '', parameters.toneMapping !== THREE.NoToneMapping ? THREE.ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== THREE.NoToneMapping ? getToneMappingFunction(\"toneMapping\", parameters.toneMapping) : '', parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? THREE.ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction(\"linearToOutputTexel\", parameters.outputEncoding) : '', parameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    vertexShader = parseIncludes(vertexShader, parameters);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    fragmentShader = parseIncludes(fragmentShader, parameters);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n\n    if (material instanceof THREE.ShaderMaterial === false) {\n      vertexShader = unrollLoops(vertexShader);\n      fragmentShader = unrollLoops(fragmentShader);\n    }\n\n    var vertexGlsl = prefixVertex + vertexShader;\n    var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n    // console.log( '*FRAGMENT*', fragmentGlsl );\n\n    var glVertexShader = THREE.WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n    var glFragmentShader = THREE.WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (material.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, material.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program);\n    var programLog = gl.getProgramInfoLog(program);\n    var vertexLog = gl.getShaderInfoLog(glVertexShader);\n    var fragmentLog = gl.getShaderInfoLog(glFragmentShader);\n    var runnable = true;\n    var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n    // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n      console.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        material: material,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    } // clean up\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = new THREE.WebGLUniforms(gl, program, renderer);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; // DEPRECATED\n\n\n    Object.defineProperties(this, {\n      uniforms: {\n        get: function get() {\n          console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');\n          return this.getUniforms();\n        }\n      },\n      attributes: {\n        get: function get() {\n          console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');\n          return this.getAttributes();\n        }\n      }\n    }); //\n\n    this.id = programIdCount++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  };\n}(); // File:src/renderers/webgl/WebGLPrograms.js\n\n\nTHREE.WebGLPrograms = function (renderer, capabilities) {\n  var programs = [];\n  var shaderIDs = {\n    MeshDepthMaterial: 'depth',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    MeshStandardMaterial: 'physical',\n    MeshPhysicalMaterial: 'physical',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points'\n  };\n  var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights', \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"depthPacking\"];\n\n  function allocateBones(object) {\n    if (capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture) {\n      return 1024;\n    } else {\n      // default for when object is not specified\n      // ( for example when prebuilding shader to be used with multiple objects )\n      //\n      //  - leave some extra space for other uniforms\n      //  - limit here is ANGLE's 254 max uniform vectors\n      //    (up to 54 should be safe)\n      var nVertexUniforms = capabilities.maxVertexUniforms;\n      var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n      var maxBones = nVertexMatrices;\n\n      if (object !== undefined && object instanceof THREE.SkinnedMesh) {\n        maxBones = Math.min(object.skeleton.bones.length, maxBones);\n\n        if (maxBones < object.skeleton.bones.length) {\n          console.warn('WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)');\n        }\n      }\n\n      return maxBones;\n    }\n  }\n\n  function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n    var encoding;\n\n    if (!map) {\n      encoding = THREE.LinearEncoding;\n    } else if (map instanceof THREE.Texture) {\n      encoding = map.encoding;\n    } else if (map instanceof THREE.WebGLRenderTarget) {\n      console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n      encoding = map.texture.encoding;\n    } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n    if (encoding === THREE.LinearEncoding && gammaOverrideLinear) {\n      encoding = THREE.GammaEncoding;\n    }\n\n    return encoding;\n  }\n\n  this.getParameters = function (material, lights, fog, nClipPlanes, object) {\n    var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    var maxBones = allocateBones(object);\n    var precision = renderer.getPrecision();\n\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n\n      if (precision !== material.precision) {\n        console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n      }\n    }\n\n    var currentRenderTarget = renderer.getCurrentRenderTarget();\n    var parameters = {\n      shaderID: shaderID,\n      precision: precision,\n      supportsVertexTextures: capabilities.vertexTextures,\n      outputEncoding: getTextureEncodingFromMap(!currentRenderTarget ? null : currentRenderTarget.texture, renderer.gammaOutput),\n      map: !!material.map,\n      mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n      envMap: !!material.envMap,\n      envMapMode: material.envMap && material.envMap.mapping,\n      envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n      envMapCubeUV: !!material.envMap && (material.envMap.mapping === THREE.CubeUVReflectionMapping || material.envMap.mapping === THREE.CubeUVRefractionMapping),\n      lightMap: !!material.lightMap,\n      aoMap: !!material.aoMap,\n      emissiveMap: !!material.emissiveMap,\n      emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      displacementMap: !!material.displacementMap,\n      roughnessMap: !!material.roughnessMap,\n      metalnessMap: !!material.metalnessMap,\n      specularMap: !!material.specularMap,\n      alphaMap: !!material.alphaMap,\n      combine: material.combine,\n      vertexColors: material.vertexColors,\n      fog: fog,\n      useFog: material.fog,\n      fogExp: fog instanceof THREE.FogExp2,\n      flatShading: material.shading === THREE.FlatShading,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n      skinning: material.skinning,\n      maxBones: maxBones,\n      useVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n      morphTargets: material.morphTargets,\n      morphNormals: material.morphNormals,\n      maxMorphTargets: renderer.maxMorphTargets,\n      maxMorphNormals: renderer.maxMorphNormals,\n      numDirLights: lights.directional.length,\n      numPointLights: lights.point.length,\n      numSpotLights: lights.spot.length,\n      numHemiLights: lights.hemi.length,\n      numClippingPlanes: nClipPlanes,\n      shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n      shadowMapType: renderer.shadowMap.type,\n      toneMapping: renderer.toneMapping,\n      physicallyCorrectLights: renderer.physicallyCorrectLights,\n      premultipliedAlpha: material.premultipliedAlpha,\n      alphaTest: material.alphaTest,\n      doubleSided: material.side === THREE.DoubleSide,\n      flipSided: material.side === THREE.BackSide,\n      depthPacking: material.depthPacking !== undefined ? material.depthPacking : false\n    };\n    return parameters;\n  };\n\n  this.getProgramCode = function (material, parameters) {\n    var array = [];\n\n    if (parameters.shaderID) {\n      array.push(parameters.shaderID);\n    } else {\n      array.push(material.fragmentShader);\n      array.push(material.vertexShader);\n    }\n\n    if (material.defines !== undefined) {\n      for (var name in material.defines) {\n        array.push(name);\n        array.push(material.defines[name]);\n      }\n    }\n\n    for (var i = 0; i < parameterNames.length; i++) {\n      array.push(parameters[parameterNames[i]]);\n    }\n\n    return array.join();\n  };\n\n  this.acquireProgram = function (material, parameters, code) {\n    var program; // Check if code has been already compiled\n\n    for (var p = 0, pl = programs.length; p < pl; p++) {\n      var programInfo = programs[p];\n\n      if (programInfo.code === code) {\n        program = programInfo;\n        ++program.usedTimes;\n        break;\n      }\n    }\n\n    if (program === undefined) {\n      program = new THREE.WebGLProgram(renderer, code, material, parameters);\n      programs.push(program);\n    }\n\n    return program;\n  };\n\n  this.releaseProgram = function (program) {\n    if (--program.usedTimes === 0) {\n      // Remove from unordered set\n      var i = programs.indexOf(program);\n      programs[i] = programs[programs.length - 1];\n      programs.pop(); // Free WebGL resources\n\n      program.destroy();\n    }\n  }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n  this.programs = programs;\n}; // File:src/renderers/webgl/WebGLProperties.js\n\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\n\n\nTHREE.WebGLProperties = function () {\n  var properties = {};\n\n  this.get = function (object) {\n    var uuid = object.uuid;\n    var map = properties[uuid];\n\n    if (map === undefined) {\n      map = {};\n      properties[uuid] = map;\n    }\n\n    return map;\n  };\n\n  this[\"delete\"] = function (object) {\n    delete properties[object.uuid];\n  };\n\n  this.clear = function () {\n    properties = {};\n  };\n}; // File:src/renderers/webgl/WebGLShader.js\n\n\nTHREE.WebGLShader = function () {\n  function addLineNumbers(string) {\n    var lines = string.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      lines[i] = i + 1 + ': ' + lines[i];\n    }\n\n    return lines.join('\\n');\n  }\n\n  return function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n    }\n\n    if (gl.getShaderInfoLog(shader) !== '') {\n      console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog(shader), addLineNumbers(string));\n    } // --enable-privileged-webgl-extension\n    // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n    return shader;\n  };\n}(); // File:src/renderers/webgl/WebGLShadowMap.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.WebGLShadowMap = function (_renderer, _lights, _objects) {\n  var _gl = _renderer.context,\n      _state = _renderer.state,\n      _frustum = new THREE.Frustum(),\n      _projScreenMatrix = new THREE.Matrix4(),\n      _lightShadows = _lights.shadows,\n      _shadowMapSize = new THREE.Vector2(),\n      _lookTarget = new THREE.Vector3(),\n      _lightPositionWorld = new THREE.Vector3(),\n      _renderList = [],\n      _MorphingFlag = 1,\n      _SkinningFlag = 2,\n      _NumberOfMaterialVariants = (_MorphingFlag | _SkinningFlag) + 1,\n      _depthMaterials = new Array(_NumberOfMaterialVariants),\n      _distanceMaterials = new Array(_NumberOfMaterialVariants),\n      _materialCache = {};\n\n  var cubeDirections = [new THREE.Vector3(1, 0, 0), new THREE.Vector3(-1, 0, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, -1, 0)];\n  var cubeUps = [new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1)];\n  var cube2DViewPorts = [new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()]; // init\n\n  var depthMaterialTemplate = new THREE.MeshDepthMaterial();\n  depthMaterialTemplate.depthPacking = THREE.RGBADepthPacking;\n  depthMaterialTemplate.clipping = true;\n  var distanceShader = THREE.ShaderLib[\"distanceRGBA\"];\n  var distanceUniforms = THREE.UniformsUtils.clone(distanceShader.uniforms);\n\n  for (var i = 0; i !== _NumberOfMaterialVariants; ++i) {\n    var useMorphing = (i & _MorphingFlag) !== 0;\n    var useSkinning = (i & _SkinningFlag) !== 0;\n    var depthMaterial = depthMaterialTemplate.clone();\n    depthMaterial.morphTargets = useMorphing;\n    depthMaterial.skinning = useSkinning;\n    _depthMaterials[i] = depthMaterial;\n    var distanceMaterial = new THREE.ShaderMaterial({\n      defines: {\n        'USE_SHADOWMAP': ''\n      },\n      uniforms: distanceUniforms,\n      vertexShader: distanceShader.vertexShader,\n      fragmentShader: distanceShader.fragmentShader,\n      morphTargets: useMorphing,\n      skinning: useSkinning,\n      clipping: true\n    });\n    _distanceMaterials[i] = distanceMaterial;\n  } //\n\n\n  var scope = this;\n  this.enabled = false;\n  this.autoUpdate = true;\n  this.needsUpdate = false;\n  this.type = THREE.PCFShadowMap;\n  this.renderReverseSided = true;\n  this.renderSingleSided = true;\n\n  this.render = function (scene, camera) {\n    if (scope.enabled === false) return;\n    if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n    if (_lightShadows.length === 0) return; // Set GL state for depth map.\n\n    _state.clearColor(1, 1, 1, 1);\n\n    _state.disable(_gl.BLEND);\n\n    _state.setDepthTest(true);\n\n    _state.setScissorTest(false); // render depth map\n\n\n    var faceCount, isPointLight;\n\n    for (var i = 0, il = _lightShadows.length; i < il; i++) {\n      var light = _lightShadows[i];\n      var shadow = light.shadow;\n\n      if (shadow === undefined) {\n        console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n        continue;\n      }\n\n      var shadowCamera = shadow.camera;\n\n      _shadowMapSize.copy(shadow.mapSize);\n\n      if (light instanceof THREE.PointLight) {\n        faceCount = 6;\n        isPointLight = true;\n        var vpWidth = _shadowMapSize.x;\n        var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the\n        // following orientation:\n        //\n        //  xzXZ\n        //   y Y\n        //\n        // X - Positive x direction\n        // x - Negative x direction\n        // Y - Positive y direction\n        // y - Negative y direction\n        // Z - Positive z direction\n        // z - Negative z direction\n        // positive X\n\n        cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight); // negative X\n\n        cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight); // positive Z\n\n        cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight); // negative Z\n\n        cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight); // positive Y\n\n        cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight); // negative Y\n\n        cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n        _shadowMapSize.x *= 4.0;\n        _shadowMapSize.y *= 2.0;\n      } else {\n        faceCount = 1;\n        isPointLight = false;\n      }\n\n      if (shadow.map === null) {\n        var pars = {\n          minFilter: THREE.NearestFilter,\n          magFilter: THREE.NearestFilter,\n          format: THREE.RGBAFormat\n        };\n        shadow.map = new THREE.WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n        shadowCamera.updateProjectionMatrix();\n      }\n\n      if (shadow instanceof THREE.SpotLightShadow) {\n        shadow.update(light);\n      }\n\n      var shadowMap = shadow.map;\n      var shadowMatrix = shadow.matrix;\n\n      _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n      shadowCamera.position.copy(_lightPositionWorld);\n\n      _renderer.setRenderTarget(shadowMap);\n\n      _renderer.clear(); // render shadow map for each cube face (if omni-directional) or\n      // run a single pass if not\n\n\n      for (var face = 0; face < faceCount; face++) {\n        if (isPointLight) {\n          _lookTarget.copy(shadowCamera.position);\n\n          _lookTarget.add(cubeDirections[face]);\n\n          shadowCamera.up.copy(cubeUps[face]);\n          shadowCamera.lookAt(_lookTarget);\n          var vpDimensions = cube2DViewPorts[face];\n\n          _state.viewport(vpDimensions);\n        } else {\n          _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n          shadowCamera.lookAt(_lookTarget);\n        }\n\n        shadowCamera.updateMatrixWorld();\n        shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld); // compute shadow matrix\n\n        shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n        shadowMatrix.multiply(shadowCamera.projectionMatrix);\n        shadowMatrix.multiply(shadowCamera.matrixWorldInverse); // update camera matrices and frustum\n\n        _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n        _frustum.setFromMatrix(_projScreenMatrix); // set object matrices & frustum culling\n\n\n        _renderList.length = 0;\n        projectObject(scene, camera, shadowCamera); // render shadow map\n        // render regular objects\n\n        for (var j = 0, jl = _renderList.length; j < jl; j++) {\n          var object = _renderList[j];\n\n          var geometry = _objects.update(object);\n\n          var material = object.material;\n\n          if (material instanceof THREE.MultiMaterial) {\n            var groups = geometry.groups;\n            var materials = material.materials;\n\n            for (var k = 0, kl = groups.length; k < kl; k++) {\n              var group = groups[k];\n              var groupMaterial = materials[group.materialIndex];\n\n              if (groupMaterial.visible === true) {\n                var depthMaterial = getDepthMaterial(object, groupMaterial, isPointLight, _lightPositionWorld);\n\n                _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else {\n            var depthMaterial = getDepthMaterial(object, material, isPointLight, _lightPositionWorld);\n\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n          }\n        }\n      }\n    } // Restore GL state.\n\n\n    var clearColor = _renderer.getClearColor(),\n        clearAlpha = _renderer.getClearAlpha();\n\n    _renderer.setClearColor(clearColor, clearAlpha);\n\n    scope.needsUpdate = false;\n  };\n\n  function getDepthMaterial(object, material, isPointLight, lightPositionWorld) {\n    var geometry = object.geometry;\n    var result = null;\n    var materialVariants = _depthMaterials;\n    var customMaterial = object.customDepthMaterial;\n\n    if (isPointLight) {\n      materialVariants = _distanceMaterials;\n      customMaterial = object.customDistanceMaterial;\n    }\n\n    if (!customMaterial) {\n      var useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\n      var useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\n      var variantIndex = 0;\n      if (useMorphing) variantIndex |= _MorphingFlag;\n      if (useSkinning) variantIndex |= _SkinningFlag;\n      result = materialVariants[variantIndex];\n    } else {\n      result = customMaterial;\n    }\n\n    if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n      // in this case we need a unique material instance reflecting the\n      // appropriate state\n      var keyA = result.uuid,\n          keyB = material.uuid;\n      var materialsForVariant = _materialCache[keyA];\n\n      if (materialsForVariant === undefined) {\n        materialsForVariant = {};\n        _materialCache[keyA] = materialsForVariant;\n      }\n\n      var cachedMaterial = materialsForVariant[keyB];\n\n      if (cachedMaterial === undefined) {\n        cachedMaterial = result.clone();\n        materialsForVariant[keyB] = cachedMaterial;\n      }\n\n      result = cachedMaterial;\n    }\n\n    result.visible = material.visible;\n    result.wireframe = material.wireframe;\n    var side = material.side;\n\n    if (scope.renderSingleSided && side == THREE.DoubleSide) {\n      side = THREE.FrontSide;\n    }\n\n    if (scope.renderReverseSided) {\n      if (side === THREE.FrontSide) side = THREE.BackSide;else if (side === THREE.BackSide) side = THREE.FrontSide;\n    }\n\n    result.side = side;\n    result.clipShadows = material.clipShadows;\n    result.clippingPlanes = material.clippingPlanes;\n    result.wireframeLinewidth = material.wireframeLinewidth;\n    result.linewidth = material.linewidth;\n\n    if (isPointLight && result.uniforms.lightPos !== undefined) {\n      result.uniforms.lightPos.value.copy(lightPositionWorld);\n    }\n\n    return result;\n  }\n\n  function projectObject(object, camera, shadowCamera) {\n    if (object.visible === false) return;\n\n    if (object.layers.test(camera.layers) && (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points)) {\n      if (object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject(object) === true)) {\n        var material = object.material;\n\n        if (material.visible === true) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          _renderList.push(object);\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera, shadowCamera);\n    }\n  }\n}; // File:src/renderers/webgl/WebGLState.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLState = function (gl, extensions, paramThreeToGL) {\n  var _this = this;\n\n  this.buffers = {\n    color: new THREE.WebGLColorBuffer(gl, this),\n    depth: new THREE.WebGLDepthBuffer(gl, this),\n    stencil: new THREE.WebGLStencilBuffer(gl, this)\n  };\n  var maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  var newAttributes = new Uint8Array(maxVertexAttributes);\n  var enabledAttributes = new Uint8Array(maxVertexAttributes);\n  var attributeDivisors = new Uint8Array(maxVertexAttributes);\n  var capabilities = {};\n  var compressedTextureFormats = null;\n  var currentBlending = null;\n  var currentBlendEquation = null;\n  var currentBlendSrc = null;\n  var currentBlendDst = null;\n  var currentBlendEquationAlpha = null;\n  var currentBlendSrcAlpha = null;\n  var currentBlendDstAlpha = null;\n  var currentPremultipledAlpha = false;\n  var currentFlipSided = null;\n  var currentCullFace = null;\n  var currentLineWidth = null;\n  var currentPolygonOffsetFactor = null;\n  var currentPolygonOffsetUnits = null;\n  var currentScissorTest = null;\n  var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  var currentTextureSlot = null;\n  var currentBoundTextures = {};\n  var currentScissor = new THREE.Vector4();\n  var currentViewport = new THREE.Vector4();\n\n  function createTexture(type, target, count) {\n    var data = new Uint8Array(3);\n    var texture = gl.createTexture();\n    gl.bindTexture(type, texture);\n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    for (var i = 0; i < count; i++) {\n      gl.texImage2D(target + i, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, data);\n    }\n\n    return texture;\n  }\n\n  var emptyTextures = {};\n  emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n  emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); //\n\n  this.init = function () {\n    this.clearColor(0, 0, 0, 1);\n    this.clearDepth(1);\n    this.clearStencil(0);\n    this.enable(gl.DEPTH_TEST);\n    this.setDepthFunc(THREE.LessEqualDepth);\n    this.setFlipSided(false);\n    this.setCullFace(THREE.CullFaceBack);\n    this.enable(gl.CULL_FACE);\n    this.enable(gl.BLEND);\n    this.setBlending(THREE.NormalBlending);\n  };\n\n  this.initAttributes = function () {\n    for (var i = 0, l = newAttributes.length; i < l; i++) {\n      newAttributes[i] = 0;\n    }\n  };\n\n  this.enableAttribute = function (attribute) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== 0) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n      extension.vertexAttribDivisorANGLE(attribute, 0);\n      attributeDivisors[attribute] = 0;\n    }\n  };\n\n  this.enableAttributeAndDivisor = function (attribute, meshPerAttribute, extension) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== meshPerAttribute) {\n      extension.vertexAttribDivisorANGLE(attribute, meshPerAttribute);\n      attributeDivisors[attribute] = meshPerAttribute;\n    }\n  };\n\n  this.disableUnusedAttributes = function () {\n    for (var i = 0, l = enabledAttributes.length; i !== l; ++i) {\n      if (enabledAttributes[i] !== newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n  };\n\n  this.enable = function (id) {\n    if (capabilities[id] !== true) {\n      gl.enable(id);\n      capabilities[id] = true;\n    }\n  };\n\n  this.disable = function (id) {\n    if (capabilities[id] !== false) {\n      gl.disable(id);\n      capabilities[id] = false;\n    }\n  };\n\n  this.getCompressedTextureFormats = function () {\n    if (compressedTextureFormats === null) {\n      compressedTextureFormats = [];\n\n      if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc') || extensions.get('WEBGL_compressed_texture_etc1')) {\n        var formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\n        for (var i = 0; i < formats.length; i++) {\n          compressedTextureFormats.push(formats[i]);\n        }\n      }\n    }\n\n    return compressedTextureFormats;\n  };\n\n  this.setBlending = function (blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n    if (blending !== THREE.NoBlending) {\n      this.enable(gl.BLEND);\n    } else {\n      this.disable(gl.BLEND);\n      currentBlending = blending; // no blending, that is\n\n      return;\n    }\n\n    if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n      if (blending === THREE.AdditiveBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n        }\n      } else if (blending === THREE.SubtractiveBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n        }\n      } else if (blending === THREE.MultiplyBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n        }\n      } else {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        }\n      }\n\n      currentBlending = blending;\n      currentPremultipledAlpha = premultipliedAlpha;\n    }\n\n    if (blending === THREE.CustomBlending) {\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(paramThreeToGL(blendEquation), paramThreeToGL(blendEquationAlpha));\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(paramThreeToGL(blendSrc), paramThreeToGL(blendDst), paramThreeToGL(blendSrcAlpha), paramThreeToGL(blendDstAlpha));\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n    } else {\n      currentBlendEquation = null;\n      currentBlendSrc = null;\n      currentBlendDst = null;\n      currentBlendEquationAlpha = null;\n      currentBlendSrcAlpha = null;\n      currentBlendDstAlpha = null;\n    }\n  }; // TODO Deprecate\n\n\n  this.setColorWrite = function (colorWrite) {\n    this.buffers.color.setMask(colorWrite);\n  };\n\n  this.setDepthTest = function (depthTest) {\n    this.buffers.depth.setTest(depthTest);\n  };\n\n  this.setDepthWrite = function (depthWrite) {\n    this.buffers.depth.setMask(depthWrite);\n  };\n\n  this.setDepthFunc = function (depthFunc) {\n    this.buffers.depth.setFunc(depthFunc);\n  };\n\n  this.setStencilTest = function (stencilTest) {\n    this.buffers.stencil.setTest(stencilTest);\n  };\n\n  this.setStencilWrite = function (stencilWrite) {\n    this.buffers.stencil.setMask(stencilWrite);\n  };\n\n  this.setStencilFunc = function (stencilFunc, stencilRef, stencilMask) {\n    this.buffers.stencil.setFunc(stencilFunc, stencilRef, stencilMask);\n  };\n\n  this.setStencilOp = function (stencilFail, stencilZFail, stencilZPass) {\n    this.buffers.stencil.setOp(stencilFail, stencilZFail, stencilZPass);\n  }; //\n\n\n  this.setFlipSided = function (flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  };\n\n  this.setCullFace = function (cullFace) {\n    if (cullFace !== THREE.CullFaceNone) {\n      this.enable(gl.CULL_FACE);\n\n      if (cullFace !== currentCullFace) {\n        if (cullFace === THREE.CullFaceBack) {\n          gl.cullFace(gl.BACK);\n        } else if (cullFace === THREE.CullFaceFront) {\n          gl.cullFace(gl.FRONT);\n        } else {\n          gl.cullFace(gl.FRONT_AND_BACK);\n        }\n      }\n    } else {\n      this.disable(gl.CULL_FACE);\n    }\n\n    currentCullFace = cullFace;\n  };\n\n  this.setLineWidth = function (width) {\n    if (width !== currentLineWidth) {\n      gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  };\n\n  this.setPolygonOffset = function (polygonOffset, factor, units) {\n    if (polygonOffset) {\n      this.enable(gl.POLYGON_OFFSET_FILL);\n\n      if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n        gl.polygonOffset(factor, units);\n        currentPolygonOffsetFactor = factor;\n        currentPolygonOffsetUnits = units;\n      }\n    } else {\n      this.disable(gl.POLYGON_OFFSET_FILL);\n    }\n  };\n\n  this.getScissorTest = function () {\n    return currentScissorTest;\n  };\n\n  this.setScissorTest = function (scissorTest) {\n    currentScissorTest = scissorTest;\n\n    if (scissorTest) {\n      this.enable(gl.SCISSOR_TEST);\n    } else {\n      this.disable(gl.SCISSOR_TEST);\n    }\n  }; // texture\n\n\n  this.activeTexture = function (webglSlot) {\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  };\n\n  this.bindTexture = function (webglType, webglTexture) {\n    if (currentTextureSlot === null) {\n      _this.activeTexture();\n    }\n\n    var boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[currentTextureSlot] = boundTexture;\n    }\n\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  };\n\n  this.compressedTexImage2D = function () {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  this.texImage2D = function () {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // TODO Deprecate\n\n\n  this.clearColor = function (r, g, b, a) {\n    this.buffers.color.setClear(r, g, b, a);\n  };\n\n  this.clearDepth = function (depth) {\n    this.buffers.depth.setClear(depth);\n  };\n\n  this.clearStencil = function (stencil) {\n    this.buffers.stencil.setClear(stencil);\n  }; //\n\n\n  this.scissor = function (scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  };\n\n  this.viewport = function (viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  }; //\n\n\n  this.reset = function () {\n    for (var i = 0; i < enabledAttributes.length; i++) {\n      if (enabledAttributes[i] === 1) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n\n    capabilities = {};\n    compressedTextureFormats = null;\n    currentTextureSlot = null;\n    currentBoundTextures = {};\n    currentBlending = null;\n    currentFlipSided = null;\n    currentCullFace = null;\n    this.buffers.color.reset();\n    this.buffers.depth.reset();\n    this.buffers.stencil.reset();\n  };\n};\n\nTHREE.WebGLColorBuffer = function (gl, state) {\n  var locked = false;\n  var color = new THREE.Vector4();\n  var currentColorMask = null;\n  var currentColorClear = new THREE.Vector4();\n\n  this.setMask = function (colorMask) {\n    if (currentColorMask !== colorMask && !locked) {\n      gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n      currentColorMask = colorMask;\n    }\n  };\n\n  this.setLocked = function (lock) {\n    locked = lock;\n  };\n\n  this.setClear = function (r, g, b, a) {\n    color.set(r, g, b, a);\n\n    if (currentColorClear.equals(color) === false) {\n      gl.clearColor(r, g, b, a);\n      currentColorClear.copy(color);\n    }\n  };\n\n  this.reset = function () {\n    locked = false;\n    currentColorMask = null;\n    currentColorClear = new THREE.Vector4();\n  };\n};\n\nTHREE.WebGLDepthBuffer = function (gl, state) {\n  var locked = false;\n  var currentDepthMask = null;\n  var currentDepthFunc = null;\n  var currentDepthClear = null;\n\n  this.setTest = function (depthTest) {\n    if (depthTest) {\n      state.enable(gl.DEPTH_TEST);\n    } else {\n      state.disable(gl.DEPTH_TEST);\n    }\n  };\n\n  this.setMask = function (depthMask) {\n    if (currentDepthMask !== depthMask && !locked) {\n      gl.depthMask(depthMask);\n      currentDepthMask = depthMask;\n    }\n  };\n\n  this.setFunc = function (depthFunc) {\n    if (currentDepthFunc !== depthFunc) {\n      if (depthFunc) {\n        switch (depthFunc) {\n          case THREE.NeverDepth:\n            gl.depthFunc(gl.NEVER);\n            break;\n\n          case THREE.AlwaysDepth:\n            gl.depthFunc(gl.ALWAYS);\n            break;\n\n          case THREE.LessDepth:\n            gl.depthFunc(gl.LESS);\n            break;\n\n          case THREE.LessEqualDepth:\n            gl.depthFunc(gl.LEQUAL);\n            break;\n\n          case THREE.EqualDepth:\n            gl.depthFunc(gl.EQUAL);\n            break;\n\n          case THREE.GreaterEqualDepth:\n            gl.depthFunc(gl.GEQUAL);\n            break;\n\n          case THREE.GreaterDepth:\n            gl.depthFunc(gl.GREATER);\n            break;\n\n          case THREE.NotEqualDepth:\n            gl.depthFunc(gl.NOTEQUAL);\n            break;\n\n          default:\n            gl.depthFunc(gl.LEQUAL);\n        }\n      } else {\n        gl.depthFunc(gl.LEQUAL);\n      }\n\n      currentDepthFunc = depthFunc;\n    }\n  };\n\n  this.setLocked = function (lock) {\n    locked = lock;\n  };\n\n  this.setClear = function (depth) {\n    if (currentDepthClear !== depth) {\n      gl.clearDepth(depth);\n      currentDepthClear = depth;\n    }\n  };\n\n  this.reset = function () {\n    locked = false;\n    currentDepthMask = null;\n    currentDepthFunc = null;\n    currentDepthClear = null;\n  };\n};\n\nTHREE.WebGLStencilBuffer = function (gl, state) {\n  var locked = false;\n  var currentStencilMask = null;\n  var currentStencilFunc = null;\n  var currentStencilRef = null;\n  var currentStencilFuncMask = null;\n  var currentStencilFail = null;\n  var currentStencilZFail = null;\n  var currentStencilZPass = null;\n  var currentStencilClear = null;\n\n  this.setTest = function (stencilTest) {\n    if (stencilTest) {\n      state.enable(gl.STENCIL_TEST);\n    } else {\n      state.disable(gl.STENCIL_TEST);\n    }\n  };\n\n  this.setMask = function (stencilMask) {\n    if (currentStencilMask !== stencilMask && !locked) {\n      gl.stencilMask(stencilMask);\n      currentStencilMask = stencilMask;\n    }\n  };\n\n  this.setFunc = function (stencilFunc, stencilRef, stencilMask) {\n    if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n      gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n      currentStencilFunc = stencilFunc;\n      currentStencilRef = stencilRef;\n      currentStencilFuncMask = stencilMask;\n    }\n  };\n\n  this.setOp = function (stencilFail, stencilZFail, stencilZPass) {\n    if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n      gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n      currentStencilFail = stencilFail;\n      currentStencilZFail = stencilZFail;\n      currentStencilZPass = stencilZPass;\n    }\n  };\n\n  this.setLocked = function (lock) {\n    locked = lock;\n  };\n\n  this.setClear = function (stencil) {\n    if (currentStencilClear !== stencil) {\n      gl.clearStencil(stencil);\n      currentStencilClear = stencil;\n    }\n  };\n\n  this.reset = function () {\n    locked = false;\n    currentStencilMask = null;\n    currentStencilFunc = null;\n    currentStencilRef = null;\n    currentStencilFuncMask = null;\n    currentStencilFail = null;\n    currentStencilZFail = null;\n    currentStencilZPass = null;\n    currentStencilClear = null;\n  };\n}; // File:src/renderers/webgl/WebGLUniforms.js\n\n/**\r\n *\r\n * Uniforms of a program.\r\n * Those form a tree structure with a special top-level container for the root,\r\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\r\n *\r\n *\r\n * Properties of inner nodes including the top-level container:\r\n *\r\n * .seq - array of nested uniforms\r\n * .map - nested uniforms by name\r\n *\r\n *\r\n * Methods of all nodes except the top-level container:\r\n *\r\n * .setValue( gl, value, [renderer] )\r\n *\r\n * \t\tuploads a uniform value(s)\r\n *  \tthe 'renderer' parameter is needed for sampler uniforms\r\n *\r\n *\r\n * Static methods of the top-level container (renderer factorizations):\r\n *\r\n * .upload( gl, seq, values, renderer )\r\n *\r\n * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n *\r\n * .seqWithValue( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with corresponding entry in values\r\n *\r\n * .splitDynamic( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with dynamic entry and removes them from 'seq'\r\n *\r\n *\r\n * Methods of the top-level container (renderer factorizations):\r\n *\r\n * .setValue( gl, name, value )\r\n *\r\n * \t\tsets uniform with  name 'name' to 'value'\r\n *\r\n * .set( gl, obj, prop )\r\n *\r\n * \t\tsets uniform from object and property with same name than uniform\r\n *\r\n * .setOptional( gl, obj, prop )\r\n *\r\n * \t\tlike .set for an optional property of the object\r\n *\r\n *\r\n * @author tschw\r\n *\r\n */\n\n\nTHREE.WebGLUniforms = function () {\n  // scope\n  // --- Base for inner nodes (including the root) ---\n  var UniformContainer = function UniformContainer() {\n    this.seq = [];\n    this.map = {};\n  },\n      // --- Utilities ---\n  // Array Caches (provide typed arrays for temporary by size)\n  arrayCacheF32 = [],\n      arrayCacheI32 = [],\n      uncacheTemporaryArrays = function uncacheTemporaryArrays() {\n    arrayCacheF32.length = 0;\n    arrayCacheI32.length = 0;\n  },\n      // Flattening for arrays of vectors and matrices\n  flatten = function flatten(array, nBlocks, blockSize) {\n    var firstElem = array[0];\n    if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n    // see http://jacksondunstan.com/articles/983\n\n    var n = nBlocks * blockSize,\n        r = arrayCacheF32[n];\n\n    if (r === undefined) {\n      r = new Float32Array(n);\n      arrayCacheF32[n] = r;\n    }\n\n    if (nBlocks !== 0) {\n      firstElem.toArray(r, 0);\n\n      for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n        offset += blockSize;\n        array[i].toArray(r, offset);\n      }\n    }\n\n    return r;\n  },\n      // Texture unit allocation\n  allocTexUnits = function allocTexUnits(renderer, n) {\n    var r = arrayCacheI32[n];\n\n    if (r === undefined) {\n      r = new Int32Array(n);\n      arrayCacheI32[n] = r;\n    }\n\n    for (var i = 0; i !== n; ++i) {\n      r[i] = renderer.allocTextureUnit();\n    }\n\n    return r;\n  },\n      // --- Setters ---\n  // Note: Defining these methods externally, because they come in a bunch\n  // and this way their names minify.\n  // Single scalar\n  setValue1f = function setValue1f(gl, v) {\n    gl.uniform1f(this.addr, v);\n  },\n      setValue1i = function setValue1i(gl, v) {\n    gl.uniform1i(this.addr, v);\n  },\n      // Single float vector (from flat array or THREE.VectorN)\n  setValue2fv = function setValue2fv(gl, v) {\n    if (v.x === undefined) gl.uniform2fv(this.addr, v);else gl.uniform2f(this.addr, v.x, v.y);\n  },\n      setValue3fv = function setValue3fv(gl, v) {\n    if (v.x !== undefined) gl.uniform3f(this.addr, v.x, v.y, v.z);else if (v.r !== undefined) gl.uniform3f(this.addr, v.r, v.g, v.b);else gl.uniform3fv(this.addr, v);\n  },\n      setValue4fv = function setValue4fv(gl, v) {\n    if (v.x === undefined) gl.uniform4fv(this.addr, v);else gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n  },\n      // Single matrix (from flat array or MatrixN)\n  setValue2fm = function setValue2fm(gl, v) {\n    gl.uniformMatrix2fv(this.addr, false, v.elements || v);\n  },\n      setValue3fm = function setValue3fm(gl, v) {\n    gl.uniformMatrix3fv(this.addr, false, v.elements || v);\n  },\n      setValue4fm = function setValue4fm(gl, v) {\n    gl.uniformMatrix4fv(this.addr, false, v.elements || v);\n  },\n      // Single texture (2D / Cube)\n  setValueT1 = function setValueT1(gl, v, renderer) {\n    var unit = renderer.allocTextureUnit();\n    gl.uniform1i(this.addr, unit);\n    if (v) renderer.setTexture2D(v, unit);\n  },\n      setValueT6 = function setValueT6(gl, v, renderer) {\n    var unit = renderer.allocTextureUnit();\n    gl.uniform1i(this.addr, unit);\n    if (v) renderer.setTextureCube(v, unit);\n  },\n      // Integer / Boolean vectors or arrays thereof (always flat arrays)\n  setValue2iv = function setValue2iv(gl, v) {\n    gl.uniform2iv(this.addr, v);\n  },\n      setValue3iv = function setValue3iv(gl, v) {\n    gl.uniform3iv(this.addr, v);\n  },\n      setValue4iv = function setValue4iv(gl, v) {\n    gl.uniform4iv(this.addr, v);\n  },\n      // Helper to pick the right setter for the singular case\n  getSingularSetter = function getSingularSetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValue1f;\n      // FLOAT\n\n      case 0x8b50:\n        return setValue2fv;\n      // _VEC2\n\n      case 0x8b51:\n        return setValue3fv;\n      // _VEC3\n\n      case 0x8b52:\n        return setValue4fv;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValue2fm;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValue3fm;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValue4fm;\n      // _MAT4\n\n      case 0x8b5e:\n        return setValueT1;\n      // SAMPLER_2D\n\n      case 0x8b60:\n        return setValueT6;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValue1i;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValue2iv;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValue3iv;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValue4iv;\n      // _VEC4\n    }\n  },\n      // Array of scalars\n  setValue1fv = function setValue1fv(gl, v) {\n    gl.uniform1fv(this.addr, v);\n  },\n      setValue1iv = function setValue1iv(gl, v) {\n    gl.uniform1iv(this.addr, v);\n  },\n      // Array of vectors (flat or from THREE classes)\n  setValueV2a = function setValueV2a(gl, v) {\n    gl.uniform2fv(this.addr, flatten(v, this.size, 2));\n  },\n      setValueV3a = function setValueV3a(gl, v) {\n    gl.uniform3fv(this.addr, flatten(v, this.size, 3));\n  },\n      setValueV4a = function setValueV4a(gl, v) {\n    gl.uniform4fv(this.addr, flatten(v, this.size, 4));\n  },\n      // Array of matrices (flat or from THREE clases)\n  setValueM2a = function setValueM2a(gl, v) {\n    gl.uniformMatrix2fv(this.addr, false, flatten(v, this.size, 4));\n  },\n      setValueM3a = function setValueM3a(gl, v) {\n    gl.uniformMatrix3fv(this.addr, false, flatten(v, this.size, 9));\n  },\n      setValueM4a = function setValueM4a(gl, v) {\n    gl.uniformMatrix4fv(this.addr, false, flatten(v, this.size, 16));\n  },\n      // Array of textures (2D / Cube)\n  setValueT1a = function setValueT1a(gl, v, renderer) {\n    var n = v.length,\n        units = allocTexUnits(renderer, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var i = 0; i !== n; ++i) {\n      var tex = v[i];\n      if (tex) renderer.setTexture2D(tex, units[i]);\n    }\n  },\n      setValueT6a = function setValueT6a(gl, v, renderer) {\n    var n = v.length,\n        units = allocTexUnits(renderer, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var i = 0; i !== n; ++i) {\n      var tex = v[i];\n      if (tex) renderer.setTextureCube(tex, units[i]);\n    }\n  },\n      // Helper to pick the right setter for a pure (bottom-level) array\n  getPureArraySetter = function getPureArraySetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValue1fv;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2a;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3a;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4a;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2a;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3a;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4a;\n      // _MAT4\n\n      case 0x8b5e:\n        return setValueT1a;\n      // SAMPLER_2D\n\n      case 0x8b60:\n        return setValueT6a;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValue1iv;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValue2iv;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValue3iv;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValue4iv;\n      // _VEC4\n    }\n  },\n      // --- Uniform Classes ---\n  SingleUniform = function SingleUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  },\n      PureArrayUniform = function PureArrayUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.size = activeInfo.size;\n    this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  },\n      StructuredUniform = function StructuredUniform(id) {\n    this.id = id;\n    UniformContainer.call(this); // mix-in\n  };\n\n  StructuredUniform.prototype.setValue = function (gl, value) {\n    // Note: Don't need an extra 'renderer' parameter, since samplers\n    // are not allowed in structured uniforms.\n    var seq = this.seq;\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      u.setValue(gl, value[u.id]);\n    }\n  }; // --- Top-level ---\n  // Parser - builds up the property tree from the path strings\n\n\n  var RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g,\n      // extracts\n  // \t- the identifier (member name or array index)\n  //  - followed by an optional right bracket (found when array index)\n  //  - followed by an optional left bracket or dot (type of subscript)\n  //\n  // Note: These portions can be read in a non-overlapping fashion and\n  // allow straightforward parsing of the hierarchy that WebGL encodes\n  // in the uniform names.\n  addUniform = function addUniform(container, uniformObject) {\n    container.seq.push(uniformObject);\n    container.map[uniformObject.id] = uniformObject;\n  },\n      parseUniform = function parseUniform(activeInfo, addr, container) {\n    var path = activeInfo.name,\n        pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n    RePathPart.lastIndex = 0;\n\n    for (;;) {\n      var match = RePathPart.exec(path),\n          matchEnd = RePathPart.lastIndex,\n          id = match[1],\n          idIsIndex = match[2] === ']',\n          subscript = match[3];\n      if (idIsIndex) id = id | 0; // convert to integer\n\n      if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n        // bare name or \"pure\" bottom-level array \"[0]\" suffix\n        addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n        break;\n      } else {\n        // step into inner node / create it in case it doesn't exist\n        var map = container.map,\n            next = map[id];\n\n        if (next === undefined) {\n          next = new StructuredUniform(id);\n          addUniform(container, next);\n        }\n\n        container = next;\n      }\n    }\n  },\n      // Root Container\n  WebGLUniforms = function WebGLUniforms(gl, program, renderer) {\n    UniformContainer.call(this);\n    this.renderer = renderer;\n    var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var i = 0; i !== n; ++i) {\n      var info = gl.getActiveUniform(program, i),\n          path = info.name,\n          addr = gl.getUniformLocation(program, path);\n      parseUniform(info, addr, this);\n    }\n  };\n\n  WebGLUniforms.prototype.setValue = function (gl, name, value) {\n    var u = this.map[name];\n    if (u !== undefined) u.setValue(gl, value, this.renderer);\n  };\n\n  WebGLUniforms.prototype.set = function (gl, object, name) {\n    var u = this.map[name];\n    if (u !== undefined) u.setValue(gl, object[name], this.renderer);\n  };\n\n  WebGLUniforms.prototype.setOptional = function (gl, object, name) {\n    var v = object[name];\n    if (v !== undefined) this.setValue(gl, name, v);\n  }; // Static interface\n\n\n  WebGLUniforms.upload = function (gl, seq, values, renderer) {\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i],\n          v = values[u.id];\n\n      if (v.needsUpdate !== false) {\n        // note: always updating when .needsUpdate is undefined\n        u.setValue(gl, v.value, renderer);\n      }\n    }\n  };\n\n  WebGLUniforms.seqWithValue = function (seq, values) {\n    var r = [];\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      if (u.id in values) r.push(u);\n    }\n\n    return r;\n  };\n\n  WebGLUniforms.splitDynamic = function (seq, values) {\n    var r = null,\n        n = seq.length,\n        w = 0;\n\n    for (var i = 0; i !== n; ++i) {\n      var u = seq[i],\n          v = values[u.id];\n\n      if (v && v.dynamic === true) {\n        if (r === null) r = [];\n        r.push(u);\n      } else {\n        // in-place compact 'seq', removing the matches\n        if (w < i) seq[w] = u;\n        ++w;\n      }\n    }\n\n    if (w < n) seq.length = w;\n    return r;\n  };\n\n  WebGLUniforms.evalDynamic = function (seq, values, object, camera) {\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var v = values[seq[i].id],\n          f = v.onUpdateCallback;\n      if (f !== undefined) f.call(v, object, camera);\n    }\n  };\n\n  return WebGLUniforms;\n}(); // File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.LensFlarePlugin = function (renderer, flares) {\n  var gl = renderer.context;\n  var state = renderer.state;\n  var vertexBuffer, elementBuffer;\n  var shader, program, attributes, uniforms;\n  var tempTexture, occlusionTexture;\n\n  function init() {\n    var vertices = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]); // buffers\n\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW); // textures\n\n    tempTexture = gl.createTexture();\n    occlusionTexture = gl.createTexture();\n    state.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    shader = {\n      vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"uniform sampler2D occlusionMap;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if ( renderType == 2 ) {\", \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\", \"vVisibility =        visibility.r / 9.0;\", \"vVisibility *= 1.0 - visibility.g / 9.0;\", \"vVisibility *=       visibility.b / 9.0;\", \"vVisibility *= 1.0 - visibility.a / 9.0;\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n      fragmentShader: [\"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", // pink square\n      \"if ( renderType == 0 ) {\", \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\", // restore\n      \"} else if ( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n      \"} else {\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * vVisibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n    };\n    program = createProgram(shader);\n    attributes = {\n      vertex: gl.getAttribLocation(program, \"position\"),\n      uv: gl.getAttribLocation(program, \"uv\")\n    };\n    uniforms = {\n      renderType: gl.getUniformLocation(program, \"renderType\"),\n      map: gl.getUniformLocation(program, \"map\"),\n      occlusionMap: gl.getUniformLocation(program, \"occlusionMap\"),\n      opacity: gl.getUniformLocation(program, \"opacity\"),\n      color: gl.getUniformLocation(program, \"color\"),\n      scale: gl.getUniformLocation(program, \"scale\"),\n      rotation: gl.getUniformLocation(program, \"rotation\"),\n      screenPosition: gl.getUniformLocation(program, \"screenPosition\")\n    };\n  }\n  /*\r\n   * Render lens flares\r\n   * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n   *         reads these back and calculates occlusion.\r\n   */\n\n\n  this.render = function (scene, camera, viewport) {\n    if (flares.length === 0) return;\n    var tempPosition = new THREE.Vector3();\n    var invAspect = viewport.w / viewport.z,\n        halfViewportWidth = viewport.z * 0.5,\n        halfViewportHeight = viewport.w * 0.5;\n    var size = 16 / viewport.w,\n        scale = new THREE.Vector2(size * invAspect, size);\n    var screenPosition = new THREE.Vector3(1, 1, 0),\n        screenPositionPixels = new THREE.Vector2(1, 1);\n    var validArea = new THREE.Box2();\n    validArea.min.set(0, 0);\n    validArea.max.set(viewport.z - 16, viewport.w - 16);\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.vertex);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes(); // loop through all lens flares to update their occlusion and positions\n    // setup gl and common used attribs/uniforms\n\n    gl.uniform1i(uniforms.occlusionMap, 0);\n    gl.uniform1i(uniforms.map, 1);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    state.disable(gl.CULL_FACE);\n    state.setDepthWrite(false);\n\n    for (var i = 0, l = flares.length; i < l; i++) {\n      size = 16 / viewport.w;\n      scale.set(size * invAspect, size); // calc object screen position\n\n      var flare = flares[i];\n      tempPosition.set(flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14]);\n      tempPosition.applyMatrix4(camera.matrixWorldInverse);\n      tempPosition.applyProjection(camera.projectionMatrix); // setup arrays for gl programs\n\n      screenPosition.copy(tempPosition); // horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n      screenPositionPixels.x = viewport.x + screenPosition.x * halfViewportWidth + halfViewportWidth - 8;\n      screenPositionPixels.y = viewport.y + screenPosition.y * halfViewportHeight + halfViewportHeight - 8; // screen cull\n\n      if (validArea.containsPoint(screenPositionPixels) === true) {\n        // save current RGB to temp texture\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, null);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0); // render pink quad\n\n        gl.uniform1i(uniforms.renderType, 0);\n        gl.uniform2f(uniforms.scale, scale.x, scale.y);\n        gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n        state.disable(gl.BLEND);\n        state.enable(gl.DEPTH_TEST);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // copy result to occlusionMap\n\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0); // restore graphics\n\n        gl.uniform1i(uniforms.renderType, 1);\n        state.disable(gl.DEPTH_TEST);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // update object positions\n\n        flare.positionScreen.copy(screenPosition);\n\n        if (flare.customUpdateCallback) {\n          flare.customUpdateCallback(flare);\n        } else {\n          flare.updateLensFlares();\n        } // render flares\n\n\n        gl.uniform1i(uniforms.renderType, 2);\n        state.enable(gl.BLEND);\n\n        for (var j = 0, jl = flare.lensFlares.length; j < jl; j++) {\n          var sprite = flare.lensFlares[j];\n\n          if (sprite.opacity > 0.001 && sprite.scale > 0.001) {\n            screenPosition.x = sprite.x;\n            screenPosition.y = sprite.y;\n            screenPosition.z = sprite.z;\n            size = sprite.size * sprite.scale / viewport.w;\n            scale.x = size * invAspect;\n            scale.y = size;\n            gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n            gl.uniform2f(uniforms.scale, scale.x, scale.y);\n            gl.uniform1f(uniforms.rotation, sprite.rotation);\n            gl.uniform1f(uniforms.opacity, sprite.opacity);\n            gl.uniform3f(uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b);\n            state.setBlending(sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst);\n            renderer.setTexture2D(sprite.texture, 1);\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n      }\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    state.enable(gl.DEPTH_TEST);\n    state.setDepthWrite(true);\n    renderer.resetGLState();\n  };\n\n  function createProgram(shader) {\n    var program = gl.createProgram();\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n    gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n    gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.compileShader(vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n    return program;\n  }\n}; // File:src/renderers/webgl/plugins/SpritePlugin.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.SpritePlugin = function (renderer, sprites) {\n  var gl = renderer.context;\n  var state = renderer.state;\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var texture; // decompose matrixWorld\n\n  var spritePosition = new THREE.Vector3();\n  var spriteRotation = new THREE.Quaternion();\n  var spriteScale = new THREE.Vector3();\n\n  function init() {\n    var vertices = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]);\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n    program = createProgram();\n    attributes = {\n      position: gl.getAttribLocation(program, 'position'),\n      uv: gl.getAttribLocation(program, 'uv')\n    };\n    uniforms = {\n      uvOffset: gl.getUniformLocation(program, 'uvOffset'),\n      uvScale: gl.getUniformLocation(program, 'uvScale'),\n      rotation: gl.getUniformLocation(program, 'rotation'),\n      scale: gl.getUniformLocation(program, 'scale'),\n      color: gl.getUniformLocation(program, 'color'),\n      map: gl.getUniformLocation(program, 'map'),\n      opacity: gl.getUniformLocation(program, 'opacity'),\n      modelViewMatrix: gl.getUniformLocation(program, 'modelViewMatrix'),\n      projectionMatrix: gl.getUniformLocation(program, 'projectionMatrix'),\n      fogType: gl.getUniformLocation(program, 'fogType'),\n      fogDensity: gl.getUniformLocation(program, 'fogDensity'),\n      fogNear: gl.getUniformLocation(program, 'fogNear'),\n      fogFar: gl.getUniformLocation(program, 'fogFar'),\n      fogColor: gl.getUniformLocation(program, 'fogColor'),\n      alphaTest: gl.getUniformLocation(program, 'alphaTest')\n    };\n    var canvas = document.createElement('canvas');\n    canvas.width = 8;\n    canvas.height = 8;\n    var context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 8, 8);\n    texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n  }\n\n  this.render = function (scene, camera) {\n    if (sprites.length === 0) return; // setup gl\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.position);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes();\n    state.disable(gl.CULL_FACE);\n    state.enable(gl.BLEND);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n    state.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(uniforms.map, 0);\n    var oldFogType = 0;\n    var sceneFogType = 0;\n    var fog = scene.fog;\n\n    if (fog) {\n      gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n\n      if (fog instanceof THREE.Fog) {\n        gl.uniform1f(uniforms.fogNear, fog.near);\n        gl.uniform1f(uniforms.fogFar, fog.far);\n        gl.uniform1i(uniforms.fogType, 1);\n        oldFogType = 1;\n        sceneFogType = 1;\n      } else if (fog instanceof THREE.FogExp2) {\n        gl.uniform1f(uniforms.fogDensity, fog.density);\n        gl.uniform1i(uniforms.fogType, 2);\n        oldFogType = 2;\n        sceneFogType = 2;\n      }\n    } else {\n      gl.uniform1i(uniforms.fogType, 0);\n      oldFogType = 0;\n      sceneFogType = 0;\n    } // update positions and sort\n\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      sprite.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n      sprite.z = -sprite.modelViewMatrix.elements[14];\n    }\n\n    sprites.sort(painterSortStable); // render all sprites\n\n    var scale = [];\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      var material = sprite.material;\n      gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n      gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements);\n      sprite.matrixWorld.decompose(spritePosition, spriteRotation, spriteScale);\n      scale[0] = spriteScale.x;\n      scale[1] = spriteScale.y;\n      var fogType = 0;\n\n      if (scene.fog && material.fog) {\n        fogType = sceneFogType;\n      }\n\n      if (oldFogType !== fogType) {\n        gl.uniform1i(uniforms.fogType, fogType);\n        oldFogType = fogType;\n      }\n\n      if (material.map !== null) {\n        gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n        gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n      } else {\n        gl.uniform2f(uniforms.uvOffset, 0, 0);\n        gl.uniform2f(uniforms.uvScale, 1, 1);\n      }\n\n      gl.uniform1f(uniforms.opacity, material.opacity);\n      gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n      gl.uniform1f(uniforms.rotation, material.rotation);\n      gl.uniform2fv(uniforms.scale, scale);\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n      state.setDepthTest(material.depthTest);\n      state.setDepthWrite(material.depthWrite);\n\n      if (material.map) {\n        renderer.setTexture2D(material.map, 0);\n      } else {\n        renderer.setTexture2D(texture, 0);\n      }\n\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    renderer.resetGLState();\n  };\n\n  function createProgram() {\n    var program = gl.createProgram();\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(vertexShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform float rotation;', 'uniform vec2 scale;', 'uniform vec2 uvOffset;', 'uniform vec2 uvScale;', 'attribute vec2 position;', 'attribute vec2 uv;', 'varying vec2 vUV;', 'void main() {', 'vUV = uvOffset + uv * uvScale;', 'vec2 alignedPosition = position * scale;', 'vec2 rotatedPosition;', 'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;', 'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;', 'vec4 finalPosition;', 'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );', 'finalPosition.xy += rotatedPosition;', 'finalPosition = projectionMatrix * finalPosition;', 'gl_Position = finalPosition;', '}'].join('\\n'));\n    gl.shaderSource(fragmentShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform vec3 color;', 'uniform sampler2D map;', 'uniform float opacity;', 'uniform int fogType;', 'uniform vec3 fogColor;', 'uniform float fogDensity;', 'uniform float fogNear;', 'uniform float fogFar;', 'uniform float alphaTest;', 'varying vec2 vUV;', 'void main() {', 'vec4 texture = texture2D( map, vUV );', 'if ( texture.a < alphaTest ) discard;', 'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );', 'if ( fogType > 0 ) {', 'float depth = gl_FragCoord.z / gl_FragCoord.w;', 'float fogFactor = 0.0;', 'if ( fogType == 1 ) {', 'fogFactor = smoothstep( fogNear, fogFar, depth );', '} else {', 'const float LOG2 = 1.442695;', 'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );', 'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );', '}', 'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );', '}', '}'].join('\\n'));\n    gl.compileShader(vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    return program;\n  }\n\n  function painterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return b.id - a.id;\n    }\n  }\n}; // File:src/Three.Legacy.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nObject.assign(THREE, {\n  Face4: function Face4(a, b, c, d, normal, color, materialIndex) {\n    console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n    return new THREE.Face3(a, b, c, normal, color, materialIndex);\n  },\n  LineStrip: 0,\n  LinePieces: 1,\n  MeshFaceMaterial: THREE.MultiMaterial,\n  PointCloud: function PointCloud(geometry, material) {\n    console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n    return new THREE.Points(geometry, material);\n  },\n  Particle: THREE.Sprite,\n  ParticleSystem: function ParticleSystem(geometry, material) {\n    console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n    return new THREE.Points(geometry, material);\n  },\n  PointCloudMaterial: function PointCloudMaterial(parameters) {\n    console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n    return new THREE.PointsMaterial(parameters);\n  },\n  ParticleBasicMaterial: function ParticleBasicMaterial(parameters) {\n    console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n    return new THREE.PointsMaterial(parameters);\n  },\n  ParticleSystemMaterial: function ParticleSystemMaterial(parameters) {\n    console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n    return new THREE.PointsMaterial(parameters);\n  },\n  Vertex: function Vertex(x, y, z) {\n    console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n    return new THREE.Vector3(x, y, z);\n  }\n}); //\n\nObject.assign(THREE.Box2.prototype, {\n  empty: function empty() {\n    console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  },\n  isIntersectionBox: function isIntersectionBox(box) {\n    console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  }\n});\nObject.assign(THREE.Box3.prototype, {\n  empty: function empty() {\n    console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  },\n  isIntersectionBox: function isIntersectionBox(box) {\n    console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  },\n  isIntersectionSphere: function isIntersectionSphere(sphere) {\n    console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n    return this.intersectsSphere(sphere);\n  }\n});\nObject.assign(THREE.Matrix3.prototype, {\n  multiplyVector3: function multiplyVector3(vector) {\n    console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n    return vector.applyMatrix3(this);\n  },\n  multiplyVector3Array: function multiplyVector3Array(a) {\n    console.warn('THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.');\n    return this.applyToVector3Array(a);\n  }\n});\nObject.assign(THREE.Matrix4.prototype, {\n  extractPosition: function extractPosition(m) {\n    console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n    return this.copyPosition(m);\n  },\n  setRotationFromQuaternion: function setRotationFromQuaternion(q) {\n    console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n    return this.makeRotationFromQuaternion(q);\n  },\n  multiplyVector3: function multiplyVector3(vector) {\n    console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.');\n    return vector.applyProjection(this);\n  },\n  multiplyVector4: function multiplyVector4(vector) {\n    console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  multiplyVector3Array: function multiplyVector3Array(a) {\n    console.warn('THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.');\n    return this.applyToVector3Array(a);\n  },\n  rotateAxis: function rotateAxis(v) {\n    console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n    v.transformDirection(this);\n  },\n  crossVector: function crossVector(vector) {\n    console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  translate: function translate(v) {\n    console.error('THREE.Matrix4: .translate() has been removed.');\n  },\n  rotateX: function rotateX(angle) {\n    console.error('THREE.Matrix4: .rotateX() has been removed.');\n  },\n  rotateY: function rotateY(angle) {\n    console.error('THREE.Matrix4: .rotateY() has been removed.');\n  },\n  rotateZ: function rotateZ(angle) {\n    console.error('THREE.Matrix4: .rotateZ() has been removed.');\n  },\n  rotateByAxis: function rotateByAxis(axis, angle) {\n    console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n  }\n});\nObject.assign(THREE.Plane.prototype, {\n  isIntersectionLine: function isIntersectionLine(line) {\n    console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n    return this.intersectsLine(line);\n  }\n});\nObject.assign(THREE.Quaternion.prototype, {\n  multiplyVector3: function multiplyVector3(vector) {\n    console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n    return vector.applyQuaternion(this);\n  }\n});\nObject.assign(THREE.Ray.prototype, {\n  isIntersectionBox: function isIntersectionBox(box) {\n    console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  },\n  isIntersectionPlane: function isIntersectionPlane(plane) {\n    console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n    return this.intersectsPlane(plane);\n  },\n  isIntersectionSphere: function isIntersectionSphere(sphere) {\n    console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n    return this.intersectsSphere(sphere);\n  }\n});\nObject.assign(THREE.Vector3.prototype, {\n  setEulerFromRotationMatrix: function setEulerFromRotationMatrix() {\n    console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n  },\n  setEulerFromQuaternion: function setEulerFromQuaternion() {\n    console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n  },\n  getPositionFromMatrix: function getPositionFromMatrix(m) {\n    console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n    return this.setFromMatrixPosition(m);\n  },\n  getScaleFromMatrix: function getScaleFromMatrix(m) {\n    console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n    return this.setFromMatrixScale(m);\n  },\n  getColumnFromMatrix: function getColumnFromMatrix(index, matrix) {\n    console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n    return this.setFromMatrixColumn(matrix, index);\n  }\n}); //\n\nObject.assign(THREE.Object3D.prototype, {\n  getChildByName: function getChildByName(name) {\n    console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n    return this.getObjectByName(name);\n  },\n  renderDepth: function renderDepth(value) {\n    console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n  },\n  translate: function translate(distance, axis) {\n    console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n    return this.translateOnAxis(axis, distance);\n  }\n});\nObject.defineProperties(THREE.Object3D.prototype, {\n  eulerOrder: {\n    get: function get() {\n      console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n      return this.rotation.order;\n    },\n    set: function set(value) {\n      console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n      this.rotation.order = value;\n    }\n  },\n  useQuaternion: {\n    get: function get() {\n      console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n    },\n    set: function set(value) {\n      console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n    }\n  }\n});\nObject.defineProperties(THREE.LOD.prototype, {\n  objects: {\n    get: function get() {\n      console.warn('THREE.LOD: .objects has been renamed to .levels.');\n      return this.levels;\n    }\n  }\n}); //\n\nTHREE.PerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n  console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \" + \"Use .setFocalLength and .filmGauge for a photographic setup.\");\n  if (filmGauge !== undefined) this.filmGauge = filmGauge;\n  this.setFocalLength(focalLength);\n}; //\n\n\nObject.defineProperties(THREE.Light.prototype, {\n  onlyShadow: {\n    set: function set(value) {\n      console.warn('THREE.Light: .onlyShadow has been removed.');\n    }\n  },\n  shadowCameraFov: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n      this.shadow.camera.fov = value;\n    }\n  },\n  shadowCameraLeft: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n      this.shadow.camera.left = value;\n    }\n  },\n  shadowCameraRight: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n      this.shadow.camera.right = value;\n    }\n  },\n  shadowCameraTop: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n      this.shadow.camera.top = value;\n    }\n  },\n  shadowCameraBottom: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n      this.shadow.camera.bottom = value;\n    }\n  },\n  shadowCameraNear: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n      this.shadow.camera.near = value;\n    }\n  },\n  shadowCameraFar: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n      this.shadow.camera.far = value;\n    }\n  },\n  shadowCameraVisible: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n    }\n  },\n  shadowBias: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n      this.shadow.bias = value;\n    }\n  },\n  shadowDarkness: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowDarkness has been removed.');\n    }\n  },\n  shadowMapWidth: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n      this.shadow.mapSize.width = value;\n    }\n  },\n  shadowMapHeight: {\n    set: function set(value) {\n      console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n      this.shadow.mapSize.height = value;\n    }\n  }\n}); //\n\nObject.defineProperties(THREE.BufferAttribute.prototype, {\n  length: {\n    get: function get() {\n      console.warn('THREE.BufferAttribute: .length has been deprecated. Please use .count.');\n      return this.array.length;\n    }\n  }\n});\nObject.assign(THREE.BufferGeometry.prototype, {\n  addIndex: function addIndex(index) {\n    console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n    this.setIndex(index);\n  },\n  addDrawCall: function addDrawCall(start, count, indexOffset) {\n    if (indexOffset !== undefined) {\n      console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n    }\n\n    console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n    this.addGroup(start, count);\n  },\n  clearDrawCalls: function clearDrawCalls() {\n    console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n    this.clearGroups();\n  },\n  computeTangents: function computeTangents() {\n    console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');\n  },\n  computeOffsets: function computeOffsets() {\n    console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n  }\n});\nObject.defineProperties(THREE.BufferGeometry.prototype, {\n  drawcalls: {\n    get: function get() {\n      console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n      return this.groups;\n    }\n  },\n  offsets: {\n    get: function get() {\n      console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n      return this.groups;\n    }\n  }\n}); //\n\nObject.defineProperties(THREE.Material.prototype, {\n  wrapAround: {\n    get: function get() {\n      console.warn('THREE.' + this.type + ': .wrapAround has been removed.');\n    },\n    set: function set(value) {\n      console.warn('THREE.' + this.type + ': .wrapAround has been removed.');\n    }\n  },\n  wrapRGB: {\n    get: function get() {\n      console.warn('THREE.' + this.type + ': .wrapRGB has been removed.');\n      return new THREE.Color();\n    }\n  }\n});\nObject.defineProperties(THREE.MeshPhongMaterial.prototype, {\n  metal: {\n    get: function get() {\n      console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n      return false;\n    },\n    set: function set(value) {\n      console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n    }\n  }\n});\nObject.defineProperties(THREE.ShaderMaterial.prototype, {\n  derivatives: {\n    get: function get() {\n      console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n      return this.extensions.derivatives;\n    },\n    set: function set(value) {\n      console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n      this.extensions.derivatives = value;\n    }\n  }\n}); //\n\nTHREE.EventDispatcher.prototype = Object.assign(Object.create({\n  // Note: Extra base ensures these properties are not 'assign'ed.\n  constructor: THREE.EventDispatcher,\n  apply: function apply(target) {\n    console.warn(\"THREE.EventDispatcher: .apply is deprecated, \" + \"just inherit or Object.assign the prototype to mix-in.\");\n    Object.assign(target, this);\n  }\n}), THREE.EventDispatcher.prototype); //\n\nObject.assign(THREE.WebGLRenderer.prototype, {\n  supportsFloatTextures: function supportsFloatTextures() {\n    console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n    return this.extensions.get('OES_texture_float');\n  },\n  supportsHalfFloatTextures: function supportsHalfFloatTextures() {\n    console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n    return this.extensions.get('OES_texture_half_float');\n  },\n  supportsStandardDerivatives: function supportsStandardDerivatives() {\n    console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n    return this.extensions.get('OES_standard_derivatives');\n  },\n  supportsCompressedTextureS3TC: function supportsCompressedTextureS3TC() {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n    return this.extensions.get('WEBGL_compressed_texture_s3tc');\n  },\n  supportsCompressedTexturePVRTC: function supportsCompressedTexturePVRTC() {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n    return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n  },\n  supportsBlendMinMax: function supportsBlendMinMax() {\n    console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n    return this.extensions.get('EXT_blend_minmax');\n  },\n  supportsVertexTextures: function supportsVertexTextures() {\n    return this.capabilities.vertexTextures;\n  },\n  supportsInstancedArrays: function supportsInstancedArrays() {\n    console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n    return this.extensions.get('ANGLE_instanced_arrays');\n  },\n  enableScissorTest: function enableScissorTest(_boolean2) {\n    console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n    this.setScissorTest(_boolean2);\n  },\n  initMaterial: function initMaterial() {\n    console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n  },\n  addPrePlugin: function addPrePlugin() {\n    console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n  },\n  addPostPlugin: function addPostPlugin() {\n    console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n  },\n  updateShadowMap: function updateShadowMap() {\n    console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n  }\n});\nObject.defineProperties(THREE.WebGLRenderer.prototype, {\n  shadowMapEnabled: {\n    get: function get() {\n      return this.shadowMap.enabled;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n      this.shadowMap.enabled = value;\n    }\n  },\n  shadowMapType: {\n    get: function get() {\n      return this.shadowMap.type;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n      this.shadowMap.type = value;\n    }\n  },\n  shadowMapCullFace: {\n    get: function get() {\n      return this.shadowMap.cullFace;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.');\n      this.shadowMap.cullFace = value;\n    }\n  }\n});\nObject.defineProperties(THREE.WebGLShadowMap.prototype, {\n  cullFace: {\n    get: function get() {\n      return this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack;\n    },\n    set: function set(cullFace) {\n      var value = cullFace !== THREE.CullFaceBack;\n      console.warn(\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\");\n      this.renderReverseSided = value;\n    }\n  }\n}); //\n\nObject.defineProperties(THREE.WebGLRenderTarget.prototype, {\n  wrapS: {\n    get: function get() {\n      console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n      return this.texture.wrapS;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n      this.texture.wrapS = value;\n    }\n  },\n  wrapT: {\n    get: function get() {\n      console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n      return this.texture.wrapT;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n      this.texture.wrapT = value;\n    }\n  },\n  magFilter: {\n    get: function get() {\n      console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n      return this.texture.magFilter;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n      this.texture.magFilter = value;\n    }\n  },\n  minFilter: {\n    get: function get() {\n      console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n      return this.texture.minFilter;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n      this.texture.minFilter = value;\n    }\n  },\n  anisotropy: {\n    get: function get() {\n      console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n      return this.texture.anisotropy;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n      this.texture.anisotropy = value;\n    }\n  },\n  offset: {\n    get: function get() {\n      console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n      return this.texture.offset;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n      this.texture.offset = value;\n    }\n  },\n  repeat: {\n    get: function get() {\n      console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n      return this.texture.repeat;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n      this.texture.repeat = value;\n    }\n  },\n  format: {\n    get: function get() {\n      console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n      return this.texture.format;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n      this.texture.format = value;\n    }\n  },\n  type: {\n    get: function get() {\n      console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n      return this.texture.type;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n      this.texture.type = value;\n    }\n  },\n  generateMipmaps: {\n    get: function get() {\n      console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n      return this.texture.generateMipmaps;\n    },\n    set: function set(value) {\n      console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n      this.texture.generateMipmaps = value;\n    }\n  }\n}); //\n\nObject.assign(THREE.Audio.prototype, {\n  load: function load(file) {\n    console.warn('THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.');\n    var scope = this;\n    var audioLoader = new THREE.AudioLoader();\n    audioLoader.load(file, function (buffer) {\n      scope.setBuffer(buffer);\n    });\n    return this;\n  }\n});\nObject.assign(THREE.AudioAnalyser.prototype, {\n  getData: function getData(file) {\n    console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n    return this.getFrequencyData();\n  }\n}); //\n\nTHREE.GeometryUtils = {\n  merge: function merge(geometry1, geometry2, materialIndexOffset) {\n    console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n    var matrix;\n\n    if (geometry2 instanceof THREE.Mesh) {\n      geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n      matrix = geometry2.matrix;\n      geometry2 = geometry2.geometry;\n    }\n\n    geometry1.merge(geometry2, matrix, materialIndexOffset);\n  },\n  center: function center(geometry) {\n    console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n    return geometry.center();\n  }\n};\nTHREE.ImageUtils = {\n  crossOrigin: undefined,\n  loadTexture: function loadTexture(url, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n    var loader = new THREE.TextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(url, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  },\n  loadTextureCube: function loadTextureCube(urls, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n    var loader = new THREE.CubeTextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(urls, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  },\n  loadCompressedTexture: function loadCompressedTexture() {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  },\n  loadCompressedTextureCube: function loadCompressedTextureCube() {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  }\n}; //\n\nTHREE.Projector = function () {\n  console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');\n\n  this.projectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .projectVector() is now vector.project().');\n    vector.project(camera);\n  };\n\n  this.unprojectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n    vector.unproject(camera);\n  };\n\n  this.pickingRay = function (vector, camera) {\n    console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');\n  };\n}; //\n\n\nTHREE.CanvasRenderer = function () {\n  console.error('THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js');\n  this.domElement = document.createElement('canvas');\n\n  this.clear = function () {};\n\n  this.render = function () {};\n\n  this.setClearColor = function () {};\n\n  this.setSize = function () {};\n}; // File:src/extras/CurveUtils.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\n\n\nTHREE.CurveUtils = {\n  tangentQuadraticBezier: function tangentQuadraticBezier(t, p0, p1, p2) {\n    return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n  },\n  // Puay Bing, thanks for helping with this derivative!\n  tangentCubicBezier: function tangentCubicBezier(t, p0, p1, p2, p3) {\n    return -3 * p0 * (1 - t) * (1 - t) + 3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) + 6 * t * p2 * (1 - t) - 3 * t * t * p2 + 3 * t * t * p3;\n  },\n  tangentSpline: function tangentSpline(t, p0, p1, p2, p3) {\n    // To check if my formulas are correct\n    var h00 = 6 * t * t - 6 * t; // derived from 2t^3 − 3t^2 + 1\n\n    var h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\n    var h01 = -6 * t * t + 6 * t; // − 2t3 + 3t2\n\n    var h11 = 3 * t * t - 2 * t; // t3 − t2\n\n    return h00 + h10 + h01 + h11;\n  },\n  // Catmull-Rom\n  interpolate: function interpolate(p0, p1, p2, p3, t) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  }\n}; // File:src/extras/SceneUtils.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.SceneUtils = {\n  createMultiMaterialObject: function createMultiMaterialObject(geometry, materials) {\n    var group = new THREE.Group();\n\n    for (var i = 0, l = materials.length; i < l; i++) {\n      group.add(new THREE.Mesh(geometry, materials[i]));\n    }\n\n    return group;\n  },\n  detach: function detach(child, parent, scene) {\n    child.applyMatrix(parent.matrixWorld);\n    parent.remove(child);\n    scene.add(child);\n  },\n  attach: function attach(child, scene, parent) {\n    var matrixWorldInverse = new THREE.Matrix4();\n    matrixWorldInverse.getInverse(parent.matrixWorld);\n    child.applyMatrix(matrixWorldInverse);\n    scene.remove(child);\n    parent.add(child);\n  }\n}; // File:src/extras/ShapeUtils.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\n\nTHREE.ShapeUtils = {\n  // calculate area of the contour polygon\n  area: function area(contour) {\n    var n = contour.length;\n    var a = 0.0;\n\n    for (var p = n - 1, q = 0; q < n; p = q++) {\n      a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n    }\n\n    return a * 0.5;\n  },\n  triangulate: function () {\n    /**\r\n     * This code is a quick port of code written in C++ which was submitted to\r\n     * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n     * See original code and more information here:\r\n     * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n     *\r\n     * ported to actionscript by Zevan Rosser\r\n     * www.actionsnippet.com\r\n     *\r\n     * ported to javascript by Joshua Koo\r\n     * http://www.lab4games.net/zz85/blog\r\n     *\r\n     */\n    function snip(contour, u, v, w, n, verts) {\n      var p;\n      var ax, ay, bx, by;\n      var cx, cy, px, py;\n      ax = contour[verts[u]].x;\n      ay = contour[verts[u]].y;\n      bx = contour[verts[v]].x;\n      by = contour[verts[v]].y;\n      cx = contour[verts[w]].x;\n      cy = contour[verts[w]].y;\n      if (Number.EPSILON > (bx - ax) * (cy - ay) - (by - ay) * (cx - ax)) return false;\n      var aX, aY, bX, bY, cX, cY;\n      var apx, apy, bpx, bpy, cpx, cpy;\n      var cCROSSap, bCROSScp, aCROSSbp;\n      aX = cx - bx;\n      aY = cy - by;\n      bX = ax - cx;\n      bY = ay - cy;\n      cX = bx - ax;\n      cY = by - ay;\n\n      for (p = 0; p < n; p++) {\n        px = contour[verts[p]].x;\n        py = contour[verts[p]].y;\n        if (px === ax && py === ay || px === bx && py === by || px === cx && py === cy) continue;\n        apx = px - ax;\n        apy = py - ay;\n        bpx = px - bx;\n        bpy = py - by;\n        cpx = px - cx;\n        cpy = py - cy; // see if p is inside triangle abc\n\n        aCROSSbp = aX * bpy - aY * bpx;\n        cCROSSap = cX * apy - cY * apx;\n        bCROSScp = bX * cpy - bY * cpx;\n        if (aCROSSbp >= -Number.EPSILON && bCROSScp >= -Number.EPSILON && cCROSSap >= -Number.EPSILON) return false;\n      }\n\n      return true;\n    } // takes in an contour array and returns\n\n\n    return function (contour, indices) {\n      var n = contour.length;\n      if (n < 3) return null;\n      var result = [],\n          verts = [],\n          vertIndices = [];\n      /* we want a counter-clockwise polygon in verts */\n\n      var u, v, w;\n\n      if (THREE.ShapeUtils.area(contour) > 0.0) {\n        for (v = 0; v < n; v++) {\n          verts[v] = v;\n        }\n      } else {\n        for (v = 0; v < n; v++) {\n          verts[v] = n - 1 - v;\n        }\n      }\n\n      var nv = n;\n      /*  remove nv - 2 vertices, creating 1 triangle every time */\n\n      var count = 2 * nv;\n      /* error detection */\n\n      for (v = nv - 1; nv > 2;) {\n        /* if we loop, it is probably a non-simple polygon */\n        if (count-- <= 0) {\n          //** Triangulate: ERROR - probable bad polygon!\n          //throw ( \"Warning, unable to triangulate polygon!\" );\n          //return null;\n          // Sometimes warning is fine, especially polygons are triangulated in reverse.\n          console.warn('THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()');\n          if (indices) return vertIndices;\n          return result;\n        }\n        /* three consecutive vertices in current polygon, <u,v,w> */\n\n\n        u = v;\n        if (nv <= u) u = 0;\n        /* previous */\n\n        v = u + 1;\n        if (nv <= v) v = 0;\n        /* new v    */\n\n        w = v + 1;\n        if (nv <= w) w = 0;\n        /* next     */\n\n        if (snip(contour, u, v, w, nv, verts)) {\n          var a, b, c, s, t;\n          /* true names of the vertices */\n\n          a = verts[u];\n          b = verts[v];\n          c = verts[w];\n          /* output Triangle */\n\n          result.push([contour[a], contour[b], contour[c]]);\n          vertIndices.push([verts[u], verts[v], verts[w]]);\n          /* remove v from the remaining polygon */\n\n          for (s = v, t = v + 1; t < nv; s++, t++) {\n            verts[s] = verts[t];\n          }\n\n          nv--;\n          /* reset error detection counter */\n\n          count = 2 * nv;\n        }\n      }\n\n      if (indices) return vertIndices;\n      return result;\n    };\n  }(),\n  triangulateShape: function triangulateShape(contour, holes) {\n    function point_in_segment_2D_colin(inSegPt1, inSegPt2, inOtherPt) {\n      // inOtherPt needs to be collinear to the inSegment\n      if (inSegPt1.x !== inSegPt2.x) {\n        if (inSegPt1.x < inSegPt2.x) {\n          return inSegPt1.x <= inOtherPt.x && inOtherPt.x <= inSegPt2.x;\n        } else {\n          return inSegPt2.x <= inOtherPt.x && inOtherPt.x <= inSegPt1.x;\n        }\n      } else {\n        if (inSegPt1.y < inSegPt2.y) {\n          return inSegPt1.y <= inOtherPt.y && inOtherPt.y <= inSegPt2.y;\n        } else {\n          return inSegPt2.y <= inOtherPt.y && inOtherPt.y <= inSegPt1.y;\n        }\n      }\n    }\n\n    function intersect_segments_2D(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs) {\n      var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,\n          seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n      var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,\n          seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n      var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n      var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n      var limit = seg1dy * seg2dx - seg1dx * seg2dy;\n      var perpSeg1 = seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n      if (Math.abs(limit) > Number.EPSILON) {\n        // not parallel\n        var perpSeg2;\n\n        if (limit > 0) {\n          if (perpSeg1 < 0 || perpSeg1 > limit) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if (perpSeg2 < 0 || perpSeg2 > limit) return [];\n        } else {\n          if (perpSeg1 > 0 || perpSeg1 < limit) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if (perpSeg2 > 0 || perpSeg2 < limit) return [];\n        } // i.e. to reduce rounding errors\n        // intersection at endpoint of segment#1?\n\n\n        if (perpSeg2 === 0) {\n          if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n          return [inSeg1Pt1];\n        }\n\n        if (perpSeg2 === limit) {\n          if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n          return [inSeg1Pt2];\n        } // intersection at endpoint of segment#2?\n\n\n        if (perpSeg1 === 0) return [inSeg2Pt1];\n        if (perpSeg1 === limit) return [inSeg2Pt2]; // return real intersection point\n\n        var factorSeg1 = perpSeg2 / limit;\n        return [{\n          x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n          y: inSeg1Pt1.y + factorSeg1 * seg1dy\n        }];\n      } else {\n        // parallel or collinear\n        if (perpSeg1 !== 0 || seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy) return []; // they are collinear or degenerate\n\n        var seg1Pt = seg1dx === 0 && seg1dy === 0; // segment1 is just a point?\n\n        var seg2Pt = seg2dx === 0 && seg2dy === 0; // segment2 is just a point?\n        // both segments are points\n\n        if (seg1Pt && seg2Pt) {\n          if (inSeg1Pt1.x !== inSeg2Pt1.x || inSeg1Pt1.y !== inSeg2Pt1.y) return []; // they are distinct  points\n\n          return [inSeg1Pt1]; // they are the same point\n        } // segment#1  is a single point\n\n\n        if (seg1Pt) {\n          if (!point_in_segment_2D_colin(inSeg2Pt1, inSeg2Pt2, inSeg1Pt1)) return []; // but not in segment#2\n\n          return [inSeg1Pt1];\n        } // segment#2  is a single point\n\n\n        if (seg2Pt) {\n          if (!point_in_segment_2D_colin(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1)) return []; // but not in segment#1\n\n          return [inSeg2Pt1];\n        } // they are collinear segments, which might overlap\n\n\n        var seg1min, seg1max, seg1minVal, seg1maxVal;\n        var seg2min, seg2max, seg2minVal, seg2maxVal;\n\n        if (seg1dx !== 0) {\n          // the segments are NOT on a vertical line\n          if (inSeg1Pt1.x < inSeg1Pt2.x) {\n            seg1min = inSeg1Pt1;\n            seg1minVal = inSeg1Pt1.x;\n            seg1max = inSeg1Pt2;\n            seg1maxVal = inSeg1Pt2.x;\n          } else {\n            seg1min = inSeg1Pt2;\n            seg1minVal = inSeg1Pt2.x;\n            seg1max = inSeg1Pt1;\n            seg1maxVal = inSeg1Pt1.x;\n          }\n\n          if (inSeg2Pt1.x < inSeg2Pt2.x) {\n            seg2min = inSeg2Pt1;\n            seg2minVal = inSeg2Pt1.x;\n            seg2max = inSeg2Pt2;\n            seg2maxVal = inSeg2Pt2.x;\n          } else {\n            seg2min = inSeg2Pt2;\n            seg2minVal = inSeg2Pt2.x;\n            seg2max = inSeg2Pt1;\n            seg2maxVal = inSeg2Pt1.x;\n          }\n        } else {\n          // the segments are on a vertical line\n          if (inSeg1Pt1.y < inSeg1Pt2.y) {\n            seg1min = inSeg1Pt1;\n            seg1minVal = inSeg1Pt1.y;\n            seg1max = inSeg1Pt2;\n            seg1maxVal = inSeg1Pt2.y;\n          } else {\n            seg1min = inSeg1Pt2;\n            seg1minVal = inSeg1Pt2.y;\n            seg1max = inSeg1Pt1;\n            seg1maxVal = inSeg1Pt1.y;\n          }\n\n          if (inSeg2Pt1.y < inSeg2Pt2.y) {\n            seg2min = inSeg2Pt1;\n            seg2minVal = inSeg2Pt1.y;\n            seg2max = inSeg2Pt2;\n            seg2maxVal = inSeg2Pt2.y;\n          } else {\n            seg2min = inSeg2Pt2;\n            seg2minVal = inSeg2Pt2.y;\n            seg2max = inSeg2Pt1;\n            seg2maxVal = inSeg2Pt1.y;\n          }\n        }\n\n        if (seg1minVal <= seg2minVal) {\n          if (seg1maxVal < seg2minVal) return [];\n\n          if (seg1maxVal === seg2minVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [seg2min];\n          }\n\n          if (seg1maxVal <= seg2maxVal) return [seg2min, seg1max];\n          return [seg2min, seg2max];\n        } else {\n          if (seg1minVal > seg2maxVal) return [];\n\n          if (seg1minVal === seg2maxVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [seg1min];\n          }\n\n          if (seg1maxVal <= seg2maxVal) return [seg1min, seg1max];\n          return [seg1min, seg2max];\n        }\n      }\n    }\n\n    function isPointInsideAngle(inVertex, inLegFromPt, inLegToPt, inOtherPt) {\n      // The order of legs is important\n      // translation of all points, so that Vertex is at (0,0)\n      var legFromPtX = inLegFromPt.x - inVertex.x,\n          legFromPtY = inLegFromPt.y - inVertex.y;\n      var legToPtX = inLegToPt.x - inVertex.x,\n          legToPtY = inLegToPt.y - inVertex.y;\n      var otherPtX = inOtherPt.x - inVertex.x,\n          otherPtY = inOtherPt.y - inVertex.y; // main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\n      var from2toAngle = legFromPtX * legToPtY - legFromPtY * legToPtX;\n      var from2otherAngle = legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n      if (Math.abs(from2toAngle) > Number.EPSILON) {\n        // angle != 180 deg.\n        var other2toAngle = otherPtX * legToPtY - otherPtY * legToPtX; // console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n        if (from2toAngle > 0) {\n          // main angle < 180 deg.\n          return from2otherAngle >= 0 && other2toAngle >= 0;\n        } else {\n          // main angle > 180 deg.\n          return from2otherAngle >= 0 || other2toAngle >= 0;\n        }\n      } else {\n        // angle == 180 deg.\n        // console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n        return from2otherAngle > 0;\n      }\n    }\n\n    function removeHoles(contour, holes) {\n      var shape = contour.concat(); // work on this shape\n\n      var hole;\n\n      function isCutLineInsideAngles(inShapeIdx, inHoleIdx) {\n        // Check if hole point lies within angle around shape point\n        var lastShapeIdx = shape.length - 1;\n        var prevShapeIdx = inShapeIdx - 1;\n        if (prevShapeIdx < 0) prevShapeIdx = lastShapeIdx;\n        var nextShapeIdx = inShapeIdx + 1;\n        if (nextShapeIdx > lastShapeIdx) nextShapeIdx = 0;\n        var insideAngle = isPointInsideAngle(shape[inShapeIdx], shape[prevShapeIdx], shape[nextShapeIdx], hole[inHoleIdx]);\n\n        if (!insideAngle) {\n          // console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n          return false;\n        } // Check if shape point lies within angle around hole point\n\n\n        var lastHoleIdx = hole.length - 1;\n        var prevHoleIdx = inHoleIdx - 1;\n        if (prevHoleIdx < 0) prevHoleIdx = lastHoleIdx;\n        var nextHoleIdx = inHoleIdx + 1;\n        if (nextHoleIdx > lastHoleIdx) nextHoleIdx = 0;\n        insideAngle = isPointInsideAngle(hole[inHoleIdx], hole[prevHoleIdx], hole[nextHoleIdx], shape[inShapeIdx]);\n\n        if (!insideAngle) {\n          // console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n          return false;\n        }\n\n        return true;\n      }\n\n      function intersectsShapeEdge(inShapePt, inHolePt) {\n        // checks for intersections with shape edges\n        var sIdx, nextIdx, intersection;\n\n        for (sIdx = 0; sIdx < shape.length; sIdx++) {\n          nextIdx = sIdx + 1;\n          nextIdx %= shape.length;\n          intersection = intersect_segments_2D(inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true);\n          if (intersection.length > 0) return true;\n        }\n\n        return false;\n      }\n\n      var indepHoles = [];\n\n      function intersectsHoleEdge(inShapePt, inHolePt) {\n        // checks for intersections with hole edges\n        var ihIdx, chkHole, hIdx, nextIdx, intersection;\n\n        for (ihIdx = 0; ihIdx < indepHoles.length; ihIdx++) {\n          chkHole = holes[indepHoles[ihIdx]];\n\n          for (hIdx = 0; hIdx < chkHole.length; hIdx++) {\n            nextIdx = hIdx + 1;\n            nextIdx %= chkHole.length;\n            intersection = intersect_segments_2D(inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true);\n            if (intersection.length > 0) return true;\n          }\n        }\n\n        return false;\n      }\n\n      var holeIndex,\n          shapeIndex,\n          shapePt,\n          holePt,\n          holeIdx,\n          cutKey,\n          failedCuts = [],\n          tmpShape1,\n          tmpShape2,\n          tmpHole1,\n          tmpHole2;\n\n      for (var h = 0, hl = holes.length; h < hl; h++) {\n        indepHoles.push(h);\n      }\n\n      var minShapeIndex = 0;\n      var counter = indepHoles.length * 2;\n\n      while (indepHoles.length > 0) {\n        counter--;\n\n        if (counter < 0) {\n          console.log(\"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\");\n          break;\n        } // search for shape-vertex and hole-vertex,\n        // which can be connected without intersections\n\n\n        for (shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex++) {\n          shapePt = shape[shapeIndex];\n          holeIndex = -1; // search for hole which can be reached without intersections\n\n          for (var h = 0; h < indepHoles.length; h++) {\n            holeIdx = indepHoles[h]; // prevent multiple checks\n\n            cutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n            if (failedCuts[cutKey] !== undefined) continue;\n            hole = holes[holeIdx];\n\n            for (var h2 = 0; h2 < hole.length; h2++) {\n              holePt = hole[h2];\n              if (!isCutLineInsideAngles(shapeIndex, h2)) continue;\n              if (intersectsShapeEdge(shapePt, holePt)) continue;\n              if (intersectsHoleEdge(shapePt, holePt)) continue;\n              holeIndex = h2;\n              indepHoles.splice(h, 1);\n              tmpShape1 = shape.slice(0, shapeIndex + 1);\n              tmpShape2 = shape.slice(shapeIndex);\n              tmpHole1 = hole.slice(holeIndex);\n              tmpHole2 = hole.slice(0, holeIndex + 1);\n              shape = tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2);\n              minShapeIndex = shapeIndex; // Debug only, to show the selected cuts\n              // glob_CutLines.push( [ shapePt, holePt ] );\n\n              break;\n            }\n\n            if (holeIndex >= 0) break; // hole-vertex found\n\n            failedCuts[cutKey] = true; // remember failure\n          }\n\n          if (holeIndex >= 0) break; // hole-vertex found\n        }\n      }\n\n      return shape;\n      /* shape with no holes */\n    }\n\n    var i,\n        il,\n        f,\n        face,\n        key,\n        index,\n        allPointsMap = {}; // To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n    var allpoints = contour.concat();\n\n    for (var h = 0, hl = holes.length; h < hl; h++) {\n      Array.prototype.push.apply(allpoints, holes[h]);\n    } //console.log( \"allpoints\",allpoints, allpoints.length );\n    // prepare all points map\n\n\n    for (i = 0, il = allpoints.length; i < il; i++) {\n      key = allpoints[i].x + \":\" + allpoints[i].y;\n\n      if (allPointsMap[key] !== undefined) {\n        console.warn(\"THREE.Shape: Duplicate point\", key);\n      }\n\n      allPointsMap[key] = i;\n    } // remove holes by cutting paths to holes and adding them to the shape\n\n\n    var shapeWithoutHoles = removeHoles(contour, holes);\n    var triangles = THREE.ShapeUtils.triangulate(shapeWithoutHoles, false); // True returns indices for points of spooled shape\n    //console.log( \"triangles\",triangles, triangles.length );\n    // check all face vertices against all points map\n\n    for (i = 0, il = triangles.length; i < il; i++) {\n      face = triangles[i];\n\n      for (f = 0; f < 3; f++) {\n        key = face[f].x + \":\" + face[f].y;\n        index = allPointsMap[key];\n\n        if (index !== undefined) {\n          face[f] = index;\n        }\n      }\n    }\n\n    return triangles.concat();\n  },\n  isClockWise: function isClockWise(pts) {\n    return THREE.ShapeUtils.area(pts) < 0;\n  },\n  // Bezier Curves formulas obtained from\n  // http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n  // Quad Bezier Functions\n  b2: function () {\n    function b2p0(t, p) {\n      var k = 1 - t;\n      return k * k * p;\n    }\n\n    function b2p1(t, p) {\n      return 2 * (1 - t) * t * p;\n    }\n\n    function b2p2(t, p) {\n      return t * t * p;\n    }\n\n    return function (t, p0, p1, p2) {\n      return b2p0(t, p0) + b2p1(t, p1) + b2p2(t, p2);\n    };\n  }(),\n  // Cubic Bezier Functions\n  b3: function () {\n    function b3p0(t, p) {\n      var k = 1 - t;\n      return k * k * k * p;\n    }\n\n    function b3p1(t, p) {\n      var k = 1 - t;\n      return 3 * k * k * t * p;\n    }\n\n    function b3p2(t, p) {\n      var k = 1 - t;\n      return 3 * k * t * t * p;\n    }\n\n    function b3p3(t, p) {\n      return t * t * t * p;\n    }\n\n    return function (t, p0, p1, p2, p3) {\n      return b3p0(t, p0) + b3p1(t, p1) + b3p2(t, p2) + b3p3(t, p3);\n    };\n  }()\n}; // File:src/extras/core/Curve.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\n\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\n\nTHREE.Curve = function () {};\n\nTHREE.Curve.prototype = {\n  constructor: THREE.Curve,\n  // Virtual base class method to overwrite and implement in subclasses\n  //\t- t [0 .. 1]\n  getPoint: function getPoint(t) {\n    console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");\n    return null;\n  },\n  // Get point at relative position in curve according to arc length\n  // - u [0 .. 1]\n  getPointAt: function getPointAt(u) {\n    var t = this.getUtoTmapping(u);\n    return this.getPoint(t);\n  },\n  // Get sequence of points using getPoint( t )\n  getPoints: function getPoints(divisions) {\n    if (!divisions) divisions = 5;\n    var d,\n        pts = [];\n\n    for (d = 0; d <= divisions; d++) {\n      pts.push(this.getPoint(d / divisions));\n    }\n\n    return pts;\n  },\n  // Get sequence of points using getPointAt( u )\n  getSpacedPoints: function getSpacedPoints(divisions) {\n    if (!divisions) divisions = 5;\n    var d,\n        pts = [];\n\n    for (d = 0; d <= divisions; d++) {\n      pts.push(this.getPointAt(d / divisions));\n    }\n\n    return pts;\n  },\n  // Get total curve arc length\n  getLength: function getLength() {\n    var lengths = this.getLengths();\n    return lengths[lengths.length - 1];\n  },\n  // Get list of cumulative segment lengths\n  getLengths: function getLengths(divisions) {\n    if (!divisions) divisions = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200;\n\n    if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n      //console.log( \"cached\", this.cacheArcLengths );\n      return this.cacheArcLengths;\n    }\n\n    this.needsUpdate = false;\n    var cache = [];\n    var current,\n        last = this.getPoint(0);\n    var p,\n        sum = 0;\n    cache.push(0);\n\n    for (p = 1; p <= divisions; p++) {\n      current = this.getPoint(p / divisions);\n      sum += current.distanceTo(last);\n      cache.push(sum);\n      last = current;\n    }\n\n    this.cacheArcLengths = cache;\n    return cache; // { sums: cache, sum:sum }; Sum is in the last element.\n  },\n  updateArcLengths: function updateArcLengths() {\n    this.needsUpdate = true;\n    this.getLengths();\n  },\n  // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n  getUtoTmapping: function getUtoTmapping(u, distance) {\n    var arcLengths = this.getLengths();\n    var i = 0,\n        il = arcLengths.length;\n    var targetArcLength; // The targeted u distance value to get\n\n    if (distance) {\n      targetArcLength = distance;\n    } else {\n      targetArcLength = u * arcLengths[il - 1];\n    } //var time = Date.now();\n    // binary search for the index with largest value smaller than target u distance\n\n\n    var low = 0,\n        high = il - 1,\n        comparison;\n\n    while (low <= high) {\n      i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n      comparison = arcLengths[i] - targetArcLength;\n\n      if (comparison < 0) {\n        low = i + 1;\n      } else if (comparison > 0) {\n        high = i - 1;\n      } else {\n        high = i;\n        break; // DONE\n      }\n    }\n\n    i = high; //console.log('b' , i, low, high, Date.now()- time);\n\n    if (arcLengths[i] === targetArcLength) {\n      var t = i / (il - 1);\n      return t;\n    } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n    var lengthBefore = arcLengths[i];\n    var lengthAfter = arcLengths[i + 1];\n    var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n    var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n    var t = (i + segmentFraction) / (il - 1);\n    return t;\n  },\n  // Returns a unit vector tangent at t\n  // In case any sub curve does not implement its tangent derivation,\n  // 2 points a small delta apart will be used to find its gradient\n  // which seems to give a reasonable approximation\n  getTangent: function getTangent(t) {\n    var delta = 0.0001;\n    var t1 = t - delta;\n    var t2 = t + delta; // Capping in case of danger\n\n    if (t1 < 0) t1 = 0;\n    if (t2 > 1) t2 = 1;\n    var pt1 = this.getPoint(t1);\n    var pt2 = this.getPoint(t2);\n    var vec = pt2.clone().sub(pt1);\n    return vec.normalize();\n  },\n  getTangentAt: function getTangentAt(u) {\n    var t = this.getUtoTmapping(u);\n    return this.getTangent(t);\n  }\n}; // TODO: Transformation for Curves?\n\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\n// A Factory method for creating new curve subclasses\n\nTHREE.Curve.create = function (constructor, getPointFunc) {\n  constructor.prototype = Object.create(THREE.Curve.prototype);\n  constructor.prototype.constructor = constructor;\n  constructor.prototype.getPoint = getPointFunc;\n  return constructor;\n}; // File:src/extras/core/CurvePath.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\n\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\n\n\nTHREE.CurvePath = function () {\n  this.curves = [];\n  this.autoClose = false; // Automatically closes the path\n};\n\nTHREE.CurvePath.prototype = Object.assign(Object.create(THREE.Curve.prototype), {\n  constructor: THREE.CurvePath,\n  add: function add(curve) {\n    this.curves.push(curve);\n  },\n  closePath: function closePath() {\n    // TODO Test\n    // and verify for vector3 (needs to implement equals)\n    // Add a line curve if start and end of lines are not connected\n    var startPoint = this.curves[0].getPoint(0);\n    var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n    if (!startPoint.equals(endPoint)) {\n      this.curves.push(new THREE.LineCurve(endPoint, startPoint));\n    }\n  },\n  // To get accurate point with reference to\n  // entire path distance at time t,\n  // following has to be done:\n  // 1. Length of each sub path have to be known\n  // 2. Locate and identify type of curve\n  // 3. Get t for the curve\n  // 4. Return curve.getPointAt(t')\n  getPoint: function getPoint(t) {\n    var d = t * this.getLength();\n    var curveLengths = this.getCurveLengths();\n    var i = 0; // To think about boundaries points.\n\n    while (i < curveLengths.length) {\n      if (curveLengths[i] >= d) {\n        var diff = curveLengths[i] - d;\n        var curve = this.curves[i];\n        var u = 1 - diff / curve.getLength();\n        return curve.getPointAt(u);\n      }\n\n      i++;\n    }\n\n    return null; // loop where sum != 0, sum > d , sum+1 <d\n  },\n  // We cannot use the default THREE.Curve getPoint() with getLength() because in\n  // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n  // getPoint() depends on getLength\n  getLength: function getLength() {\n    var lens = this.getCurveLengths();\n    return lens[lens.length - 1];\n  },\n  // Compute lengths and cache them\n  // We cannot overwrite getLengths() because UtoT mapping uses it.\n  getCurveLengths: function getCurveLengths() {\n    // We use cache values if curves and cache array are same length\n    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n      return this.cacheLengths;\n    } // Get length of sub-curve\n    // Push sums into cached array\n\n\n    var lengths = [],\n        sums = 0;\n\n    for (var i = 0, l = this.curves.length; i < l; i++) {\n      sums += this.curves[i].getLength();\n      lengths.push(sums);\n    }\n\n    this.cacheLengths = lengths;\n    return lengths;\n  },\n\n  /**************************************************************\r\n   *\tCreate Geometries Helpers\r\n   **************************************************************/\n  /// Generate geometry from path points (for Line or Points objects)\n  createPointsGeometry: function createPointsGeometry(divisions) {\n    var pts = this.getPoints(divisions);\n    return this.createGeometry(pts);\n  },\n  // Generate geometry from equidistant sampling along the path\n  createSpacedPointsGeometry: function createSpacedPointsGeometry(divisions) {\n    var pts = this.getSpacedPoints(divisions);\n    return this.createGeometry(pts);\n  },\n  createGeometry: function createGeometry(points) {\n    var geometry = new THREE.Geometry();\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      var point = points[i];\n      geometry.vertices.push(new THREE.Vector3(point.x, point.y, point.z || 0));\n    }\n\n    return geometry;\n  }\n}); // File:src/extras/core/Font.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Font = function (data) {\n  this.data = data;\n};\n\nObject.assign(THREE.Font.prototype, {\n  generateShapes: function generateShapes(text, size, divisions) {\n    function createPaths(text) {\n      var chars = String(text).split('');\n      var scale = size / data.resolution;\n      var offset = 0;\n      var paths = [];\n\n      for (var i = 0; i < chars.length; i++) {\n        var ret = createPath(chars[i], scale, offset);\n        offset += ret.offset;\n        paths.push(ret.path);\n      }\n\n      return paths;\n    }\n\n    function createPath(c, scale, offset) {\n      var glyph = data.glyphs[c] || data.glyphs['?'];\n      if (!glyph) return;\n      var path = new THREE.Path();\n      var pts = [],\n          b2 = THREE.ShapeUtils.b2,\n          b3 = THREE.ShapeUtils.b3;\n      var x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n      if (glyph.o) {\n        var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n        for (var i = 0, l = outline.length; i < l;) {\n          var action = outline[i++];\n\n          switch (action) {\n            case 'm':\n              // moveTo\n              x = outline[i++] * scale + offset;\n              y = outline[i++] * scale;\n              path.moveTo(x, y);\n              break;\n\n            case 'l':\n              // lineTo\n              x = outline[i++] * scale + offset;\n              y = outline[i++] * scale;\n              path.lineTo(x, y);\n              break;\n\n            case 'q':\n              // quadraticCurveTo\n              cpx = outline[i++] * scale + offset;\n              cpy = outline[i++] * scale;\n              cpx1 = outline[i++] * scale + offset;\n              cpy1 = outline[i++] * scale;\n              path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n              laste = pts[pts.length - 1];\n\n              if (laste) {\n                cpx0 = laste.x;\n                cpy0 = laste.y;\n\n                for (var i2 = 1; i2 <= divisions; i2++) {\n                  var t = i2 / divisions;\n                  b2(t, cpx0, cpx1, cpx);\n                  b2(t, cpy0, cpy1, cpy);\n                }\n              }\n\n              break;\n\n            case 'b':\n              // bezierCurveTo\n              cpx = outline[i++] * scale + offset;\n              cpy = outline[i++] * scale;\n              cpx1 = outline[i++] * scale + offset;\n              cpy1 = outline[i++] * scale;\n              cpx2 = outline[i++] * scale + offset;\n              cpy2 = outline[i++] * scale;\n              path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n              laste = pts[pts.length - 1];\n\n              if (laste) {\n                cpx0 = laste.x;\n                cpy0 = laste.y;\n\n                for (var i2 = 1; i2 <= divisions; i2++) {\n                  var t = i2 / divisions;\n                  b3(t, cpx0, cpx1, cpx2, cpx);\n                  b3(t, cpy0, cpy1, cpy2, cpy);\n                }\n              }\n\n              break;\n          }\n        }\n      }\n\n      return {\n        offset: glyph.ha * scale,\n        path: path\n      };\n    } //\n\n\n    if (size === undefined) size = 100;\n    if (divisions === undefined) divisions = 4;\n    var data = this.data;\n    var paths = createPaths(text);\n    var shapes = [];\n\n    for (var p = 0, pl = paths.length; p < pl; p++) {\n      Array.prototype.push.apply(shapes, paths[p].toShapes());\n    }\n\n    return shapes;\n  }\n}); // File:src/extras/core/Path.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\n\nTHREE.Path = function (points) {\n  THREE.CurvePath.call(this);\n  this.actions = [];\n\n  if (points) {\n    this.fromPoints(points);\n  }\n};\n\nTHREE.Path.prototype = Object.assign(Object.create(THREE.CurvePath.prototype), {\n  constructor: THREE.Path,\n  // TODO Clean up PATH API\n  // Create path using straight lines to connect all points\n  // - vectors: array of Vector2\n  fromPoints: function fromPoints(vectors) {\n    this.moveTo(vectors[0].x, vectors[0].y);\n\n    for (var i = 1, l = vectors.length; i < l; i++) {\n      this.lineTo(vectors[i].x, vectors[i].y);\n    }\n  },\n  moveTo: function moveTo(x, y) {\n    this.actions.push({\n      action: 'moveTo',\n      args: [x, y]\n    });\n  },\n  lineTo: function lineTo(x, y) {\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    var curve = new THREE.LineCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(x, y));\n    this.curves.push(curve);\n    this.actions.push({\n      action: 'lineTo',\n      args: [x, y]\n    });\n  },\n  quadraticCurveTo: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    var curve = new THREE.QuadraticBezierCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(aCPx, aCPy), new THREE.Vector2(aX, aY));\n    this.curves.push(curve);\n    this.actions.push({\n      action: 'quadraticCurveTo',\n      args: [aCPx, aCPy, aX, aY]\n    });\n  },\n  bezierCurveTo: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    var curve = new THREE.CubicBezierCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(aCP1x, aCP1y), new THREE.Vector2(aCP2x, aCP2y), new THREE.Vector2(aX, aY));\n    this.curves.push(curve);\n    this.actions.push({\n      action: 'bezierCurveTo',\n      args: [aCP1x, aCP1y, aCP2x, aCP2y, aX, aY]\n    });\n  },\n  splineThru: function splineThru(pts\n  /*Array of Vector*/\n  ) {\n    var args = Array.prototype.slice.call(arguments);\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    var npts = [new THREE.Vector2(x0, y0)];\n    Array.prototype.push.apply(npts, pts);\n    var curve = new THREE.SplineCurve(npts);\n    this.curves.push(curve);\n    this.actions.push({\n      action: 'splineThru',\n      args: args\n    });\n  },\n  arc: function arc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n  },\n  absarc: function absarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n  },\n  ellipse: function ellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n  },\n  absellipse: function absellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    var args = [aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation || 0 // aRotation is optional.\n    ];\n    var curve = new THREE.EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n    this.curves.push(curve);\n    var lastPoint = curve.getPoint(1);\n    args.push(lastPoint.x);\n    args.push(lastPoint.y);\n    this.actions.push({\n      action: 'ellipse',\n      args: args\n    });\n  },\n  getSpacedPoints: function getSpacedPoints(divisions) {\n    if (!divisions) divisions = 40;\n    var points = [];\n\n    for (var i = 0; i < divisions; i++) {\n      points.push(this.getPoint(i / divisions)); //if ( !this.getPoint( i / divisions ) ) throw \"DIE\";\n    }\n\n    if (this.autoClose) {\n      points.push(points[0]);\n    }\n\n    return points;\n  },\n  getPoints: function getPoints(divisions) {\n    divisions = divisions || 12;\n    var b2 = THREE.ShapeUtils.b2;\n    var b3 = THREE.ShapeUtils.b3;\n    var points = [];\n    var cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0, laste, tx, ty;\n\n    for (var i = 0, l = this.actions.length; i < l; i++) {\n      var item = this.actions[i];\n      var action = item.action;\n      var args = item.args;\n\n      switch (action) {\n        case 'moveTo':\n          points.push(new THREE.Vector2(args[0], args[1]));\n          break;\n\n        case 'lineTo':\n          points.push(new THREE.Vector2(args[0], args[1]));\n          break;\n\n        case 'quadraticCurveTo':\n          cpx = args[2];\n          cpy = args[3];\n          cpx1 = args[0];\n          cpy1 = args[1];\n\n          if (points.length > 0) {\n            laste = points[points.length - 1];\n            cpx0 = laste.x;\n            cpy0 = laste.y;\n          } else {\n            laste = this.actions[i - 1].args;\n            cpx0 = laste[laste.length - 2];\n            cpy0 = laste[laste.length - 1];\n          }\n\n          for (var j = 1; j <= divisions; j++) {\n            var t = j / divisions;\n            tx = b2(t, cpx0, cpx1, cpx);\n            ty = b2(t, cpy0, cpy1, cpy);\n            points.push(new THREE.Vector2(tx, ty));\n          }\n\n          break;\n\n        case 'bezierCurveTo':\n          cpx = args[4];\n          cpy = args[5];\n          cpx1 = args[0];\n          cpy1 = args[1];\n          cpx2 = args[2];\n          cpy2 = args[3];\n\n          if (points.length > 0) {\n            laste = points[points.length - 1];\n            cpx0 = laste.x;\n            cpy0 = laste.y;\n          } else {\n            laste = this.actions[i - 1].args;\n            cpx0 = laste[laste.length - 2];\n            cpy0 = laste[laste.length - 1];\n          }\n\n          for (var j = 1; j <= divisions; j++) {\n            var t = j / divisions;\n            tx = b3(t, cpx0, cpx1, cpx2, cpx);\n            ty = b3(t, cpy0, cpy1, cpy2, cpy);\n            points.push(new THREE.Vector2(tx, ty));\n          }\n\n          break;\n\n        case 'splineThru':\n          laste = this.actions[i - 1].args;\n          var last = new THREE.Vector2(laste[laste.length - 2], laste[laste.length - 1]);\n          var spts = [last];\n          var n = divisions * args[0].length;\n          spts = spts.concat(args[0]);\n          var spline = new THREE.SplineCurve(spts);\n\n          for (var j = 1; j <= n; j++) {\n            points.push(spline.getPointAt(j / n));\n          }\n\n          break;\n\n        case 'arc':\n          var aX = args[0],\n              aY = args[1],\n              aRadius = args[2],\n              aStartAngle = args[3],\n              aEndAngle = args[4],\n              aClockwise = !!args[5];\n          var deltaAngle = aEndAngle - aStartAngle;\n          var angle;\n          var tdivisions = divisions * 2;\n\n          for (var j = 1; j <= tdivisions; j++) {\n            var t = j / tdivisions;\n\n            if (!aClockwise) {\n              t = 1 - t;\n            }\n\n            angle = aStartAngle + t * deltaAngle;\n            tx = aX + aRadius * Math.cos(angle);\n            ty = aY + aRadius * Math.sin(angle); //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n            points.push(new THREE.Vector2(tx, ty));\n          } //console.log(points);\n\n\n          break;\n\n        case 'ellipse':\n          var aX = args[0],\n              aY = args[1],\n              xRadius = args[2],\n              yRadius = args[3],\n              aStartAngle = args[4],\n              aEndAngle = args[5],\n              aClockwise = !!args[6],\n              aRotation = args[7];\n          var deltaAngle = aEndAngle - aStartAngle;\n          var angle;\n          var tdivisions = divisions * 2;\n          var cos, sin;\n\n          if (aRotation !== 0) {\n            cos = Math.cos(aRotation);\n            sin = Math.sin(aRotation);\n          }\n\n          for (var j = 1; j <= tdivisions; j++) {\n            var t = j / tdivisions;\n\n            if (!aClockwise) {\n              t = 1 - t;\n            }\n\n            angle = aStartAngle + t * deltaAngle;\n            tx = aX + xRadius * Math.cos(angle);\n            ty = aY + yRadius * Math.sin(angle);\n\n            if (aRotation !== 0) {\n              var x = tx,\n                  y = ty; // Rotate the point about the center of the ellipse.\n\n              tx = (x - aX) * cos - (y - aY) * sin + aX;\n              ty = (x - aX) * sin + (y - aY) * cos + aY;\n            } //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n\n            points.push(new THREE.Vector2(tx, ty));\n          } //console.log(points);\n\n\n          break;\n      } // end switch\n\n    } // Normalize to remove the closing point by default.\n\n\n    var lastPoint = points[points.length - 1];\n    if (Math.abs(lastPoint.x - points[0].x) < Number.EPSILON && Math.abs(lastPoint.y - points[0].y) < Number.EPSILON) points.splice(points.length - 1, 1);\n\n    if (this.autoClose) {\n      points.push(points[0]);\n    }\n\n    return points;\n  },\n  toShapes: function toShapes(isCCW, noHoles) {\n    function extractSubpaths(inActions) {\n      var subPaths = [],\n          lastPath = new THREE.Path();\n\n      for (var i = 0, l = inActions.length; i < l; i++) {\n        var item = inActions[i];\n        var args = item.args;\n        var action = item.action;\n\n        if (action === 'moveTo') {\n          if (lastPath.actions.length !== 0) {\n            subPaths.push(lastPath);\n            lastPath = new THREE.Path();\n          }\n        }\n\n        lastPath[action].apply(lastPath, args);\n      }\n\n      if (lastPath.actions.length !== 0) {\n        subPaths.push(lastPath);\n      } // console.log(subPaths);\n\n\n      return subPaths;\n    }\n\n    function toShapesNoHoles(inSubpaths) {\n      var shapes = [];\n\n      for (var i = 0, l = inSubpaths.length; i < l; i++) {\n        var tmpPath = inSubpaths[i];\n        var tmpShape = new THREE.Shape();\n        tmpShape.actions = tmpPath.actions;\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n      } //console.log(\"shape\", shapes);\n\n\n      return shapes;\n    }\n\n    function isPointInsidePolygon(inPt, inPolygon) {\n      var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n      // toggling of inside/outside at every single! intersection point of an edge\n      //  with the horizontal line through inPt, left of inPt\n      //  not counting lowerY endpoints of edges and whole edges on that line\n\n      var inside = false;\n\n      for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n        var edgeLowPt = inPolygon[p];\n        var edgeHighPt = inPolygon[q];\n        var edgeDx = edgeHighPt.x - edgeLowPt.x;\n        var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n        if (Math.abs(edgeDy) > Number.EPSILON) {\n          // not parallel\n          if (edgeDy < 0) {\n            edgeLowPt = inPolygon[q];\n            edgeDx = -edgeDx;\n            edgeHighPt = inPolygon[p];\n            edgeDy = -edgeDy;\n          }\n\n          if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n          if (inPt.y === edgeLowPt.y) {\n            if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n            // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n          } else {\n            var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n            if (perpEdge === 0) return true; // inPt is on contour ?\n\n            if (perpEdge < 0) continue;\n            inside = !inside; // true intersection left of inPt\n          }\n        } else {\n          // parallel or collinear\n          if (inPt.y !== edgeLowPt.y) continue; // parallel\n          // edge lies on the same horizontal line as inPt\n\n          if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n          // continue;\n        }\n      }\n\n      return inside;\n    }\n\n    var isClockWise = THREE.ShapeUtils.isClockWise;\n    var subPaths = extractSubpaths(this.actions);\n    if (subPaths.length === 0) return [];\n    if (noHoles === true) return toShapesNoHoles(subPaths);\n    var solid,\n        tmpPath,\n        tmpShape,\n        shapes = [];\n\n    if (subPaths.length === 1) {\n      tmpPath = subPaths[0];\n      tmpShape = new THREE.Shape();\n      tmpShape.actions = tmpPath.actions;\n      tmpShape.curves = tmpPath.curves;\n      shapes.push(tmpShape);\n      return shapes;\n    }\n\n    var holesFirst = !isClockWise(subPaths[0].getPoints());\n    holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n    var betterShapeHoles = [];\n    var newShapes = [];\n    var newShapeHoles = [];\n    var mainIdx = 0;\n    var tmpPoints;\n    newShapes[mainIdx] = undefined;\n    newShapeHoles[mainIdx] = [];\n\n    for (var i = 0, l = subPaths.length; i < l; i++) {\n      tmpPath = subPaths[i];\n      tmpPoints = tmpPath.getPoints();\n      solid = isClockWise(tmpPoints);\n      solid = isCCW ? !solid : solid;\n\n      if (solid) {\n        if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n        newShapes[mainIdx] = {\n          s: new THREE.Shape(),\n          p: tmpPoints\n        };\n        newShapes[mainIdx].s.actions = tmpPath.actions;\n        newShapes[mainIdx].s.curves = tmpPath.curves;\n        if (holesFirst) mainIdx++;\n        newShapeHoles[mainIdx] = []; //console.log('cw', i);\n      } else {\n        newShapeHoles[mainIdx].push({\n          h: tmpPath,\n          p: tmpPoints[0]\n        }); //console.log('ccw', i);\n      }\n    } // only Holes? -> probably all Shapes with wrong orientation\n\n\n    if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n    if (newShapes.length > 1) {\n      var ambiguous = false;\n      var toChange = [];\n\n      for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        betterShapeHoles[sIdx] = [];\n      }\n\n      for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        var sho = newShapeHoles[sIdx];\n\n        for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n          var ho = sho[hIdx];\n          var hole_unassigned = true;\n\n          for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n            if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n              if (sIdx !== s2Idx) toChange.push({\n                froms: sIdx,\n                tos: s2Idx,\n                hole: hIdx\n              });\n\n              if (hole_unassigned) {\n                hole_unassigned = false;\n                betterShapeHoles[s2Idx].push(ho);\n              } else {\n                ambiguous = true;\n              }\n            }\n          }\n\n          if (hole_unassigned) {\n            betterShapeHoles[sIdx].push(ho);\n          }\n        }\n      } // console.log(\"ambiguous: \", ambiguous);\n\n\n      if (toChange.length > 0) {\n        // console.log(\"to change: \", toChange);\n        if (!ambiguous) newShapeHoles = betterShapeHoles;\n      }\n    }\n\n    var tmpHoles;\n\n    for (var i = 0, il = newShapes.length; i < il; i++) {\n      tmpShape = newShapes[i].s;\n      shapes.push(tmpShape);\n      tmpHoles = newShapeHoles[i];\n\n      for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n        tmpShape.holes.push(tmpHoles[j].h);\n      }\n    } //console.log(\"shape\", shapes);\n\n\n    return shapes;\n  }\n}); // File:src/extras/core/Shape.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nTHREE.Shape = function () {\n  THREE.Path.apply(this, arguments);\n  this.holes = [];\n};\n\nTHREE.Shape.prototype = Object.assign(Object.create(THREE.Path.prototype), {\n  constructor: THREE.Shape,\n  // Convenience method to return ExtrudeGeometry\n  extrude: function extrude(options) {\n    return new THREE.ExtrudeGeometry(this, options);\n  },\n  // Convenience method to return ShapeGeometry\n  makeGeometry: function makeGeometry(options) {\n    return new THREE.ShapeGeometry(this, options);\n  },\n  getPointsHoles: function getPointsHoles(divisions) {\n    var holesPts = [];\n\n    for (var i = 0, l = this.holes.length; i < l; i++) {\n      holesPts[i] = this.holes[i].getPoints(divisions);\n    }\n\n    return holesPts;\n  },\n  // Get points of shape and holes (keypoints based on segments parameter)\n  extractAllPoints: function extractAllPoints(divisions) {\n    return {\n      shape: this.getPoints(divisions),\n      holes: this.getPointsHoles(divisions)\n    };\n  },\n  extractPoints: function extractPoints(divisions) {\n    return this.extractAllPoints(divisions);\n  }\n}); // File:src/extras/curves/LineCurve.js\n\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\n\nTHREE.LineCurve = function (v1, v2) {\n  this.v1 = v1;\n  this.v2 = v2;\n};\n\nTHREE.LineCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\n\nTHREE.LineCurve.prototype.getPoint = function (t) {\n  var point = this.v2.clone().sub(this.v1);\n  point.multiplyScalar(t).add(this.v1);\n  return point;\n}; // Line curve is linear, so we can overwrite default getPointAt\n\n\nTHREE.LineCurve.prototype.getPointAt = function (u) {\n  return this.getPoint(u);\n};\n\nTHREE.LineCurve.prototype.getTangent = function (t) {\n  var tangent = this.v2.clone().sub(this.v1);\n  return tangent.normalize();\n}; // File:src/extras/curves/QuadraticBezierCurve.js\n\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\n\n\nTHREE.QuadraticBezierCurve = function (v0, v1, v2) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n};\n\nTHREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\n\nTHREE.QuadraticBezierCurve.prototype.getPoint = function (t) {\n  var b2 = THREE.ShapeUtils.b2;\n  return new THREE.Vector2(b2(t, this.v0.x, this.v1.x, this.v2.x), b2(t, this.v0.y, this.v1.y, this.v2.y));\n};\n\nTHREE.QuadraticBezierCurve.prototype.getTangent = function (t) {\n  var tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\n  return new THREE.Vector2(tangentQuadraticBezier(t, this.v0.x, this.v1.x, this.v2.x), tangentQuadraticBezier(t, this.v0.y, this.v1.y, this.v2.y)).normalize();\n}; // File:src/extras/curves/CubicBezierCurve.js\n\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\n\n\nTHREE.CubicBezierCurve = function (v0, v1, v2, v3) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n};\n\nTHREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\n\nTHREE.CubicBezierCurve.prototype.getPoint = function (t) {\n  var b3 = THREE.ShapeUtils.b3;\n  return new THREE.Vector2(b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y));\n};\n\nTHREE.CubicBezierCurve.prototype.getTangent = function (t) {\n  var tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\n  return new THREE.Vector2(tangentCubicBezier(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), tangentCubicBezier(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y)).normalize();\n}; // File:src/extras/curves/SplineCurve.js\n\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\n\n\nTHREE.SplineCurve = function (points\n/* array of Vector2 */\n) {\n  this.points = points == undefined ? [] : points;\n};\n\nTHREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\n\nTHREE.SplineCurve.prototype.getPoint = function (t) {\n  var points = this.points;\n  var point = (points.length - 1) * t;\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  var point0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n  var point1 = points[intPoint];\n  var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n  var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n  var interpolate = THREE.CurveUtils.interpolate;\n  return new THREE.Vector2(interpolate(point0.x, point1.x, point2.x, point3.x, weight), interpolate(point0.y, point1.y, point2.y, point3.y, weight));\n}; // File:src/extras/curves/EllipseCurve.js\n\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\n\n\nTHREE.EllipseCurve = function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n  this.aX = aX;\n  this.aY = aY;\n  this.xRadius = xRadius;\n  this.yRadius = yRadius;\n  this.aStartAngle = aStartAngle;\n  this.aEndAngle = aEndAngle;\n  this.aClockwise = aClockwise;\n  this.aRotation = aRotation || 0;\n};\n\nTHREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\n\nTHREE.EllipseCurve.prototype.getPoint = function (t) {\n  var deltaAngle = this.aEndAngle - this.aStartAngle;\n  if (deltaAngle < 0) deltaAngle += Math.PI * 2;\n  if (deltaAngle > Math.PI * 2) deltaAngle -= Math.PI * 2;\n  var angle;\n\n  if (this.aClockwise === true) {\n    angle = this.aEndAngle + (1 - t) * (Math.PI * 2 - deltaAngle);\n  } else {\n    angle = this.aStartAngle + t * deltaAngle;\n  }\n\n  var x = this.aX + this.xRadius * Math.cos(angle);\n  var y = this.aY + this.yRadius * Math.sin(angle);\n\n  if (this.aRotation !== 0) {\n    var cos = Math.cos(this.aRotation);\n    var sin = Math.sin(this.aRotation);\n    var tx = x,\n        ty = y; // Rotate the point about the center of the ellipse.\n\n    x = (tx - this.aX) * cos - (ty - this.aY) * sin + this.aX;\n    y = (tx - this.aX) * sin + (ty - this.aY) * cos + this.aY;\n  }\n\n  return new THREE.Vector2(x, y);\n}; // File:src/extras/curves/ArcCurve.js\n\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\n\n\nTHREE.ArcCurve = function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n  THREE.EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n};\n\nTHREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype);\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve; // File:src/extras/curves/LineCurve3.js\n\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\n\nTHREE.LineCurve3 = THREE.Curve.create(function (v1, v2) {\n  this.v1 = v1;\n  this.v2 = v2;\n}, function (t) {\n  var vector = new THREE.Vector3();\n  vector.subVectors(this.v2, this.v1); // diff\n\n  vector.multiplyScalar(t);\n  vector.add(this.v1);\n  return vector;\n}); // File:src/extras/curves/QuadraticBezierCurve3.js\n\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\n\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(function (v0, v1, v2) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n}, function (t) {\n  var b2 = THREE.ShapeUtils.b2;\n  return new THREE.Vector3(b2(t, this.v0.x, this.v1.x, this.v2.x), b2(t, this.v0.y, this.v1.y, this.v2.y), b2(t, this.v0.z, this.v1.z, this.v2.z));\n}); // File:src/extras/curves/CubicBezierCurve3.js\n\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\n\nTHREE.CubicBezierCurve3 = THREE.Curve.create(function (v0, v1, v2, v3) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n}, function (t) {\n  var b3 = THREE.ShapeUtils.b3;\n  return new THREE.Vector3(b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y), b3(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z));\n}); // File:src/extras/curves/SplineCurve3.js\n\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\n\nTHREE.SplineCurve3 = THREE.Curve.create(function (points\n/* array of Vector3 */\n) {\n  console.warn('THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3');\n  this.points = points == undefined ? [] : points;\n}, function (t) {\n  var points = this.points;\n  var point = (points.length - 1) * t;\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  var point0 = points[intPoint == 0 ? intPoint : intPoint - 1];\n  var point1 = points[intPoint];\n  var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n  var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n  var interpolate = THREE.CurveUtils.interpolate;\n  return new THREE.Vector3(interpolate(point0.x, point1.x, point2.x, point3.x, weight), interpolate(point0.y, point1.y, point2.y, point3.y, weight), interpolate(point0.z, point1.z, point2.z, point3.z, weight));\n}); // File:src/extras/curves/CatmullRomCurve3.js\n\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\n\nTHREE.CatmullRomCurve3 = function () {\n  var tmp = new THREE.Vector3(),\n      px = new CubicPoly(),\n      py = new CubicPoly(),\n      pz = new CubicPoly();\n  /*\r\n  Based on an optimized c++ solution in\r\n   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n   - http://ideone.com/NoEbVM\r\n  \n  This CubicPoly class could be used for reusing some variables and calculations,\r\n  but for three.js curve use, it could be possible inlined and flatten into a single function call\r\n  which can be placed in CurveUtils.\r\n  */\n\n  function CubicPoly() {}\n  /*\r\n   * Compute coefficients for a cubic polynomial\r\n   *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n   * such that\r\n   *   p(0) = x0, p(1) = x1\r\n   *  and\r\n   *   p'(0) = t0, p'(1) = t1.\r\n   */\n\n\n  CubicPoly.prototype.init = function (x0, x1, t0, t1) {\n    this.c0 = x0;\n    this.c1 = t0;\n    this.c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n    this.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n  };\n\n  CubicPoly.prototype.initNonuniformCatmullRom = function (x0, x1, x2, x3, dt0, dt1, dt2) {\n    // compute tangents when parameterized in [t1,t2]\n    var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n    var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n    t1 *= dt1;\n    t2 *= dt1; // initCubicPoly\n\n    this.init(x1, x2, t1, t2);\n  }; // standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n\n\n  CubicPoly.prototype.initCatmullRom = function (x0, x1, x2, x3, tension) {\n    this.init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n  };\n\n  CubicPoly.prototype.calc = function (t) {\n    var t2 = t * t;\n    var t3 = t2 * t;\n    return this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n  }; // Subclass Three.js curve\n\n\n  return THREE.Curve.create(function (p\n  /* array of Vector3 */\n  ) {\n    this.points = p || [];\n    this.closed = false;\n  }, function (t) {\n    var points = this.points,\n        point,\n        intPoint,\n        weight,\n        l;\n    l = points.length;\n    if (l < 2) console.log('duh, you need at least 2 points');\n    point = (l - (this.closed ? 0 : 1)) * t;\n    intPoint = Math.floor(point);\n    weight = point - intPoint;\n\n    if (this.closed) {\n      intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / points.length) + 1) * points.length;\n    } else if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n\n    var p0, p1, p2, p3; // 4 points\n\n    if (this.closed || intPoint > 0) {\n      p0 = points[(intPoint - 1) % l];\n    } else {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    }\n\n    p1 = points[intPoint % l];\n    p2 = points[(intPoint + 1) % l];\n\n    if (this.closed || intPoint + 2 < l) {\n      p3 = points[(intPoint + 2) % l];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n      p3 = tmp;\n    }\n\n    if (this.type === undefined || this.type === 'centripetal' || this.type === 'chordal') {\n      // init Centripetal / Chordal Catmull-Rom\n      var pow = this.type === 'chordal' ? 0.5 : 0.25;\n      var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n      var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n      var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n      if (dt1 < 1e-4) dt1 = 1.0;\n      if (dt0 < 1e-4) dt0 = dt1;\n      if (dt2 < 1e-4) dt2 = dt1;\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.type === 'catmullrom') {\n      var tension = this.tension !== undefined ? this.tension : 0.5;\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, tension);\n    }\n\n    var v = new THREE.Vector3(px.calc(weight), py.calc(weight), pz.calc(weight));\n    return v;\n  });\n}(); // File:src/extras/curves/ClosedSplineCurve3.js\n\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\n\n\nTHREE.ClosedSplineCurve3 = function (points) {\n  console.warn('THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.');\n  THREE.CatmullRomCurve3.call(this, points);\n  this.type = 'catmullrom';\n  this.closed = true;\n};\n\nTHREE.ClosedSplineCurve3.prototype = Object.create(THREE.CatmullRomCurve3.prototype); // File:src/extras/geometries/BoxGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\n\nTHREE.BoxGeometry = function (width, height, depth, widthSegments, heightSegments, depthSegments) {\n  THREE.Geometry.call(this);\n  this.type = 'BoxGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n  this.fromBufferGeometry(new THREE.BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments));\n  this.mergeVertices();\n};\n\nTHREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\nTHREE.CubeGeometry = THREE.BoxGeometry; // File:src/extras/geometries/BoxBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\n\nTHREE.BoxBufferGeometry = function (width, height, depth, widthSegments, heightSegments, depthSegments) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'BoxBufferGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n  var scope = this; // segments\n\n  widthSegments = Math.floor(widthSegments) || 1;\n  heightSegments = Math.floor(heightSegments) || 1;\n  depthSegments = Math.floor(depthSegments) || 1; // these are used to calculate buffer length\n\n  var vertexCount = calculateVertexCount(widthSegments, heightSegments, depthSegments);\n  var indexCount = calculateIndexCount(widthSegments, heightSegments, depthSegments); // buffers\n\n  var indices = new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount);\n  var vertices = new Float32Array(vertexCount * 3);\n  var normals = new Float32Array(vertexCount * 3);\n  var uvs = new Float32Array(vertexCount * 2); // offset variables\n\n  var vertexBufferOffset = 0;\n  var uvBufferOffset = 0;\n  var indexBufferOffset = 0;\n  var numberOfVertices = 0; // group variables\n\n  var groupStart = 0; // build each side of the box geometry\n\n  buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n  buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n  buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n  buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n  buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n  buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n  // build geometry\n\n  this.setIndex(new THREE.BufferAttribute(indices, 1));\n  this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2)); // helper functions\n\n  function calculateVertexCount(w, h, d) {\n    var vertices = 0; // calculate the amount of vertices for each side (plane)\n\n    vertices += (w + 1) * (h + 1) * 2; // xy\n\n    vertices += (w + 1) * (d + 1) * 2; // xz\n\n    vertices += (d + 1) * (h + 1) * 2; // zy\n\n    return vertices;\n  }\n\n  function calculateIndexCount(w, h, d) {\n    var index = 0; // calculate the amount of squares for each side\n\n    index += w * h * 2; // xy\n\n    index += w * d * 2; // xz\n\n    index += d * h * 2; // zy\n\n    return index * 6; // two triangles per square => six vertices per square\n  }\n\n  function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n    var segmentWidth = width / gridX;\n    var segmentHeight = height / gridY;\n    var widthHalf = width / 2;\n    var heightHalf = height / 2;\n    var depthHalf = depth / 2;\n    var gridX1 = gridX + 1;\n    var gridY1 = gridY + 1;\n    var vertexCounter = 0;\n    var groupCount = 0;\n    var vector = new THREE.Vector3(); // generate vertices, normals and uvs\n\n    for (var iy = 0; iy < gridY1; iy++) {\n      var y = iy * segmentHeight - heightHalf;\n\n      for (var ix = 0; ix < gridX1; ix++) {\n        var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n        vector[u] = x * udir;\n        vector[v] = y * vdir;\n        vector[w] = depthHalf; // now apply vector to vertex buffer\n\n        vertices[vertexBufferOffset] = vector.x;\n        vertices[vertexBufferOffset + 1] = vector.y;\n        vertices[vertexBufferOffset + 2] = vector.z; // set values to correct vector component\n\n        vector[u] = 0;\n        vector[v] = 0;\n        vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n        normals[vertexBufferOffset] = vector.x;\n        normals[vertexBufferOffset + 1] = vector.y;\n        normals[vertexBufferOffset + 2] = vector.z; // uvs\n\n        uvs[uvBufferOffset] = ix / gridX;\n        uvs[uvBufferOffset + 1] = 1 - iy / gridY; // update offsets and counters\n\n        vertexBufferOffset += 3;\n        uvBufferOffset += 2;\n        vertexCounter += 1;\n      }\n    } // 1. you need three indices to draw a single face\n    // 2. a single segment consists of two faces\n    // 3. so we need to generate six (2*3) indices per segment\n\n\n    for (iy = 0; iy < gridY; iy++) {\n      for (ix = 0; ix < gridX; ix++) {\n        // indices\n        var a = numberOfVertices + ix + gridX1 * iy;\n        var b = numberOfVertices + ix + gridX1 * (iy + 1);\n        var c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n        var d = numberOfVertices + (ix + 1) + gridX1 * iy; // face one\n\n        indices[indexBufferOffset] = a;\n        indices[indexBufferOffset + 1] = b;\n        indices[indexBufferOffset + 2] = d; // face two\n\n        indices[indexBufferOffset + 3] = b;\n        indices[indexBufferOffset + 4] = c;\n        indices[indexBufferOffset + 5] = d; // update offsets and counters\n\n        indexBufferOffset += 6;\n        groupCount += 6;\n      }\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n    groupStart += groupCount; // update total number of vertices\n\n    numberOfVertices += vertexCounter;\n  }\n};\n\nTHREE.BoxBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry; // File:src/extras/geometries/CircleGeometry.js\n\n/**\r\n * @author hughes\r\n */\n\nTHREE.CircleGeometry = function (radius, segments, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'CircleGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.CircleBufferGeometry(radius, segments, thetaStart, thetaLength));\n};\n\nTHREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry; // File:src/extras/geometries/CircleBufferGeometry.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\nTHREE.CircleBufferGeometry = function (radius, segments, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'CircleBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  segments = segments !== undefined ? Math.max(3, segments) : 8;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  var vertices = segments + 2;\n  var positions = new Float32Array(vertices * 3);\n  var normals = new Float32Array(vertices * 3);\n  var uvs = new Float32Array(vertices * 2); // center data is already zero, but need to set a few extras\n\n  normals[2] = 1.0;\n  uvs[0] = 0.5;\n  uvs[1] = 0.5;\n\n  for (var s = 0, i = 3, ii = 2; s <= segments; s++, i += 3, ii += 2) {\n    var segment = thetaStart + s / segments * thetaLength;\n    positions[i] = radius * Math.cos(segment);\n    positions[i + 1] = radius * Math.sin(segment);\n    normals[i + 2] = 1; // normal z\n\n    uvs[ii] = (positions[i] / radius + 1) / 2;\n    uvs[ii + 1] = (positions[i + 1] / radius + 1) / 2;\n  }\n\n  var indices = [];\n\n  for (var i = 1; i <= segments; i++) {\n    indices.push(i, i + 1, 0);\n  }\n\n  this.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n  this.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.CircleBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry; // File:src/extras/geometries/CylinderBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\n\nTHREE.CylinderBufferGeometry = function (radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'CylinderBufferGeometry';\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  var scope = this;\n  radiusTop = radiusTop !== undefined ? radiusTop : 20;\n  radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n  height = height !== undefined ? height : 100;\n  radialSegments = Math.floor(radialSegments) || 8;\n  heightSegments = Math.floor(heightSegments) || 1;\n  openEnded = openEnded !== undefined ? openEnded : false;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n  thetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI; // used to calculate buffer length\n\n  var nbCap = 0;\n\n  if (openEnded === false) {\n    if (radiusTop > 0) nbCap++;\n    if (radiusBottom > 0) nbCap++;\n  }\n\n  var vertexCount = calculateVertexCount();\n  var indexCount = calculateIndexCount(); // buffers\n\n  var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n  var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // helper variables\n\n  var index = 0,\n      indexOffset = 0,\n      indexArray = [],\n      halfHeight = height / 2; // group variables\n\n  var groupStart = 0; // generate geometry\n\n  generateTorso();\n\n  if (openEnded === false) {\n    if (radiusTop > 0) generateCap(true);\n    if (radiusBottom > 0) generateCap(false);\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', vertices);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs); // helper functions\n\n  function calculateVertexCount() {\n    var count = (radialSegments + 1) * (heightSegments + 1);\n\n    if (openEnded === false) {\n      count += (radialSegments + 1) * nbCap + radialSegments * nbCap;\n    }\n\n    return count;\n  }\n\n  function calculateIndexCount() {\n    var count = radialSegments * heightSegments * 2 * 3;\n\n    if (openEnded === false) {\n      count += radialSegments * nbCap * 3;\n    }\n\n    return count;\n  }\n\n  function generateTorso() {\n    var x, y;\n    var normal = new THREE.Vector3();\n    var vertex = new THREE.Vector3();\n    var groupCount = 0; // this will be used to calculate the normal\n\n    var tanTheta = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n    for (y = 0; y <= heightSegments; y++) {\n      var indexRow = [];\n      var v = y / heightSegments; // calculate the radius of the current row\n\n      var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n      for (x = 0; x <= radialSegments; x++) {\n        var u = x / radialSegments; // vertex\n\n        vertex.x = radius * Math.sin(u * thetaLength + thetaStart);\n        vertex.y = -v * height + halfHeight;\n        vertex.z = radius * Math.cos(u * thetaLength + thetaStart);\n        vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal\n\n        normal.copy(vertex); // handle special case if radiusTop/radiusBottom is zero\n\n        if (radiusTop === 0 && y === 0 || radiusBottom === 0 && y === heightSegments) {\n          normal.x = Math.sin(u * thetaLength + thetaStart);\n          normal.z = Math.cos(u * thetaLength + thetaStart);\n        }\n\n        normal.setY(Math.sqrt(normal.x * normal.x + normal.z * normal.z) * tanTheta).normalize();\n        normals.setXYZ(index, normal.x, normal.y, normal.z); // uv\n\n        uvs.setXY(index, u, 1 - v); // save index of vertex in respective row\n\n        indexRow.push(index); // increase index\n\n        index++;\n      } // now save vertices of the row in our index array\n\n\n      indexArray.push(indexRow);\n    } // generate indices\n\n\n    for (x = 0; x < radialSegments; x++) {\n      for (y = 0; y < heightSegments; y++) {\n        // we use the index array to access the correct indices\n        var i1 = indexArray[y][x];\n        var i2 = indexArray[y + 1][x];\n        var i3 = indexArray[y + 1][x + 1];\n        var i4 = indexArray[y][x + 1]; // face one\n\n        indices.setX(indexOffset, i1);\n        indexOffset++;\n        indices.setX(indexOffset, i2);\n        indexOffset++;\n        indices.setX(indexOffset, i4);\n        indexOffset++; // face two\n\n        indices.setX(indexOffset, i2);\n        indexOffset++;\n        indices.setX(indexOffset, i3);\n        indexOffset++;\n        indices.setX(indexOffset, i4);\n        indexOffset++; // update counters\n\n        groupCount += 6;\n      }\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n    groupStart += groupCount;\n  }\n\n  function generateCap(top) {\n    var x, centerIndexStart, centerIndexEnd;\n    var uv = new THREE.Vector2();\n    var vertex = new THREE.Vector3();\n    var groupCount = 0;\n    var radius = top === true ? radiusTop : radiusBottom;\n    var sign = top === true ? 1 : -1; // save the index of the first center vertex\n\n    centerIndexStart = index; // first we generate the center vertex data of the cap.\n    // because the geometry needs one set of uvs per face,\n    // we must generate a center vertex per face/segment\n\n    for (x = 1; x <= radialSegments; x++) {\n      // vertex\n      vertices.setXYZ(index, 0, halfHeight * sign, 0); // normal\n\n      normals.setXYZ(index, 0, sign, 0); // uv\n\n      uv.x = 0.5;\n      uv.y = 0.5;\n      uvs.setXY(index, uv.x, uv.y); // increase index\n\n      index++;\n    } // save the index of the last center vertex\n\n\n    centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n    for (x = 0; x <= radialSegments; x++) {\n      var u = x / radialSegments;\n      var theta = u * thetaLength + thetaStart;\n      var cosTheta = Math.cos(theta);\n      var sinTheta = Math.sin(theta); // vertex\n\n      vertex.x = radius * sinTheta;\n      vertex.y = halfHeight * sign;\n      vertex.z = radius * cosTheta;\n      vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal\n\n      normals.setXYZ(index, 0, sign, 0); // uv\n\n      uv.x = cosTheta * 0.5 + 0.5;\n      uv.y = sinTheta * 0.5 * sign + 0.5;\n      uvs.setXY(index, uv.x, uv.y); // increase index\n\n      index++;\n    } // generate indices\n\n\n    for (x = 0; x < radialSegments; x++) {\n      var c = centerIndexStart + x;\n      var i = centerIndexEnd + x;\n\n      if (top === true) {\n        // face top\n        indices.setX(indexOffset, i);\n        indexOffset++;\n        indices.setX(indexOffset, i + 1);\n        indexOffset++;\n        indices.setX(indexOffset, c);\n        indexOffset++;\n      } else {\n        // face bottom\n        indices.setX(indexOffset, i + 1);\n        indexOffset++;\n        indices.setX(indexOffset, i);\n        indexOffset++;\n        indices.setX(indexOffset, c);\n        indexOffset++;\n      } // update counters\n\n\n      groupCount += 3;\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n    groupStart += groupCount;\n  }\n};\n\nTHREE.CylinderBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry; // File:src/extras/geometries/CylinderGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.CylinderGeometry = function (radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'CylinderGeometry';\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength));\n  this.mergeVertices();\n};\n\nTHREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry; // File:src/extras/geometries/ConeBufferGeometry.js\n\n/*\r\n * @author: abelnation / http://github.com/abelnation\r\n */\n\nTHREE.ConeBufferGeometry = function (radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  THREE.CylinderBufferGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n  this.type = 'ConeBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n};\n\nTHREE.ConeBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry; // File:src/extras/geometries/ConeGeometry.js\n\n/**\r\n * @author abelnation / http://github.com/abelnation\r\n */\n\nTHREE.ConeGeometry = function (radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  THREE.CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n  this.type = 'ConeGeometry';\n  this.parameters = {\n    radius: radius,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n};\n\nTHREE.ConeGeometry.prototype = Object.create(THREE.CylinderGeometry.prototype);\nTHREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry; // File:src/extras/geometries/EdgesGeometry.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.EdgesGeometry = function (geometry, thresholdAngle) {\n  THREE.BufferGeometry.call(this);\n  thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\n  var thresholdDot = Math.cos(THREE.Math.DEG2RAD * thresholdAngle);\n  var edge = [0, 0],\n      hash = {};\n\n  function sortFunction(a, b) {\n    return a - b;\n  }\n\n  var keys = ['a', 'b', 'c'];\n  var geometry2;\n\n  if (geometry instanceof THREE.BufferGeometry) {\n    geometry2 = new THREE.Geometry();\n    geometry2.fromBufferGeometry(geometry);\n  } else {\n    geometry2 = geometry.clone();\n  }\n\n  geometry2.mergeVertices();\n  geometry2.computeFaceNormals();\n  var vertices = geometry2.vertices;\n  var faces = geometry2.faces;\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    var face = faces[i];\n\n    for (var j = 0; j < 3; j++) {\n      edge[0] = face[keys[j]];\n      edge[1] = face[keys[(j + 1) % 3]];\n      edge.sort(sortFunction);\n      var key = edge.toString();\n\n      if (hash[key] === undefined) {\n        hash[key] = {\n          vert1: edge[0],\n          vert2: edge[1],\n          face1: i,\n          face2: undefined\n        };\n      } else {\n        hash[key].face2 = i;\n      }\n    }\n  }\n\n  var coords = [];\n\n  for (var key in hash) {\n    var h = hash[key];\n\n    if (h.face2 === undefined || faces[h.face1].normal.dot(faces[h.face2].normal) <= thresholdDot) {\n      var vertex = vertices[h.vert1];\n      coords.push(vertex.x);\n      coords.push(vertex.y);\n      coords.push(vertex.z);\n      vertex = vertices[h.vert2];\n      coords.push(vertex.x);\n      coords.push(vertex.y);\n      coords.push(vertex.z);\n    }\n  }\n\n  this.addAttribute('position', new THREE.BufferAttribute(new Float32Array(coords), 3));\n};\n\nTHREE.EdgesGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry; // File:src/extras/geometries/ExtrudeGeometry.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\n\nTHREE.ExtrudeGeometry = function (shapes, options) {\n  if (typeof shapes === \"undefined\") {\n    shapes = [];\n    return;\n  }\n\n  THREE.Geometry.call(this);\n  this.type = 'ExtrudeGeometry';\n  shapes = Array.isArray(shapes) ? shapes : [shapes];\n  this.addShapeList(shapes, options);\n  this.computeFaceNormals(); // can't really use automatic vertex normals\n  // as then front and back sides get smoothed too\n  // should do separate smoothing just for sides\n  //this.computeVertexNormals();\n  //console.log( \"took\", ( Date.now() - startTime ) );\n};\n\nTHREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\n\nTHREE.ExtrudeGeometry.prototype.addShapeList = function (shapes, options) {\n  var sl = shapes.length;\n\n  for (var s = 0; s < sl; s++) {\n    var shape = shapes[s];\n    this.addShape(shape, options);\n  }\n};\n\nTHREE.ExtrudeGeometry.prototype.addShape = function (shape, options) {\n  var amount = options.amount !== undefined ? options.amount : 100;\n  var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\n  var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\n  var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n  var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n  var steps = options.steps !== undefined ? options.steps : 1;\n  var extrudePath = options.extrudePath;\n  var extrudePts,\n      extrudeByPath = false; // Use default WorldUVGenerator if no UV generators are specified.\n\n  var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\n  var splineTube, binormal, normal, position2;\n\n  if (extrudePath) {\n    extrudePts = extrudePath.getSpacedPoints(steps);\n    extrudeByPath = true;\n    bevelEnabled = false; // bevels not supported for path extrusion\n    // SETUP TNB variables\n    // Reuse TNB from TubeGeomtry for now.\n    // TODO1 - have a .isClosed in spline?\n\n    splineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n    binormal = new THREE.Vector3();\n    normal = new THREE.Vector3();\n    position2 = new THREE.Vector3();\n  } // Safeguards if bevels are not enabled\n\n\n  if (!bevelEnabled) {\n    bevelSegments = 0;\n    bevelThickness = 0;\n    bevelSize = 0;\n  } // Variables initialization\n\n\n  var ahole, h, hl; // looping of holes\n\n  var scope = this;\n  var shapesOffset = this.vertices.length;\n  var shapePoints = shape.extractPoints(curveSegments);\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n  var reverse = !THREE.ShapeUtils.isClockWise(vertices);\n\n  if (reverse) {\n    vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n\n      if (THREE.ShapeUtils.isClockWise(ahole)) {\n        holes[h] = ahole.reverse();\n      }\n    }\n\n    reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n  }\n\n  var faces = THREE.ShapeUtils.triangulateShape(vertices, holes);\n  /* Vertices */\n\n  var contour = vertices; // vertices has all points but contour has only points of circumference\n\n  for (h = 0, hl = holes.length; h < hl; h++) {\n    ahole = holes[h];\n    vertices = vertices.concat(ahole);\n  }\n\n  function scalePt2(pt, vec, size) {\n    if (!vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n    return vec.clone().multiplyScalar(size).add(pt);\n  }\n\n  var b,\n      bs,\n      t,\n      z,\n      vert,\n      vlen = vertices.length,\n      face,\n      flen = faces.length; // Find directions for point movement\n\n  function getBevelVec(inPt, inPrev, inNext) {\n    // computes for inPt the corresponding point inPt' on a new contour\n    //   shifted by 1 unit (length of normalized vector) to the left\n    // if we walk along contour clockwise, this new contour is outside the old one\n    //\n    // inPt' is the intersection of the two lines parallel to the two\n    //  adjacent edges of inPt at a distance of 1 unit on the left side.\n    var v_trans_x,\n        v_trans_y,\n        shrink_by = 1; // resulting translation vector for inPt\n    // good reading for geometry algorithms (here: line-line intersection)\n    // http://geomalgorithms.com/a05-_intersect-1.html\n\n    var v_prev_x = inPt.x - inPrev.x,\n        v_prev_y = inPt.y - inPrev.y;\n    var v_next_x = inNext.x - inPt.x,\n        v_next_y = inNext.y - inPt.y;\n    var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n    var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n    if (Math.abs(collinear0) > Number.EPSILON) {\n      // not collinear\n      // length of vectors for normalizing\n      var v_prev_len = Math.sqrt(v_prev_lensq);\n      var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n      var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n      var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n      var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n      var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n      var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n      v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n      v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n      //  but prevent crazy spikes\n\n      var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n      if (v_trans_lensq <= 2) {\n        return new THREE.Vector2(v_trans_x, v_trans_y);\n      } else {\n        shrink_by = Math.sqrt(v_trans_lensq / 2);\n      }\n    } else {\n      // handle special case of collinear edges\n      var direction_eq = false; // assumes: opposite\n\n      if (v_prev_x > Number.EPSILON) {\n        if (v_next_x > Number.EPSILON) {\n          direction_eq = true;\n        }\n      } else {\n        if (v_prev_x < -Number.EPSILON) {\n          if (v_next_x < -Number.EPSILON) {\n            direction_eq = true;\n          }\n        } else {\n          if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n            direction_eq = true;\n          }\n        }\n      }\n\n      if (direction_eq) {\n        // console.log(\"Warning: lines are a straight sequence\");\n        v_trans_x = -v_prev_y;\n        v_trans_y = v_prev_x;\n        shrink_by = Math.sqrt(v_prev_lensq);\n      } else {\n        // console.log(\"Warning: lines are a straight spike\");\n        v_trans_x = v_prev_x;\n        v_trans_y = v_prev_y;\n        shrink_by = Math.sqrt(v_prev_lensq / 2);\n      }\n    }\n\n    return new THREE.Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n  }\n\n  var contourMovements = [];\n\n  for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n    if (j === il) j = 0;\n    if (k === il) k = 0; //  (j)---(i)---(k)\n    // console.log('i,j,k', i, j , k)\n\n    contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n  }\n\n  var holesMovements = [],\n      oneHoleMovements,\n      verticesMovements = contourMovements.concat();\n\n  for (h = 0, hl = holes.length; h < hl; h++) {\n    ahole = holes[h];\n    oneHoleMovements = [];\n\n    for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n      if (j === il) j = 0;\n      if (k === il) k = 0; //  (j)---(i)---(k)\n\n      oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n    }\n\n    holesMovements.push(oneHoleMovements);\n    verticesMovements = verticesMovements.concat(oneHoleMovements);\n  } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n  for (b = 0; b < bevelSegments; b++) {\n    //for ( b = bevelSegments; b > 0; b -- ) {\n    t = b / bevelSegments;\n    z = bevelThickness * (1 - t); //z = bevelThickness * t;\n\n    bs = bevelSize * Math.sin(t * Math.PI / 2); // curved\n    //bs = bevelSize * t; // linear\n    // contract shape\n\n    for (i = 0, il = contour.length; i < il; i++) {\n      vert = scalePt2(contour[i], contourMovements[i], bs);\n      v(vert.x, vert.y, -z);\n    } // expand holes\n\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = holesMovements[h];\n\n      for (i = 0, il = ahole.length; i < il; i++) {\n        vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n        v(vert.x, vert.y, -z);\n      }\n    }\n  }\n\n  bs = bevelSize; // Back facing vertices\n\n  for (i = 0; i < vlen; i++) {\n    vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n    if (!extrudeByPath) {\n      v(vert.x, vert.y, 0);\n    } else {\n      // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n      normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n      binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n      position2.copy(extrudePts[0]).add(normal).add(binormal);\n      v(position2.x, position2.y, position2.z);\n    }\n  } // Add stepped vertices...\n  // Including front facing vertices\n\n\n  var s;\n\n  for (s = 1; s <= steps; s++) {\n    for (i = 0; i < vlen; i++) {\n      vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n      if (!extrudeByPath) {\n        v(vert.x, vert.y, amount / steps * s);\n      } else {\n        // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n        normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n        binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n        position2.copy(extrudePts[s]).add(normal).add(binormal);\n        v(position2.x, position2.y, position2.z);\n      }\n    }\n  } // Add bevel segments planes\n  //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n  for (b = bevelSegments - 1; b >= 0; b--) {\n    t = b / bevelSegments;\n    z = bevelThickness * (1 - t); //bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\n\n    bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n    for (i = 0, il = contour.length; i < il; i++) {\n      vert = scalePt2(contour[i], contourMovements[i], bs);\n      v(vert.x, vert.y, amount + z);\n    } // expand holes\n\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = holesMovements[h];\n\n      for (i = 0, il = ahole.length; i < il; i++) {\n        vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, amount + z);\n        } else {\n          v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n        }\n      }\n    }\n  }\n  /* Faces */\n  // Top and bottom faces\n\n\n  buildLidFaces(); // Sides faces\n\n  buildSideFaces(); /////  Internal functions\n\n  function buildLidFaces() {\n    if (bevelEnabled) {\n      var layer = 0; // steps + 1\n\n      var offset = vlen * layer; // Bottom faces\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[2] + offset, face[1] + offset, face[0] + offset);\n      }\n\n      layer = steps + bevelSegments * 2;\n      offset = vlen * layer; // Top faces\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[0] + offset, face[1] + offset, face[2] + offset);\n      }\n    } else {\n      // Bottom faces\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[2], face[1], face[0]);\n      } // Top faces\n\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n      }\n    }\n  } // Create faces for the z-sides of the shape\n\n\n  function buildSideFaces() {\n    var layeroffset = 0;\n    sidewalls(contour, layeroffset);\n    layeroffset += contour.length;\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      sidewalls(ahole, layeroffset); //, true\n\n      layeroffset += ahole.length;\n    }\n  }\n\n  function sidewalls(contour, layeroffset) {\n    var j, k;\n    i = contour.length;\n\n    while (--i >= 0) {\n      j = i;\n      k = i - 1;\n      if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n      var s = 0,\n          sl = steps + bevelSegments * 2;\n\n      for (s = 0; s < sl; s++) {\n        var slen1 = vlen * s;\n        var slen2 = vlen * (s + 1);\n        var a = layeroffset + j + slen1,\n            b = layeroffset + k + slen1,\n            c = layeroffset + k + slen2,\n            d = layeroffset + j + slen2;\n        f4(a, b, c, d, contour, s, sl, j, k);\n      }\n    }\n  }\n\n  function v(x, y, z) {\n    scope.vertices.push(new THREE.Vector3(x, y, z));\n  }\n\n  function f3(a, b, c) {\n    a += shapesOffset;\n    b += shapesOffset;\n    c += shapesOffset;\n    scope.faces.push(new THREE.Face3(a, b, c, null, null, 0));\n    var uvs = uvgen.generateTopUV(scope, a, b, c);\n    scope.faceVertexUvs[0].push(uvs);\n  }\n\n  function f4(a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2) {\n    a += shapesOffset;\n    b += shapesOffset;\n    c += shapesOffset;\n    d += shapesOffset;\n    scope.faces.push(new THREE.Face3(a, b, d, null, null, 1));\n    scope.faces.push(new THREE.Face3(b, c, d, null, null, 1));\n    var uvs = uvgen.generateSideWallUV(scope, a, b, c, d);\n    scope.faceVertexUvs[0].push([uvs[0], uvs[1], uvs[3]]);\n    scope.faceVertexUvs[0].push([uvs[1], uvs[2], uvs[3]]);\n  }\n};\n\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\n  generateTopUV: function generateTopUV(geometry, indexA, indexB, indexC) {\n    var vertices = geometry.vertices;\n    var a = vertices[indexA];\n    var b = vertices[indexB];\n    var c = vertices[indexC];\n    return [new THREE.Vector2(a.x, a.y), new THREE.Vector2(b.x, b.y), new THREE.Vector2(c.x, c.y)];\n  },\n  generateSideWallUV: function generateSideWallUV(geometry, indexA, indexB, indexC, indexD) {\n    var vertices = geometry.vertices;\n    var a = vertices[indexA];\n    var b = vertices[indexB];\n    var c = vertices[indexC];\n    var d = vertices[indexD];\n\n    if (Math.abs(a.y - b.y) < 0.01) {\n      return [new THREE.Vector2(a.x, 1 - a.z), new THREE.Vector2(b.x, 1 - b.z), new THREE.Vector2(c.x, 1 - c.z), new THREE.Vector2(d.x, 1 - d.z)];\n    } else {\n      return [new THREE.Vector2(a.y, 1 - a.z), new THREE.Vector2(b.y, 1 - b.z), new THREE.Vector2(c.y, 1 - c.z), new THREE.Vector2(d.y, 1 - d.z)];\n    }\n  }\n}; // File:src/extras/geometries/ShapeGeometry.js\n\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\n\nTHREE.ShapeGeometry = function (shapes, options) {\n  THREE.Geometry.call(this);\n  this.type = 'ShapeGeometry';\n  if (Array.isArray(shapes) === false) shapes = [shapes];\n  this.addShapeList(shapes, options);\n  this.computeFaceNormals();\n};\n\nTHREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\n\nTHREE.ShapeGeometry.prototype.addShapeList = function (shapes, options) {\n  for (var i = 0, l = shapes.length; i < l; i++) {\n    this.addShape(shapes[i], options);\n  }\n\n  return this;\n};\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\n\n\nTHREE.ShapeGeometry.prototype.addShape = function (shape, options) {\n  if (options === undefined) options = {};\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n  var material = options.material;\n  var uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator; //\n\n  var i, l, hole;\n  var shapesOffset = this.vertices.length;\n  var shapePoints = shape.extractPoints(curveSegments);\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n  var reverse = !THREE.ShapeUtils.isClockWise(vertices);\n\n  if (reverse) {\n    vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n    for (i = 0, l = holes.length; i < l; i++) {\n      hole = holes[i];\n\n      if (THREE.ShapeUtils.isClockWise(hole)) {\n        holes[i] = hole.reverse();\n      }\n    }\n\n    reverse = false;\n  }\n\n  var faces = THREE.ShapeUtils.triangulateShape(vertices, holes); // Vertices\n\n  for (i = 0, l = holes.length; i < l; i++) {\n    hole = holes[i];\n    vertices = vertices.concat(hole);\n  } //\n\n\n  var vert,\n      vlen = vertices.length;\n  var face,\n      flen = faces.length;\n\n  for (i = 0; i < vlen; i++) {\n    vert = vertices[i];\n    this.vertices.push(new THREE.Vector3(vert.x, vert.y, 0));\n  }\n\n  for (i = 0; i < flen; i++) {\n    face = faces[i];\n    var a = face[0] + shapesOffset;\n    var b = face[1] + shapesOffset;\n    var c = face[2] + shapesOffset;\n    this.faces.push(new THREE.Face3(a, b, c, null, null, material));\n    this.faceVertexUvs[0].push(uvgen.generateTopUV(this, a, b, c));\n  }\n}; // File:src/extras/geometries/LatheBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\n// points - to create a closed torus, one must use a set of points\n//    like so: [ a, b, c, d, a ], see first is the same as last.\n// segments - the number of circumference segments to create\n// phiStart - the starting radian\n// phiLength - the radian (0 to 2PI) range of the lathed section\n//    2PI is a closed lathe, less than 2PI is a portion.\n\n\nTHREE.LatheBufferGeometry = function (points, segments, phiStart, phiLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'LatheBufferGeometry';\n  this.parameters = {\n    points: points,\n    segments: segments,\n    phiStart: phiStart,\n    phiLength: phiLength\n  };\n  segments = Math.floor(segments) || 12;\n  phiStart = phiStart || 0;\n  phiLength = phiLength || Math.PI * 2; // clamp phiLength so it's in range of [ 0, 2PI ]\n\n  phiLength = THREE.Math.clamp(phiLength, 0, Math.PI * 2); // these are used to calculate buffer length\n\n  var vertexCount = (segments + 1) * points.length;\n  var indexCount = segments * points.length * 2 * 3; // buffers\n\n  var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n  var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // helper variables\n\n  var index = 0,\n      indexOffset = 0,\n      base;\n  var inversePointLength = 1.0 / (points.length - 1);\n  var inverseSegments = 1.0 / segments;\n  var vertex = new THREE.Vector3();\n  var uv = new THREE.Vector2();\n  var i, j; // generate vertices and uvs\n\n  for (i = 0; i <= segments; i++) {\n    var phi = phiStart + i * inverseSegments * phiLength;\n    var sin = Math.sin(phi);\n    var cos = Math.cos(phi);\n\n    for (j = 0; j <= points.length - 1; j++) {\n      // vertex\n      vertex.x = points[j].x * sin;\n      vertex.y = points[j].y;\n      vertex.z = points[j].x * cos;\n      vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // uv\n\n      uv.x = i / segments;\n      uv.y = j / (points.length - 1);\n      uvs.setXY(index, uv.x, uv.y); // increase index\n\n      index++;\n    }\n  } // generate indices\n\n\n  for (i = 0; i < segments; i++) {\n    for (j = 0; j < points.length - 1; j++) {\n      base = j + i * points.length; // indices\n\n      var a = base;\n      var b = base + points.length;\n      var c = base + points.length + 1;\n      var d = base + 1; // face one\n\n      indices.setX(indexOffset, a);\n      indexOffset++;\n      indices.setX(indexOffset, b);\n      indexOffset++;\n      indices.setX(indexOffset, d);\n      indexOffset++; // face two\n\n      indices.setX(indexOffset, b);\n      indexOffset++;\n      indices.setX(indexOffset, c);\n      indexOffset++;\n      indices.setX(indexOffset, d);\n      indexOffset++;\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', vertices);\n  this.addAttribute('uv', uvs); // generate normals\n\n  this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n  // because the corresponding vertices are identical (but still have different UVs).\n\n  if (phiLength === Math.PI * 2) {\n    var normals = this.attributes.normal.array;\n    var n1 = new THREE.Vector3();\n    var n2 = new THREE.Vector3();\n    var n = new THREE.Vector3(); // this is the buffer offset for the last line of vertices\n\n    base = segments * points.length * 3;\n\n    for (i = 0, j = 0; i < points.length; i++, j += 3) {\n      // select the normal of the vertex in the first line\n      n1.x = normals[j + 0];\n      n1.y = normals[j + 1];\n      n1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n      n2.x = normals[base + j + 0];\n      n2.y = normals[base + j + 1];\n      n2.z = normals[base + j + 2]; // average normals\n\n      n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n      normals[j + 0] = normals[base + j + 0] = n.x;\n      normals[j + 1] = normals[base + j + 1] = n.y;\n      normals[j + 2] = normals[base + j + 2] = n.z;\n    } // next row\n\n  }\n};\n\nTHREE.LatheBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry; // File:src/extras/geometries/LatheGeometry.js\n\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n */\n// points - to create a closed torus, one must use a set of points\n//    like so: [ a, b, c, d, a ], see first is the same as last.\n// segments - the number of circumference segments to create\n// phiStart - the starting radian\n// phiLength - the radian (0 to 2PI) range of the lathed section\n//    2PI is a closed lathe, less than 2PI is a portion.\n\nTHREE.LatheGeometry = function (points, segments, phiStart, phiLength) {\n  THREE.Geometry.call(this);\n  this.type = 'LatheGeometry';\n  this.parameters = {\n    points: points,\n    segments: segments,\n    phiStart: phiStart,\n    phiLength: phiLength\n  };\n  this.fromBufferGeometry(new THREE.LatheBufferGeometry(points, segments, phiStart, phiLength));\n  this.mergeVertices();\n};\n\nTHREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry; // File:src/extras/geometries/PlaneGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\n\nTHREE.PlaneGeometry = function (width, height, widthSegments, heightSegments) {\n  THREE.Geometry.call(this);\n  this.type = 'PlaneGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  this.fromBufferGeometry(new THREE.PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n};\n\nTHREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry; // File:src/extras/geometries/PlaneBufferGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\n\nTHREE.PlaneBufferGeometry = function (width, height, widthSegments, heightSegments) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'PlaneBufferGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  var width_half = width / 2;\n  var height_half = height / 2;\n  var gridX = Math.floor(widthSegments) || 1;\n  var gridY = Math.floor(heightSegments) || 1;\n  var gridX1 = gridX + 1;\n  var gridY1 = gridY + 1;\n  var segment_width = width / gridX;\n  var segment_height = height / gridY;\n  var vertices = new Float32Array(gridX1 * gridY1 * 3);\n  var normals = new Float32Array(gridX1 * gridY1 * 3);\n  var uvs = new Float32Array(gridX1 * gridY1 * 2);\n  var offset = 0;\n  var offset2 = 0;\n\n  for (var iy = 0; iy < gridY1; iy++) {\n    var y = iy * segment_height - height_half;\n\n    for (var ix = 0; ix < gridX1; ix++) {\n      var x = ix * segment_width - width_half;\n      vertices[offset] = x;\n      vertices[offset + 1] = -y;\n      normals[offset + 2] = 1;\n      uvs[offset2] = ix / gridX;\n      uvs[offset2 + 1] = 1 - iy / gridY;\n      offset += 3;\n      offset2 += 2;\n    }\n  }\n\n  offset = 0;\n  var indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n\n  for (var iy = 0; iy < gridY; iy++) {\n    for (var ix = 0; ix < gridX; ix++) {\n      var a = ix + gridX1 * iy;\n      var b = ix + gridX1 * (iy + 1);\n      var c = ix + 1 + gridX1 * (iy + 1);\n      var d = ix + 1 + gridX1 * iy;\n      indices[offset] = a;\n      indices[offset + 1] = b;\n      indices[offset + 2] = d;\n      indices[offset + 3] = b;\n      indices[offset + 4] = c;\n      indices[offset + 5] = d;\n      offset += 6;\n    }\n  }\n\n  this.setIndex(new THREE.BufferAttribute(indices, 1));\n  this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n};\n\nTHREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry; // File:src/extras/geometries/RingBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\n\nTHREE.RingBufferGeometry = function (innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'RingBufferGeometry';\n  this.parameters = {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    thetaSegments: thetaSegments,\n    phiSegments: phiSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  innerRadius = innerRadius || 20;\n  outerRadius = outerRadius || 50;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n  phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 1; // these are used to calculate buffer length\n\n  var vertexCount = (thetaSegments + 1) * (phiSegments + 1);\n  var indexCount = thetaSegments * phiSegments * 2 * 3; // buffers\n\n  var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n  var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // some helper variables\n\n  var index = 0,\n      indexOffset = 0,\n      segment;\n  var radius = innerRadius;\n  var radiusStep = (outerRadius - innerRadius) / phiSegments;\n  var vertex = new THREE.Vector3();\n  var uv = new THREE.Vector2();\n  var j, i; // generate vertices, normals and uvs\n  // values are generate from the inside of the ring to the outside\n\n  for (j = 0; j <= phiSegments; j++) {\n    for (i = 0; i <= thetaSegments; i++) {\n      segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal\n\n      normals.setXYZ(index, 0, 0, 1); // uv\n\n      uv.x = (vertex.x / outerRadius + 1) / 2;\n      uv.y = (vertex.y / outerRadius + 1) / 2;\n      uvs.setXY(index, uv.x, uv.y); // increase index\n\n      index++;\n    } // increase the radius for next row of vertices\n\n\n    radius += radiusStep;\n  } // generate indices\n\n\n  for (j = 0; j < phiSegments; j++) {\n    var thetaSegmentLevel = j * (thetaSegments + 1);\n\n    for (i = 0; i < thetaSegments; i++) {\n      segment = i + thetaSegmentLevel; // indices\n\n      var a = segment;\n      var b = segment + thetaSegments + 1;\n      var c = segment + thetaSegments + 2;\n      var d = segment + 1; // face one\n\n      indices.setX(indexOffset, a);\n      indexOffset++;\n      indices.setX(indexOffset, b);\n      indexOffset++;\n      indices.setX(indexOffset, c);\n      indexOffset++; // face two\n\n      indices.setX(indexOffset, a);\n      indexOffset++;\n      indices.setX(indexOffset, c);\n      indexOffset++;\n      indices.setX(indexOffset, d);\n      indexOffset++;\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', vertices);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs);\n};\n\nTHREE.RingBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry; // File:src/extras/geometries/RingGeometry.js\n\n/**\r\n * @author Kaleb Murphy\r\n */\n\nTHREE.RingGeometry = function (innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'RingGeometry';\n  this.parameters = {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    thetaSegments: thetaSegments,\n    phiSegments: phiSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength));\n};\n\nTHREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry; // File:src/extras/geometries/SphereGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.SphereGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'SphereGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n};\n\nTHREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry; // File:src/extras/geometries/SphereBufferGeometry.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\n\nTHREE.SphereBufferGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'SphereBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n  heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n  phiStart = phiStart !== undefined ? phiStart : 0;\n  phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n  var thetaEnd = thetaStart + thetaLength;\n  var vertexCount = (widthSegments + 1) * (heightSegments + 1);\n  var positions = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2);\n  var index = 0,\n      vertices = [],\n      normal = new THREE.Vector3();\n\n  for (var y = 0; y <= heightSegments; y++) {\n    var verticesRow = [];\n    var v = y / heightSegments;\n\n    for (var x = 0; x <= widthSegments; x++) {\n      var u = x / widthSegments;\n      var px = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      var py = radius * Math.cos(thetaStart + v * thetaLength);\n      var pz = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      normal.set(px, py, pz).normalize();\n      positions.setXYZ(index, px, py, pz);\n      normals.setXYZ(index, normal.x, normal.y, normal.z);\n      uvs.setXY(index, u, 1 - v);\n      verticesRow.push(index);\n      index++;\n    }\n\n    vertices.push(verticesRow);\n  }\n\n  var indices = [];\n\n  for (var y = 0; y < heightSegments; y++) {\n    for (var x = 0; x < widthSegments; x++) {\n      var v1 = vertices[y][x + 1];\n      var v2 = vertices[y][x];\n      var v3 = vertices[y + 1][x];\n      var v4 = vertices[y + 1][x + 1];\n      if (y !== 0 || thetaStart > 0) indices.push(v1, v2, v4);\n      if (y !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(v2, v3, v4);\n    }\n  }\n\n  this.setIndex(new (positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute)(indices, 1));\n  this.addAttribute('position', positions);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs);\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.SphereBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry; // File:src/extras/geometries/TextGeometry.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  font: <THREE.Font>, // font\r\n *\r\n *  size: <float>, // size of the text\r\n *  height: <float>, // thickness to extrude text\r\n *  curveSegments: <int>, // number of points on the curves\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into text bevel goes\r\n *  bevelSize: <float> // how far from text outline is bevel\r\n * }\r\n */\n\nTHREE.TextGeometry = function (text, parameters) {\n  parameters = parameters || {};\n  var font = parameters.font;\n\n  if (font instanceof THREE.Font === false) {\n    console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n    return new THREE.Geometry();\n  }\n\n  var shapes = font.generateShapes(text, parameters.size, parameters.curveSegments); // translate parameters to ExtrudeGeometry API\n\n  parameters.amount = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n  if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n  if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n  if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n  THREE.ExtrudeGeometry.call(this, shapes, parameters);\n  this.type = 'TextGeometry';\n};\n\nTHREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype);\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry; // File:src/extras/geometries/TorusBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\n\nTHREE.TorusBufferGeometry = function (radius, tube, radialSegments, tubularSegments, arc) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'TorusBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n  radius = radius || 100;\n  tube = tube || 40;\n  radialSegments = Math.floor(radialSegments) || 8;\n  tubularSegments = Math.floor(tubularSegments) || 6;\n  arc = arc || Math.PI * 2; // used to calculate buffer length\n\n  var vertexCount = (radialSegments + 1) * (tubularSegments + 1);\n  var indexCount = radialSegments * tubularSegments * 2 * 3; // buffers\n\n  var indices = new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount);\n  var vertices = new Float32Array(vertexCount * 3);\n  var normals = new Float32Array(vertexCount * 3);\n  var uvs = new Float32Array(vertexCount * 2); // offset variables\n\n  var vertexBufferOffset = 0;\n  var uvBufferOffset = 0;\n  var indexBufferOffset = 0; // helper variables\n\n  var center = new THREE.Vector3();\n  var vertex = new THREE.Vector3();\n  var normal = new THREE.Vector3();\n  var j, i; // generate vertices, normals and uvs\n\n  for (j = 0; j <= radialSegments; j++) {\n    for (i = 0; i <= tubularSegments; i++) {\n      var u = i / tubularSegments * arc;\n      var v = j / radialSegments * Math.PI * 2; // vertex\n\n      vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n      vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n      vertex.z = tube * Math.sin(v);\n      vertices[vertexBufferOffset] = vertex.x;\n      vertices[vertexBufferOffset + 1] = vertex.y;\n      vertices[vertexBufferOffset + 2] = vertex.z; // this vector is used to calculate the normal\n\n      center.x = radius * Math.cos(u);\n      center.y = radius * Math.sin(u); // normal\n\n      normal.subVectors(vertex, center).normalize();\n      normals[vertexBufferOffset] = normal.x;\n      normals[vertexBufferOffset + 1] = normal.y;\n      normals[vertexBufferOffset + 2] = normal.z; // uv\n\n      uvs[uvBufferOffset] = i / tubularSegments;\n      uvs[uvBufferOffset + 1] = j / radialSegments; // update offsets\n\n      vertexBufferOffset += 3;\n      uvBufferOffset += 2;\n    }\n  } // generate indices\n\n\n  for (j = 1; j <= radialSegments; j++) {\n    for (i = 1; i <= tubularSegments; i++) {\n      // indices\n      var a = (tubularSegments + 1) * j + i - 1;\n      var b = (tubularSegments + 1) * (j - 1) + i - 1;\n      var c = (tubularSegments + 1) * (j - 1) + i;\n      var d = (tubularSegments + 1) * j + i; // face one\n\n      indices[indexBufferOffset] = a;\n      indices[indexBufferOffset + 1] = b;\n      indices[indexBufferOffset + 2] = d; // face two\n\n      indices[indexBufferOffset + 3] = b;\n      indices[indexBufferOffset + 4] = c;\n      indices[indexBufferOffset + 5] = d; // update offset\n\n      indexBufferOffset += 6;\n    }\n  } // build geometry\n\n\n  this.setIndex(new THREE.BufferAttribute(indices, 1));\n  this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n};\n\nTHREE.TorusBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry; // File:src/extras/geometries/TorusGeometry.js\n\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\n\nTHREE.TorusGeometry = function (radius, tube, radialSegments, tubularSegments, arc) {\n  THREE.Geometry.call(this);\n  this.type = 'TorusGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n  this.fromBufferGeometry(new THREE.TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc));\n};\n\nTHREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry; // File:src/extras/geometries/TorusKnotBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n *\r\n * see: http://www.blackpawn.com/texts/pqtorus/\r\n */\n\nTHREE.TorusKnotBufferGeometry = function (radius, tube, tubularSegments, radialSegments, p, q) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'TorusKnotBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    tubularSegments: tubularSegments,\n    radialSegments: radialSegments,\n    p: p,\n    q: q\n  };\n  radius = radius || 100;\n  tube = tube || 40;\n  tubularSegments = Math.floor(tubularSegments) || 64;\n  radialSegments = Math.floor(radialSegments) || 8;\n  p = p || 2;\n  q = q || 3; // used to calculate buffer length\n\n  var vertexCount = (radialSegments + 1) * (tubularSegments + 1);\n  var indexCount = radialSegments * tubularSegments * 2 * 3; // buffers\n\n  var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n  var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // helper variables\n\n  var i,\n      j,\n      index = 0,\n      indexOffset = 0;\n  var vertex = new THREE.Vector3();\n  var normal = new THREE.Vector3();\n  var uv = new THREE.Vector2();\n  var P1 = new THREE.Vector3();\n  var P2 = new THREE.Vector3();\n  var B = new THREE.Vector3();\n  var T = new THREE.Vector3();\n  var N = new THREE.Vector3(); // generate vertices, normals and uvs\n\n  for (i = 0; i <= tubularSegments; ++i) {\n    // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n    var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n    // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n    calculatePositionOnCurve(u, p, q, radius, P1);\n    calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n    T.subVectors(P2, P1);\n    N.addVectors(P2, P1);\n    B.crossVectors(T, N);\n    N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n    B.normalize();\n    N.normalize();\n\n    for (j = 0; j <= radialSegments; ++j) {\n      // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n      // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n      var v = j / radialSegments * Math.PI * 2;\n      var cx = -tube * Math.cos(v);\n      var cy = tube * Math.sin(v); // now calculate the final vertex position.\n      // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n      vertex.x = P1.x + (cx * N.x + cy * B.x);\n      vertex.y = P1.y + (cx * N.y + cy * B.y);\n      vertex.z = P1.z + (cx * N.z + cy * B.z); // vertex\n\n      vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n      normal.subVectors(vertex, P1).normalize();\n      normals.setXYZ(index, normal.x, normal.y, normal.z); // uv\n\n      uv.x = i / tubularSegments;\n      uv.y = j / radialSegments;\n      uvs.setXY(index, uv.x, uv.y); // increase index\n\n      index++;\n    }\n  } // generate indices\n\n\n  for (j = 1; j <= tubularSegments; j++) {\n    for (i = 1; i <= radialSegments; i++) {\n      // indices\n      var a = (radialSegments + 1) * (j - 1) + (i - 1);\n      var b = (radialSegments + 1) * j + (i - 1);\n      var c = (radialSegments + 1) * j + i;\n      var d = (radialSegments + 1) * (j - 1) + i; // face one\n\n      indices.setX(indexOffset, a);\n      indexOffset++;\n      indices.setX(indexOffset, b);\n      indexOffset++;\n      indices.setX(indexOffset, d);\n      indexOffset++; // face two\n\n      indices.setX(indexOffset, b);\n      indexOffset++;\n      indices.setX(indexOffset, c);\n      indexOffset++;\n      indices.setX(indexOffset, d);\n      indexOffset++;\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', vertices);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs); // this function calculates the current position on the torus curve\n\n  function calculatePositionOnCurve(u, p, q, radius, position) {\n    var cu = Math.cos(u);\n    var su = Math.sin(u);\n    var quOverP = q / p * u;\n    var cs = Math.cos(quOverP);\n    position.x = radius * (2 + cs) * 0.5 * cu;\n    position.y = radius * (2 + cs) * su * 0.5;\n    position.z = radius * Math.sin(quOverP) * 0.5;\n  }\n};\n\nTHREE.TorusKnotBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry; // File:src/extras/geometries/TorusKnotGeometry.js\n\n/**\r\n * @author oosmoxiecode\r\n */\n\nTHREE.TorusKnotGeometry = function (radius, tube, tubularSegments, radialSegments, p, q, heightScale) {\n  THREE.Geometry.call(this);\n  this.type = 'TorusKnotGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    tubularSegments: tubularSegments,\n    radialSegments: radialSegments,\n    p: p,\n    q: q\n  };\n  if (heightScale !== undefined) console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');\n  this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q));\n  this.mergeVertices();\n};\n\nTHREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry; // File:src/extras/geometries/TubeGeometry.js\n\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\n\nTHREE.TubeGeometry = function (path, segments, radius, radialSegments, closed, taper) {\n  THREE.Geometry.call(this);\n  this.type = 'TubeGeometry';\n  this.parameters = {\n    path: path,\n    segments: segments,\n    radius: radius,\n    radialSegments: radialSegments,\n    closed: closed,\n    taper: taper\n  };\n  segments = segments || 64;\n  radius = radius || 1;\n  radialSegments = radialSegments || 8;\n  closed = closed || false;\n  taper = taper || THREE.TubeGeometry.NoTaper;\n  var grid = [];\n  var scope = this,\n      tangent,\n      normal,\n      binormal,\n      numpoints = segments + 1,\n      u,\n      v,\n      r,\n      cx,\n      cy,\n      pos,\n      pos2 = new THREE.Vector3(),\n      i,\n      j,\n      ip,\n      jp,\n      a,\n      b,\n      c,\n      d,\n      uva,\n      uvb,\n      uvc,\n      uvd;\n  var frames = new THREE.TubeGeometry.FrenetFrames(path, segments, closed),\n      tangents = frames.tangents,\n      normals = frames.normals,\n      binormals = frames.binormals; // proxy internals\n\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals;\n\n  function vert(x, y, z) {\n    return scope.vertices.push(new THREE.Vector3(x, y, z)) - 1;\n  } // construct the grid\n\n\n  for (i = 0; i < numpoints; i++) {\n    grid[i] = [];\n    u = i / (numpoints - 1);\n    pos = path.getPointAt(u);\n    tangent = tangents[i];\n    normal = normals[i];\n    binormal = binormals[i];\n    r = radius * taper(u);\n\n    for (j = 0; j < radialSegments; j++) {\n      v = j / radialSegments * 2 * Math.PI;\n      cx = -r * Math.cos(v); // TODO: Hack: Negating it so it faces outside.\n\n      cy = r * Math.sin(v);\n      pos2.copy(pos);\n      pos2.x += cx * normal.x + cy * binormal.x;\n      pos2.y += cx * normal.y + cy * binormal.y;\n      pos2.z += cx * normal.z + cy * binormal.z;\n      grid[i][j] = vert(pos2.x, pos2.y, pos2.z);\n    }\n  } // construct the mesh\n\n\n  for (i = 0; i < segments; i++) {\n    for (j = 0; j < radialSegments; j++) {\n      ip = closed ? (i + 1) % segments : i + 1;\n      jp = (j + 1) % radialSegments;\n      a = grid[i][j]; // *** NOT NECESSARILY PLANAR ! ***\n\n      b = grid[ip][j];\n      c = grid[ip][jp];\n      d = grid[i][jp];\n      uva = new THREE.Vector2(i / segments, j / radialSegments);\n      uvb = new THREE.Vector2((i + 1) / segments, j / radialSegments);\n      uvc = new THREE.Vector2((i + 1) / segments, (j + 1) / radialSegments);\n      uvd = new THREE.Vector2(i / segments, (j + 1) / radialSegments);\n      this.faces.push(new THREE.Face3(a, b, d));\n      this.faceVertexUvs[0].push([uva, uvb, uvd]);\n      this.faces.push(new THREE.Face3(b, c, d));\n      this.faceVertexUvs[0].push([uvb.clone(), uvc, uvd.clone()]);\n    }\n  }\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n};\n\nTHREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\n\nTHREE.TubeGeometry.NoTaper = function (u) {\n  return 1;\n};\n\nTHREE.TubeGeometry.SinusoidalTaper = function (u) {\n  return Math.sin(Math.PI * u);\n}; // For computing of Frenet frames, exposing the tangents, normals and binormals the spline\n\n\nTHREE.TubeGeometry.FrenetFrames = function (path, segments, closed) {\n  var normal = new THREE.Vector3(),\n      tangents = [],\n      normals = [],\n      binormals = [],\n      vec = new THREE.Vector3(),\n      mat = new THREE.Matrix4(),\n      numpoints = segments + 1,\n      theta,\n      smallest,\n      tx,\n      ty,\n      tz,\n      i,\n      u; // expose internals\n\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals; // compute the tangent vectors for each segment on the path\n\n  for (i = 0; i < numpoints; i++) {\n    u = i / (numpoints - 1);\n    tangents[i] = path.getTangentAt(u);\n    tangents[i].normalize();\n  }\n\n  initialNormal3();\n  /*\r\n  function initialNormal1(lastBinormal) {\r\n  \t// fixed start binormal. Has dangers of 0 vectors\r\n  \tnormals[ 0 ] = new THREE.Vector3();\r\n  \tbinormals[ 0 ] = new THREE.Vector3();\r\n  \tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n  \tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n  \tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n  }\r\n  \n  function initialNormal2() {\r\n  \n  \t// This uses the Frenet-Serret formula for deriving binormal\r\n  \tvar t2 = path.getTangentAt( epsilon );\r\n  \n  \tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n  \tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n  \n  \tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n  \tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n  \n  }\r\n  */\n\n  function initialNormal3() {\n    // select an initial normal vector perpendicular to the first tangent vector,\n    // and in the direction of the smallest tangent xyz component\n    normals[0] = new THREE.Vector3();\n    binormals[0] = new THREE.Vector3();\n    smallest = Number.MAX_VALUE;\n    tx = Math.abs(tangents[0].x);\n    ty = Math.abs(tangents[0].y);\n    tz = Math.abs(tangents[0].z);\n\n    if (tx <= smallest) {\n      smallest = tx;\n      normal.set(1, 0, 0);\n    }\n\n    if (ty <= smallest) {\n      smallest = ty;\n      normal.set(0, 1, 0);\n    }\n\n    if (tz <= smallest) {\n      normal.set(0, 0, 1);\n    }\n\n    vec.crossVectors(tangents[0], normal).normalize();\n    normals[0].crossVectors(tangents[0], vec);\n    binormals[0].crossVectors(tangents[0], normals[0]);\n  } // compute the slowly-varying normal and binormal vectors for each segment on the path\n\n\n  for (i = 1; i < numpoints; i++) {\n    normals[i] = normals[i - 1].clone();\n    binormals[i] = binormals[i - 1].clone();\n    vec.crossVectors(tangents[i - 1], tangents[i]);\n\n    if (vec.length() > Number.EPSILON) {\n      vec.normalize();\n      theta = Math.acos(THREE.Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n      normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n    }\n\n    binormals[i].crossVectors(tangents[i], normals[i]);\n  } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n  if (closed) {\n    theta = Math.acos(THREE.Math.clamp(normals[0].dot(normals[numpoints - 1]), -1, 1));\n    theta /= numpoints - 1;\n\n    if (tangents[0].dot(vec.crossVectors(normals[0], normals[numpoints - 1])) > 0) {\n      theta = -theta;\n    }\n\n    for (i = 1; i < numpoints; i++) {\n      // twist a little...\n      normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n      binormals[i].crossVectors(tangents[i], normals[i]);\n    }\n  }\n}; // File:src/extras/geometries/PolyhedronGeometry.js\n\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\n\nTHREE.PolyhedronGeometry = function (vertices, indices, radius, detail) {\n  THREE.Geometry.call(this);\n  this.type = 'PolyhedronGeometry';\n  this.parameters = {\n    vertices: vertices,\n    indices: indices,\n    radius: radius,\n    detail: detail\n  };\n  radius = radius || 1;\n  detail = detail || 0;\n  var that = this;\n\n  for (var i = 0, l = vertices.length; i < l; i += 3) {\n    prepare(new THREE.Vector3(vertices[i], vertices[i + 1], vertices[i + 2]));\n  }\n\n  var p = this.vertices;\n  var faces = [];\n\n  for (var i = 0, j = 0, l = indices.length; i < l; i += 3, j++) {\n    var v1 = p[indices[i]];\n    var v2 = p[indices[i + 1]];\n    var v3 = p[indices[i + 2]];\n    faces[j] = new THREE.Face3(v1.index, v2.index, v3.index, [v1.clone(), v2.clone(), v3.clone()], undefined, j);\n  }\n\n  var centroid = new THREE.Vector3();\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    subdivide(faces[i], detail);\n  } // Handle case when face straddles the seam\n\n\n  for (var i = 0, l = this.faceVertexUvs[0].length; i < l; i++) {\n    var uvs = this.faceVertexUvs[0][i];\n    var x0 = uvs[0].x;\n    var x1 = uvs[1].x;\n    var x2 = uvs[2].x;\n    var max = Math.max(x0, x1, x2);\n    var min = Math.min(x0, x1, x2);\n\n    if (max > 0.9 && min < 0.1) {\n      // 0.9 is somewhat arbitrary\n      if (x0 < 0.2) uvs[0].x += 1;\n      if (x1 < 0.2) uvs[1].x += 1;\n      if (x2 < 0.2) uvs[2].x += 1;\n    }\n  } // Apply radius\n\n\n  for (var i = 0, l = this.vertices.length; i < l; i++) {\n    this.vertices[i].multiplyScalar(radius);\n  } // Merge vertices\n\n\n  this.mergeVertices();\n  this.computeFaceNormals();\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius); // Project vector onto sphere's surface\n\n  function prepare(vector) {\n    var vertex = vector.normalize().clone();\n    vertex.index = that.vertices.push(vertex) - 1; // Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n    var u = azimuth(vector) / 2 / Math.PI + 0.5;\n    var v = inclination(vector) / Math.PI + 0.5;\n    vertex.uv = new THREE.Vector2(u, 1 - v);\n    return vertex;\n  } // Approximate a curved face with recursively sub-divided triangles.\n\n\n  function make(v1, v2, v3, materialIndex) {\n    var face = new THREE.Face3(v1.index, v2.index, v3.index, [v1.clone(), v2.clone(), v3.clone()], undefined, materialIndex);\n    that.faces.push(face);\n    centroid.copy(v1).add(v2).add(v3).divideScalar(3);\n    var azi = azimuth(centroid);\n    that.faceVertexUvs[0].push([correctUV(v1.uv, v1, azi), correctUV(v2.uv, v2, azi), correctUV(v3.uv, v3, azi)]);\n  } // Analytically subdivide a face to the required detail level.\n\n\n  function subdivide(face, detail) {\n    var cols = Math.pow(2, detail);\n    var a = prepare(that.vertices[face.a]);\n    var b = prepare(that.vertices[face.b]);\n    var c = prepare(that.vertices[face.c]);\n    var v = [];\n    var materialIndex = face.materialIndex; // Construct all of the vertices for this subdivision.\n\n    for (var i = 0; i <= cols; i++) {\n      v[i] = [];\n      var aj = prepare(a.clone().lerp(c, i / cols));\n      var bj = prepare(b.clone().lerp(c, i / cols));\n      var rows = cols - i;\n\n      for (var j = 0; j <= rows; j++) {\n        if (j === 0 && i === cols) {\n          v[i][j] = aj;\n        } else {\n          v[i][j] = prepare(aj.clone().lerp(bj, j / rows));\n        }\n      }\n    } // Construct all of the faces.\n\n\n    for (var i = 0; i < cols; i++) {\n      for (var j = 0; j < 2 * (cols - i) - 1; j++) {\n        var k = Math.floor(j / 2);\n\n        if (j % 2 === 0) {\n          make(v[i][k + 1], v[i + 1][k], v[i][k], materialIndex);\n        } else {\n          make(v[i][k + 1], v[i + 1][k + 1], v[i + 1][k], materialIndex);\n        }\n      }\n    }\n  } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n  function azimuth(vector) {\n    return Math.atan2(vector.z, -vector.x);\n  } // Angle above the XZ plane.\n\n\n  function inclination(vector) {\n    return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n  } // Texture fixing helper. Spheres have some odd behaviours.\n\n\n  function correctUV(uv, vector, azimuth) {\n    if (azimuth < 0 && uv.x === 1) uv = new THREE.Vector2(uv.x - 1, uv.y);\n    if (vector.x === 0 && vector.z === 0) uv = new THREE.Vector2(azimuth / 2 / Math.PI + 0.5, uv.y);\n    return uv.clone();\n  }\n};\n\nTHREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry; // File:src/extras/geometries/DodecahedronGeometry.js\n\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\n\nTHREE.DodecahedronGeometry = function (radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var r = 1 / t;\n  var vertices = [// (±1, ±1, ±1)\n  -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n  0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n  -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n  -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n  var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'DodecahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.DodecahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry; // File:src/extras/geometries/IcosahedronGeometry.js\n\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\n\nTHREE.IcosahedronGeometry = function (radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n  var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'IcosahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.IcosahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry; // File:src/extras/geometries/OctahedronGeometry.js\n\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\n\nTHREE.OctahedronGeometry = function (radius, detail) {\n  var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n  var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'OctahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.OctahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry; // File:src/extras/geometries/TetrahedronGeometry.js\n\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\n\nTHREE.TetrahedronGeometry = function (radius, detail) {\n  var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n  var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'TetrahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.TetrahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry; // File:src/extras/geometries/ParametricGeometry.js\n\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\n\nTHREE.ParametricGeometry = function (func, slices, stacks) {\n  THREE.Geometry.call(this);\n  this.type = 'ParametricGeometry';\n  this.parameters = {\n    func: func,\n    slices: slices,\n    stacks: stacks\n  };\n  var verts = this.vertices;\n  var faces = this.faces;\n  var uvs = this.faceVertexUvs[0];\n  var i, j, p;\n  var u, v;\n  var sliceCount = slices + 1;\n\n  for (i = 0; i <= stacks; i++) {\n    v = i / stacks;\n\n    for (j = 0; j <= slices; j++) {\n      u = j / slices;\n      p = func(u, v);\n      verts.push(p);\n    }\n  }\n\n  var a, b, c, d;\n  var uva, uvb, uvc, uvd;\n\n  for (i = 0; i < stacks; i++) {\n    for (j = 0; j < slices; j++) {\n      a = i * sliceCount + j;\n      b = i * sliceCount + j + 1;\n      c = (i + 1) * sliceCount + j + 1;\n      d = (i + 1) * sliceCount + j;\n      uva = new THREE.Vector2(j / slices, i / stacks);\n      uvb = new THREE.Vector2((j + 1) / slices, i / stacks);\n      uvc = new THREE.Vector2((j + 1) / slices, (i + 1) / stacks);\n      uvd = new THREE.Vector2(j / slices, (i + 1) / stacks);\n      faces.push(new THREE.Face3(a, b, d));\n      uvs.push([uva, uvb, uvd]);\n      faces.push(new THREE.Face3(b, c, d));\n      uvs.push([uvb.clone(), uvc, uvd.clone()]);\n    }\n  } // console.log(this);\n  // magic bullet\n  // var diff = this.mergeVertices();\n  // console.log('removed ', diff, ' vertices by merging');\n\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n};\n\nTHREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry; // File:src/extras/geometries/WireframeGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.WireframeGeometry = function (geometry) {\n  THREE.BufferGeometry.call(this);\n  var edge = [0, 0],\n      hash = {};\n\n  function sortFunction(a, b) {\n    return a - b;\n  }\n\n  var keys = ['a', 'b', 'c'];\n\n  if (geometry instanceof THREE.Geometry) {\n    var vertices = geometry.vertices;\n    var faces = geometry.faces;\n    var numEdges = 0; // allocate maximal size\n\n    var edges = new Uint32Array(6 * faces.length);\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0; j < 3; j++) {\n        edge[0] = face[keys[j]];\n        edge[1] = face[keys[(j + 1) % 3]];\n        edge.sort(sortFunction);\n        var key = edge.toString();\n\n        if (hash[key] === undefined) {\n          edges[2 * numEdges] = edge[0];\n          edges[2 * numEdges + 1] = edge[1];\n          hash[key] = true;\n          numEdges++;\n        }\n      }\n    }\n\n    var coords = new Float32Array(numEdges * 2 * 3);\n\n    for (var i = 0, l = numEdges; i < l; i++) {\n      for (var j = 0; j < 2; j++) {\n        var vertex = vertices[edges[2 * i + j]];\n        var index = 6 * i + 3 * j;\n        coords[index + 0] = vertex.x;\n        coords[index + 1] = vertex.y;\n        coords[index + 2] = vertex.z;\n      }\n    }\n\n    this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n  } else if (geometry instanceof THREE.BufferGeometry) {\n    if (geometry.index !== null) {\n      // Indexed BufferGeometry\n      var indices = geometry.index.array;\n      var vertices = geometry.attributes.position;\n      var groups = geometry.groups;\n      var numEdges = 0;\n\n      if (groups.length === 0) {\n        geometry.addGroup(0, indices.length);\n      } // allocate maximal size\n\n\n      var edges = new Uint32Array(2 * indices.length);\n\n      for (var o = 0, ol = groups.length; o < ol; ++o) {\n        var group = groups[o];\n        var start = group.start;\n        var count = group.count;\n\n        for (var i = start, il = start + count; i < il; i += 3) {\n          for (var j = 0; j < 3; j++) {\n            edge[0] = indices[i + j];\n            edge[1] = indices[i + (j + 1) % 3];\n            edge.sort(sortFunction);\n            var key = edge.toString();\n\n            if (hash[key] === undefined) {\n              edges[2 * numEdges] = edge[0];\n              edges[2 * numEdges + 1] = edge[1];\n              hash[key] = true;\n              numEdges++;\n            }\n          }\n        }\n      }\n\n      var coords = new Float32Array(numEdges * 2 * 3);\n\n      for (var i = 0, l = numEdges; i < l; i++) {\n        for (var j = 0; j < 2; j++) {\n          var index = 6 * i + 3 * j;\n          var index2 = edges[2 * i + j];\n          coords[index + 0] = vertices.getX(index2);\n          coords[index + 1] = vertices.getY(index2);\n          coords[index + 2] = vertices.getZ(index2);\n        }\n      }\n\n      this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n    } else {\n      // non-indexed BufferGeometry\n      var vertices = geometry.attributes.position.array;\n      var numEdges = vertices.length / 3;\n      var numTris = numEdges / 3;\n      var coords = new Float32Array(numEdges * 2 * 3);\n\n      for (var i = 0, l = numTris; i < l; i++) {\n        for (var j = 0; j < 3; j++) {\n          var index = 18 * i + 6 * j;\n          var index1 = 9 * i + 3 * j;\n          coords[index + 0] = vertices[index1];\n          coords[index + 1] = vertices[index1 + 1];\n          coords[index + 2] = vertices[index1 + 2];\n          var index2 = 9 * i + 3 * ((j + 1) % 3);\n          coords[index + 3] = vertices[index2];\n          coords[index + 4] = vertices[index2 + 1];\n          coords[index + 5] = vertices[index2 + 2];\n        }\n      }\n\n      this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n    }\n  }\n};\n\nTHREE.WireframeGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry; // File:src/extras/helpers/AxisHelper.js\n\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.AxisHelper = function (size) {\n  size = size || 1;\n  var vertices = new Float32Array([0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size]);\n  var colors = new Float32Array([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1]);\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors\n  });\n  THREE.LineSegments.call(this, geometry, material);\n};\n\nTHREE.AxisHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper; // File:src/extras/helpers/ArrowHelper.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\n\nTHREE.ArrowHelper = function () {\n  var lineGeometry = new THREE.BufferGeometry();\n  lineGeometry.addAttribute('position', new THREE.Float32Attribute([0, 0, 0, 0, 1, 0], 3));\n  var coneGeometry = new THREE.CylinderBufferGeometry(0, 0.5, 1, 5, 1);\n  coneGeometry.translate(0, -0.5, 0);\n  return function ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n    // dir is assumed to be normalized\n    THREE.Object3D.call(this);\n    if (color === undefined) color = 0xffff00;\n    if (length === undefined) length = 1;\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n    this.position.copy(origin);\n    this.line = new THREE.Line(lineGeometry, new THREE.LineBasicMaterial({\n      color: color\n    }));\n    this.line.matrixAutoUpdate = false;\n    this.add(this.line);\n    this.cone = new THREE.Mesh(coneGeometry, new THREE.MeshBasicMaterial({\n      color: color\n    }));\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  };\n}();\n\nTHREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\n\nTHREE.ArrowHelper.prototype.setDirection = function () {\n  var axis = new THREE.Vector3();\n  var radians;\n  return function setDirection(dir) {\n    // dir is assumed to be normalized\n    if (dir.y > 0.99999) {\n      this.quaternion.set(0, 0, 0, 1);\n    } else if (dir.y < -0.99999) {\n      this.quaternion.set(1, 0, 0, 0);\n    } else {\n      axis.set(dir.z, 0, -dir.x).normalize();\n      radians = Math.acos(dir.y);\n      this.quaternion.setFromAxisAngle(axis, radians);\n    }\n  };\n}();\n\nTHREE.ArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n  if (headLength === undefined) headLength = 0.2 * length;\n  if (headWidth === undefined) headWidth = 0.2 * headLength;\n  this.line.scale.set(1, Math.max(0, length - headLength), 1);\n  this.line.updateMatrix();\n  this.cone.scale.set(headWidth, headLength, headWidth);\n  this.cone.position.y = length;\n  this.cone.updateMatrix();\n};\n\nTHREE.ArrowHelper.prototype.setColor = function (color) {\n  this.line.material.color.copy(color);\n  this.cone.material.color.copy(color);\n}; // File:src/extras/helpers/BoxHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.BoxHelper = function (object) {\n  var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n  var positions = new Float32Array(8 * 3);\n  var geometry = new THREE.BufferGeometry();\n  geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n  THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n    color: 0xffff00\n  }));\n\n  if (object !== undefined) {\n    this.update(object);\n  }\n};\n\nTHREE.BoxHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\n\nTHREE.BoxHelper.prototype.update = function () {\n  var box = new THREE.Box3();\n  return function (object) {\n    if (object instanceof THREE.Box3) {\n      box.copy(object);\n    } else {\n      box.setFromObject(object);\n    }\n\n    if (box.isEmpty()) return;\n    var min = box.min;\n    var max = box.max;\n    /*\r\n      5____4\r\n    1/___0/|\r\n    | 6__|_7\r\n    2/___3/\r\n    \t\t0: max.x, max.y, max.z\r\n    1: min.x, max.y, max.z\r\n    2: min.x, min.y, max.z\r\n    3: max.x, min.y, max.z\r\n    4: max.x, max.y, min.z\r\n    5: min.x, max.y, min.z\r\n    6: min.x, min.y, min.z\r\n    7: max.x, min.y, min.z\r\n    */\n\n    var position = this.geometry.attributes.position;\n    var array = position.array;\n    array[0] = max.x;\n    array[1] = max.y;\n    array[2] = max.z;\n    array[3] = min.x;\n    array[4] = max.y;\n    array[5] = max.z;\n    array[6] = min.x;\n    array[7] = min.y;\n    array[8] = max.z;\n    array[9] = max.x;\n    array[10] = min.y;\n    array[11] = max.z;\n    array[12] = max.x;\n    array[13] = max.y;\n    array[14] = min.z;\n    array[15] = min.x;\n    array[16] = max.y;\n    array[17] = min.z;\n    array[18] = min.x;\n    array[19] = min.y;\n    array[20] = min.z;\n    array[21] = max.x;\n    array[22] = min.y;\n    array[23] = min.z;\n    position.needsUpdate = true;\n    this.geometry.computeBoundingSphere();\n  };\n}(); // File:src/extras/helpers/BoundingBoxHelper.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n// a helper to show the world-axis-aligned bounding box for an object\n\n\nTHREE.BoundingBoxHelper = function (object, hex) {\n  var color = hex !== undefined ? hex : 0x888888;\n  this.object = object;\n  this.box = new THREE.Box3();\n  THREE.Mesh.call(this, new THREE.BoxGeometry(1, 1, 1), new THREE.MeshBasicMaterial({\n    color: color,\n    wireframe: true\n  }));\n};\n\nTHREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\n\nTHREE.BoundingBoxHelper.prototype.update = function () {\n  this.box.setFromObject(this.object);\n  this.box.size(this.scale);\n  this.box.center(this.position);\n}; // File:src/extras/helpers/CameraHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\n\n\nTHREE.CameraHelper = function (camera) {\n  var geometry = new THREE.Geometry();\n  var material = new THREE.LineBasicMaterial({\n    color: 0xffffff,\n    vertexColors: THREE.FaceColors\n  });\n  var pointMap = {}; // colors\n\n  var hexFrustum = 0xffaa00;\n  var hexCone = 0xff0000;\n  var hexUp = 0x00aaff;\n  var hexTarget = 0xffffff;\n  var hexCross = 0x333333; // near\n\n  addLine(\"n1\", \"n2\", hexFrustum);\n  addLine(\"n2\", \"n4\", hexFrustum);\n  addLine(\"n4\", \"n3\", hexFrustum);\n  addLine(\"n3\", \"n1\", hexFrustum); // far\n\n  addLine(\"f1\", \"f2\", hexFrustum);\n  addLine(\"f2\", \"f4\", hexFrustum);\n  addLine(\"f4\", \"f3\", hexFrustum);\n  addLine(\"f3\", \"f1\", hexFrustum); // sides\n\n  addLine(\"n1\", \"f1\", hexFrustum);\n  addLine(\"n2\", \"f2\", hexFrustum);\n  addLine(\"n3\", \"f3\", hexFrustum);\n  addLine(\"n4\", \"f4\", hexFrustum); // cone\n\n  addLine(\"p\", \"n1\", hexCone);\n  addLine(\"p\", \"n2\", hexCone);\n  addLine(\"p\", \"n3\", hexCone);\n  addLine(\"p\", \"n4\", hexCone); // up\n\n  addLine(\"u1\", \"u2\", hexUp);\n  addLine(\"u2\", \"u3\", hexUp);\n  addLine(\"u3\", \"u1\", hexUp); // target\n\n  addLine(\"c\", \"t\", hexTarget);\n  addLine(\"p\", \"c\", hexCross); // cross\n\n  addLine(\"cn1\", \"cn2\", hexCross);\n  addLine(\"cn3\", \"cn4\", hexCross);\n  addLine(\"cf1\", \"cf2\", hexCross);\n  addLine(\"cf3\", \"cf4\", hexCross);\n\n  function addLine(a, b, hex) {\n    addPoint(a, hex);\n    addPoint(b, hex);\n  }\n\n  function addPoint(id, hex) {\n    geometry.vertices.push(new THREE.Vector3());\n    geometry.colors.push(new THREE.Color(hex));\n\n    if (pointMap[id] === undefined) {\n      pointMap[id] = [];\n    }\n\n    pointMap[id].push(geometry.vertices.length - 1);\n  }\n\n  THREE.LineSegments.call(this, geometry, material);\n  this.camera = camera;\n  this.camera.updateProjectionMatrix();\n  this.matrix = camera.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.pointMap = pointMap;\n  this.update();\n};\n\nTHREE.CameraHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\n\nTHREE.CameraHelper.prototype.update = function () {\n  var geometry, pointMap;\n  var vector = new THREE.Vector3();\n  var camera = new THREE.Camera();\n\n  function setPoint(point, x, y, z) {\n    vector.set(x, y, z).unproject(camera);\n    var points = pointMap[point];\n\n    if (points !== undefined) {\n      for (var i = 0, il = points.length; i < il; i++) {\n        geometry.vertices[points[i]].copy(vector);\n      }\n    }\n  }\n\n  return function () {\n    geometry = this.geometry;\n    pointMap = this.pointMap;\n    var w = 1,\n        h = 1; // we need just camera projection matrix\n    // world matrix must be identity\n\n    camera.projectionMatrix.copy(this.camera.projectionMatrix); // center / target\n\n    setPoint(\"c\", 0, 0, -1);\n    setPoint(\"t\", 0, 0, 1); // near\n\n    setPoint(\"n1\", -w, -h, -1);\n    setPoint(\"n2\", w, -h, -1);\n    setPoint(\"n3\", -w, h, -1);\n    setPoint(\"n4\", w, h, -1); // far\n\n    setPoint(\"f1\", -w, -h, 1);\n    setPoint(\"f2\", w, -h, 1);\n    setPoint(\"f3\", -w, h, 1);\n    setPoint(\"f4\", w, h, 1); // up\n\n    setPoint(\"u1\", w * 0.7, h * 1.1, -1);\n    setPoint(\"u2\", -w * 0.7, h * 1.1, -1);\n    setPoint(\"u3\", 0, h * 2, -1); // cross\n\n    setPoint(\"cf1\", -w, 0, 1);\n    setPoint(\"cf2\", w, 0, 1);\n    setPoint(\"cf3\", 0, -h, 1);\n    setPoint(\"cf4\", 0, h, 1);\n    setPoint(\"cn1\", -w, 0, -1);\n    setPoint(\"cn2\", w, 0, -1);\n    setPoint(\"cn3\", 0, -h, -1);\n    setPoint(\"cn4\", 0, h, -1);\n    geometry.verticesNeedUpdate = true;\n  };\n}(); // File:src/extras/helpers/DirectionalLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\n\nTHREE.DirectionalLightHelper = function (light, size) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  if (size === undefined) size = 1;\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.Float32Attribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n  var material = new THREE.LineBasicMaterial({\n    fog: false\n  });\n  this.add(new THREE.Line(geometry, material));\n  geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.Float32Attribute([0, 0, 0, 0, 0, 1], 3));\n  this.add(new THREE.Line(geometry, material));\n  this.update();\n};\n\nTHREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\n\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\n  var lightPlane = this.children[0];\n  var targetLine = this.children[1];\n  lightPlane.geometry.dispose();\n  lightPlane.material.dispose();\n  targetLine.geometry.dispose();\n  targetLine.material.dispose();\n};\n\nTHREE.DirectionalLightHelper.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var v3 = new THREE.Vector3();\n  return function () {\n    v1.setFromMatrixPosition(this.light.matrixWorld);\n    v2.setFromMatrixPosition(this.light.target.matrixWorld);\n    v3.subVectors(v2, v1);\n    var lightPlane = this.children[0];\n    var targetLine = this.children[1];\n    lightPlane.lookAt(v3);\n    lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    targetLine.lookAt(v3);\n    targetLine.scale.z = v3.length();\n  };\n}(); // File:src/extras/helpers/EdgesHelper.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\n\n\nTHREE.EdgesHelper = function (object, hex, thresholdAngle) {\n  var color = hex !== undefined ? hex : 0xffffff;\n  THREE.LineSegments.call(this, new THREE.EdgesGeometry(object.geometry, thresholdAngle), new THREE.LineBasicMaterial({\n    color: color\n  }));\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n};\n\nTHREE.EdgesHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper; // File:src/extras/helpers/FaceNormalsHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\nTHREE.FaceNormalsHelper = function (object, size, hex, linewidth) {\n  // FaceNormalsHelper only supports THREE.Geometry\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var width = linewidth !== undefined ? linewidth : 1; //\n\n  var nNormals = 0;\n  var objGeometry = this.object.geometry;\n\n  if (objGeometry instanceof THREE.Geometry) {\n    nNormals = objGeometry.faces.length;\n  } else {\n    console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n  } //\n\n\n  var geometry = new THREE.BufferGeometry();\n  var positions = new THREE.Float32Attribute(nNormals * 2 * 3, 3);\n  geometry.addAttribute('position', positions);\n  THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color,\n    linewidth: width\n  })); //\n\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.FaceNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\n\nTHREE.FaceNormalsHelper.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var normalMatrix = new THREE.Matrix3();\n  return function update() {\n    this.object.updateMatrixWorld(true);\n    normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n    var vertices = objGeometry.vertices;\n    var faces = objGeometry.faces;\n    var idx = 0;\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n      var normal = face.normal;\n      v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);\n      v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n      position.setXYZ(idx, v1.x, v1.y, v1.z);\n      idx = idx + 1;\n      position.setXYZ(idx, v2.x, v2.y, v2.z);\n      idx = idx + 1;\n    }\n\n    position.needsUpdate = true;\n    return this;\n  };\n}(); // File:src/extras/helpers/GridHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.GridHelper = function (size, step, color1, color2) {\n  color1 = new THREE.Color(color1 !== undefined ? color1 : 0x444444);\n  color2 = new THREE.Color(color2 !== undefined ? color2 : 0x888888);\n  var vertices = [];\n  var colors = [];\n\n  for (var i = -size, j = 0; i <= size; i += step) {\n    vertices.push(-size, 0, i, size, 0, i);\n    vertices.push(i, 0, -size, i, 0, size);\n    var color = i === 0 ? color1 : color2;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n  }\n\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.Float32Attribute(vertices, 3));\n  geometry.addAttribute('color', new THREE.Float32Attribute(colors, 3));\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors\n  });\n  THREE.LineSegments.call(this, geometry, material);\n};\n\nTHREE.GridHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\n\nTHREE.GridHelper.prototype.setColors = function () {\n  console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n}; // File:src/extras/helpers/HemisphereLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.HemisphereLightHelper = function (light, sphereSize) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.colors = [new THREE.Color(), new THREE.Color()];\n  var geometry = new THREE.SphereGeometry(sphereSize, 4, 2);\n  geometry.rotateX(-Math.PI / 2);\n\n  for (var i = 0, il = 8; i < il; i++) {\n    geometry.faces[i].color = this.colors[i < 4 ? 0 : 1];\n  }\n\n  var material = new THREE.MeshBasicMaterial({\n    vertexColors: THREE.FaceColors,\n    wireframe: true\n  });\n  this.lightSphere = new THREE.Mesh(geometry, material);\n  this.add(this.lightSphere);\n  this.update();\n};\n\nTHREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\n\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\n  this.lightSphere.geometry.dispose();\n  this.lightSphere.material.dispose();\n};\n\nTHREE.HemisphereLightHelper.prototype.update = function () {\n  var vector = new THREE.Vector3();\n  return function () {\n    this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);\n    this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);\n    this.lightSphere.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n    this.lightSphere.geometry.colorsNeedUpdate = true;\n  };\n}(); // File:src/extras/helpers/PointLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.PointLightHelper = function (light, sphereSize) {\n  this.light = light;\n  this.light.updateMatrixWorld();\n  var geometry = new THREE.SphereBufferGeometry(sphereSize, 4, 2);\n  var material = new THREE.MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  THREE.Mesh.call(this, geometry, material);\n  this.matrix = this.light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  /*\r\n  var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n  var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n  \n  this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n  this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n  \n  var d = light.distance;\r\n  \n  if ( d === 0.0 ) {\r\n  \n  \tthis.lightDistance.visible = false;\r\n  \n  } else {\r\n  \n  \tthis.lightDistance.scale.set( d, d, d );\r\n  \n  }\r\n  \n  this.add( this.lightDistance );\r\n  */\n};\n\nTHREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\n\nTHREE.PointLightHelper.prototype.dispose = function () {\n  this.geometry.dispose();\n  this.material.dispose();\n};\n\nTHREE.PointLightHelper.prototype.update = function () {\n  this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  /*\r\n  var d = this.light.distance;\r\n  \n  if ( d === 0.0 ) {\r\n  \n  \tthis.lightDistance.visible = false;\r\n  \n  } else {\r\n  \n  \tthis.lightDistance.visible = true;\r\n  \tthis.lightDistance.scale.set( d, d, d );\r\n  \n  }\r\n  */\n}; // File:src/extras/helpers/SkeletonHelper.js\n\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\n\n\nTHREE.SkeletonHelper = function (object) {\n  this.bones = this.getBoneList(object);\n  var geometry = new THREE.Geometry();\n\n  for (var i = 0; i < this.bones.length; i++) {\n    var bone = this.bones[i];\n\n    if (bone.parent instanceof THREE.Bone) {\n      geometry.vertices.push(new THREE.Vector3());\n      geometry.vertices.push(new THREE.Vector3());\n      geometry.colors.push(new THREE.Color(0, 0, 1));\n      geometry.colors.push(new THREE.Color(0, 1, 0));\n    }\n  }\n\n  geometry.dynamic = true;\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors,\n    depthTest: false,\n    depthWrite: false,\n    transparent: true\n  });\n  THREE.LineSegments.call(this, geometry, material);\n  this.root = object;\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.SkeletonHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\n\nTHREE.SkeletonHelper.prototype.getBoneList = function (object) {\n  var boneList = [];\n\n  if (object instanceof THREE.Bone) {\n    boneList.push(object);\n  }\n\n  for (var i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, this.getBoneList(object.children[i]));\n  }\n\n  return boneList;\n};\n\nTHREE.SkeletonHelper.prototype.update = function () {\n  var geometry = this.geometry;\n  var matrixWorldInv = new THREE.Matrix4().getInverse(this.root.matrixWorld);\n  var boneMatrix = new THREE.Matrix4();\n  var j = 0;\n\n  for (var i = 0; i < this.bones.length; i++) {\n    var bone = this.bones[i];\n\n    if (bone.parent instanceof THREE.Bone) {\n      boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n      geometry.vertices[j].setFromMatrixPosition(boneMatrix);\n      boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n      geometry.vertices[j + 1].setFromMatrixPosition(boneMatrix);\n      j += 2;\n    }\n  }\n\n  geometry.verticesNeedUpdate = true;\n  geometry.computeBoundingSphere();\n}; // File:src/extras/helpers/SpotLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\n\nTHREE.SpotLightHelper = function (light) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  var geometry = new THREE.BufferGeometry();\n  var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n  for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n    var p1 = i / l * Math.PI * 2;\n    var p2 = j / l * Math.PI * 2;\n    positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n  }\n\n  geometry.addAttribute('position', new THREE.Float32Attribute(positions, 3));\n  var material = new THREE.LineBasicMaterial({\n    fog: false\n  });\n  this.cone = new THREE.LineSegments(geometry, material);\n  this.add(this.cone);\n  this.update();\n};\n\nTHREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\n\nTHREE.SpotLightHelper.prototype.dispose = function () {\n  this.cone.geometry.dispose();\n  this.cone.material.dispose();\n};\n\nTHREE.SpotLightHelper.prototype.update = function () {\n  var vector = new THREE.Vector3();\n  var vector2 = new THREE.Vector3();\n  return function () {\n    var coneLength = this.light.distance ? this.light.distance : 1000;\n    var coneWidth = coneLength * Math.tan(this.light.angle);\n    this.cone.scale.set(coneWidth, coneWidth, coneLength);\n    vector.setFromMatrixPosition(this.light.matrixWorld);\n    vector2.setFromMatrixPosition(this.light.target.matrixWorld);\n    this.cone.lookAt(vector2.sub(vector));\n    this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  };\n}(); // File:src/extras/helpers/VertexNormalsHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\n\nTHREE.VertexNormalsHelper = function (object, size, hex, linewidth) {\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xff0000;\n  var width = linewidth !== undefined ? linewidth : 1; //\n\n  var nNormals = 0;\n  var objGeometry = this.object.geometry;\n\n  if (objGeometry instanceof THREE.Geometry) {\n    nNormals = objGeometry.faces.length * 3;\n  } else if (objGeometry instanceof THREE.BufferGeometry) {\n    nNormals = objGeometry.attributes.normal.count;\n  } //\n\n\n  var geometry = new THREE.BufferGeometry();\n  var positions = new THREE.Float32Attribute(nNormals * 2 * 3, 3);\n  geometry.addAttribute('position', positions);\n  THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color,\n    linewidth: width\n  })); //\n\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.VertexNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\n\nTHREE.VertexNormalsHelper.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var normalMatrix = new THREE.Matrix3();\n  return function update() {\n    var keys = ['a', 'b', 'c'];\n    this.object.updateMatrixWorld(true);\n    normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry instanceof THREE.Geometry) {\n      var vertices = objGeometry.vertices;\n      var faces = objGeometry.faces;\n      var idx = 0;\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          var vertex = vertices[face[keys[j]]];\n          var normal = face.vertexNormals[j];\n          v1.copy(vertex).applyMatrix4(matrixWorld);\n          v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n          position.setXYZ(idx, v1.x, v1.y, v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, v2.x, v2.y, v2.z);\n          idx = idx + 1;\n        }\n      }\n    } else if (objGeometry instanceof THREE.BufferGeometry) {\n      var objPos = objGeometry.attributes.position;\n      var objNorm = objGeometry.attributes.normal;\n      var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n      for (var j = 0, jl = objPos.count; j < jl; j++) {\n        v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n        v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n        v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n        position.setXYZ(idx, v1.x, v1.y, v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, v2.x, v2.y, v2.z);\n        idx = idx + 1;\n      }\n    }\n\n    position.needsUpdate = true;\n    return this;\n  };\n}(); // File:src/extras/helpers/WireframeHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.WireframeHelper = function (object, hex) {\n  var color = hex !== undefined ? hex : 0xffffff;\n  THREE.LineSegments.call(this, new THREE.WireframeGeometry(object.geometry), new THREE.LineBasicMaterial({\n    color: color\n  }));\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n};\n\nTHREE.WireframeHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper; // File:src/extras/objects/ImmediateRenderObject.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.ImmediateRenderObject = function (material) {\n  THREE.Object3D.call(this);\n  this.material = material;\n\n  this.render = function (renderCallback) {};\n};\n\nTHREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject; // File:src/extras/objects/MorphBlendMesh.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.MorphBlendMesh = function (geometry, material) {\n  THREE.Mesh.call(this, geometry, material);\n  this.animationsMap = {};\n  this.animationsList = []; // prepare default animation\n  // (all frames played together in 1 second)\n\n  var numFrames = this.geometry.morphTargets.length;\n  var name = \"__default\";\n  var startFrame = 0;\n  var endFrame = numFrames - 1;\n  var fps = numFrames / 1;\n  this.createAnimation(name, startFrame, endFrame, fps);\n  this.setAnimationWeight(name, 1);\n};\n\nTHREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\n\nTHREE.MorphBlendMesh.prototype.createAnimation = function (name, start, end, fps) {\n  var animation = {\n    start: start,\n    end: end,\n    length: end - start + 1,\n    fps: fps,\n    duration: (end - start) / fps,\n    lastFrame: 0,\n    currentFrame: 0,\n    active: false,\n    time: 0,\n    direction: 1,\n    weight: 1,\n    directionBackwards: false,\n    mirroredLoop: false\n  };\n  this.animationsMap[name] = animation;\n  this.animationsList.push(animation);\n};\n\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function (fps) {\n  var pattern = /([a-z]+)_?(\\d+)/i;\n  var firstAnimation,\n      frameRanges = {};\n  var geometry = this.geometry;\n\n  for (var i = 0, il = geometry.morphTargets.length; i < il; i++) {\n    var morph = geometry.morphTargets[i];\n    var chunks = morph.name.match(pattern);\n\n    if (chunks && chunks.length > 1) {\n      var name = chunks[1];\n      if (!frameRanges[name]) frameRanges[name] = {\n        start: Infinity,\n        end: -Infinity\n      };\n      var range = frameRanges[name];\n      if (i < range.start) range.start = i;\n      if (i > range.end) range.end = i;\n      if (!firstAnimation) firstAnimation = name;\n    }\n  }\n\n  for (var name in frameRanges) {\n    var range = frameRanges[name];\n    this.createAnimation(name, range.start, range.end, fps);\n  }\n\n  this.firstAnimation = firstAnimation;\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.direction = 1;\n    animation.directionBackwards = false;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.direction = -1;\n    animation.directionBackwards = true;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function (name, fps) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.fps = fps;\n    animation.duration = (animation.end - animation.start) / animation.fps;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function (name, duration) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.duration = duration;\n    animation.fps = (animation.end - animation.start) / animation.duration;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function (name, weight) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.weight = weight;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function (name, time) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.time = time;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function (name) {\n  var time = 0;\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    time = animation.time;\n  }\n\n  return time;\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function (name) {\n  var duration = -1;\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    duration = animation.duration;\n  }\n\n  return duration;\n};\n\nTHREE.MorphBlendMesh.prototype.playAnimation = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.time = 0;\n    animation.active = true;\n  } else {\n    console.warn(\"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\");\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.stopAnimation = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.active = false;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.update = function (delta) {\n  for (var i = 0, il = this.animationsList.length; i < il; i++) {\n    var animation = this.animationsList[i];\n    if (!animation.active) continue;\n    var frameTime = animation.duration / animation.length;\n    animation.time += animation.direction * delta;\n\n    if (animation.mirroredLoop) {\n      if (animation.time > animation.duration || animation.time < 0) {\n        animation.direction *= -1;\n\n        if (animation.time > animation.duration) {\n          animation.time = animation.duration;\n          animation.directionBackwards = true;\n        }\n\n        if (animation.time < 0) {\n          animation.time = 0;\n          animation.directionBackwards = false;\n        }\n      }\n    } else {\n      animation.time = animation.time % animation.duration;\n      if (animation.time < 0) animation.time += animation.duration;\n    }\n\n    var keyframe = animation.start + THREE.Math.clamp(Math.floor(animation.time / frameTime), 0, animation.length - 1);\n    var weight = animation.weight;\n\n    if (keyframe !== animation.currentFrame) {\n      this.morphTargetInfluences[animation.lastFrame] = 0;\n      this.morphTargetInfluences[animation.currentFrame] = 1 * weight;\n      this.morphTargetInfluences[keyframe] = 0;\n      animation.lastFrame = animation.currentFrame;\n      animation.currentFrame = keyframe;\n    }\n\n    var mix = animation.time % frameTime / frameTime;\n    if (animation.directionBackwards) mix = 1 - mix;\n\n    if (animation.currentFrame !== animation.lastFrame) {\n      this.morphTargetInfluences[animation.currentFrame] = mix * weight;\n      this.morphTargetInfluences[animation.lastFrame] = (1 - mix) * weight;\n    } else {\n      this.morphTargetInfluences[animation.currentFrame] = weight;\n    }\n  }\n}; // Export the THREE object for **Node.js**, with\n// backwards-compatibility for the old `require()` API. If we're in\n// the browser, add `_` as a global object via a string identifier,\n// for Closure Compiler \"advanced\" mode.\n\n\nif (typeof exports !== 'undefined') {\n  if (typeof module !== 'undefined' && module.exports) {\n    exports = module.exports = THREE;\n  }\n\n  exports.THREE = THREE;\n} else {\n  this['THREE'] = THREE;\n}"],"sourceRoot":""}